{"version":3,"file":"synqlite.module.js","sources":["../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.45.1-build1/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs","../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.45.1-build1/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser-bundler-friendly.js","../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.45.1-build1/node_modules/@sqlite.org/sqlite-wasm/index.mjs","../src/lib/constants.ts","../src/lib/types.ts","../node_modules/.pnpm/tslog@4.9.2/node_modules/tslog/dist/esm/prettyLogStyles.js","../node_modules/.pnpm/tslog@4.9.2/node_modules/tslog/dist/esm/formatTemplate.js","../node_modules/.pnpm/tslog@4.9.2/node_modules/tslog/dist/esm/formatNumberAddZeros.js","../node_modules/.pnpm/tslog@4.9.2/node_modules/tslog/dist/esm/runtime/browser/helper.jsonStringifyRecursive.js","../node_modules/.pnpm/tslog@4.9.2/node_modules/tslog/dist/esm/runtime/browser/util.inspect.polyfil.js","../node_modules/.pnpm/tslog@4.9.2/node_modules/tslog/dist/esm/runtime/browser/index.js","../node_modules/.pnpm/tslog@4.9.2/node_modules/tslog/dist/esm/BaseLogger.js","../node_modules/.pnpm/tslog@4.9.2/node_modules/tslog/dist/esm/urlToObj.js","../node_modules/.pnpm/tslog@4.9.2/node_modules/tslog/dist/esm/index.js","../src/lib/index.ts"],"sourcesContent":["/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n ** SQLITE_VERSION \"3.45.1\"\n ** SQLITE_VERSION_NUMBER 3045001\n ** SQLITE_SOURCE_ID \"2024-01-30 16:01:20 e876e51a0ed5c5b3126f52e532044363a014bc594cfefa87ffb5b82257cc467a\"\n **\n ** Using the Emscripten SDK version 3.1.30.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptDir = import.meta.url;\n\n  return function (config) {\n    var sqlite3InitModule = config || {};\n\n    var Module =\n      typeof sqlite3InitModule != 'undefined' ? sqlite3InitModule : {};\n\n    var readyPromiseResolve, readyPromiseReject;\n    Module['ready'] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    const sqlite3InitModuleState =\n      globalThis.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete globalThis.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule(\n      'globalThis.location =',\n      globalThis.location,\n    );\n\n    const xNameOfInstantiateWasm = false\n      ? 'instantiateWasm'\n      : 'emscripten-bug-17951';\n    Module[xNameOfInstantiateWasm] = function callee(imports, onSuccess) {\n      imports.env.foo = function () {};\n      const uri = Module.locateFile(\n        callee.uri,\n        'undefined' === typeof scriptDirectory ? '' : scriptDirectory,\n      );\n      sqlite3InitModuleState.debugModule('instantiateWasm() uri =', uri);\n      const wfetch = () => fetch(uri, { credentials: 'same-origin' });\n      const loadWasm = WebAssembly.instantiateStreaming\n        ? async () => {\n            return WebAssembly.instantiateStreaming(wfetch(), imports).then(\n              (arg) => onSuccess(arg.instance, arg.module),\n            );\n          }\n        : async () => {\n            return wfetch()\n              .then((response) => response.arrayBuffer())\n              .then((bytes) => WebAssembly.instantiate(bytes, imports))\n              .then((arg) => onSuccess(arg.instance, arg.module));\n          };\n      loadWasm();\n      return {};\n    };\n\n    Module[xNameOfInstantiateWasm].uri = 'sqlite3.wasm';\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary, setWindowTitle;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n\n      if (scriptDirectory.indexOf('blob:') !== 0) {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      } else {\n        scriptDirectory = '';\n      }\n\n      {\n        read_ = (url) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, true);\n          xhr.responseType = 'arraybuffer';\n          xhr.onload = () => {\n            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n\n      setWindowTitle = (title) => (document.title = title);\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.warn.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    if (Module['quit']) quit_ = Module['quit'];\n\n    var STACK_ALIGN = 16;\n    var POINTER_SIZE = 4;\n\n    function getNativeTypeSize(type) {\n      switch (type) {\n        case 'i1':\n        case 'i8':\n        case 'u8':\n          return 1;\n        case 'i16':\n        case 'u16':\n          return 2;\n        case 'i32':\n        case 'u32':\n          return 4;\n        case 'i64':\n        case 'u64':\n          return 8;\n        case 'float':\n          return 4;\n        case 'double':\n          return 8;\n        default: {\n          if (type[type.length - 1] === '*') {\n            return POINTER_SIZE;\n          }\n          if (type[0] === 'i') {\n            const bits = Number(type.substr(1));\n            assert(\n              bits % 8 === 0,\n              'getNativeTypeSize invalid bits ' + bits + ', type ' + type,\n            );\n            return bits / 8;\n          }\n          return 0;\n        }\n      }\n    }\n\n    var wasmBinary;\n    if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    if (typeof WebAssembly != 'object') {\n      abort('no native wasm support detected');\n    }\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    }\n\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    }\n\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n\n    function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    var STACK_SIZE = 524288;\n\n    var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 2147483648 / 65536,\n      });\n    }\n\n    updateMemoryViews();\n\n    INITIAL_MEMORY = wasmMemory.buffer.byteLength;\n\n    var wasmTable;\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function keepRuntimeAlive() {\n      return noExitRuntime;\n    }\n\n    function preRun() {\n      if (Module['preRun']) {\n        if (typeof Module['preRun'] == 'function')\n          Module['preRun'] = [Module['preRun']];\n        while (Module['preRun'].length) {\n          addOnPreRun(Module['preRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      if (Module['postRun']) {\n        if (typeof Module['postRun'] == 'function')\n          Module['postRun'] = [Module['postRun']];\n        while (Module['postRun'].length) {\n          addOnPostRun(Module['postRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      if (Module['onAbort']) {\n        Module['onAbort'](what);\n      }\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n      EXITSTATUS = 1;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n\n    function isFileURI(filename) {\n      return filename.startsWith('file://');\n    }\n\n    var wasmBinaryFile;\n    if (Module['locateFile']) {\n      wasmBinaryFile = 'sqlite3.wasm';\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n    } else {\n      wasmBinaryFile = new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        }\n        throw 'both async and sync fetching of the wasm failed';\n      } catch (err) {\n        abort(err);\n      }\n    }\n\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == 'function') {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' })\n            .then(function (response) {\n              if (!response['ok']) {\n                throw (\n                  \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                );\n              }\n              return response['arrayBuffer']();\n            })\n            .catch(function () {\n              return getBinary(wasmBinaryFile);\n            });\n        }\n      }\n\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n\n    function createWasm() {\n      var info = {\n        env: asmLibraryArg,\n        wasi_snapshot_preview1: asmLibraryArg,\n      };\n\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n\n        Module['asm'] = exports;\n\n        wasmTable = Module['asm']['__indirect_function_table'];\n\n        addOnInit(Module['asm']['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise()\n          .then(function (binary) {\n            return WebAssembly.instantiate(binary, info);\n          })\n          .then(function (instance) {\n            return instance;\n          })\n          .then(receiver, function (reason) {\n            err('failed to asynchronously prepare wasm: ' + reason);\n\n            abort(reason);\n          });\n      }\n\n      function instantiateAsync() {\n        if (\n          !wasmBinary &&\n          typeof WebAssembly.instantiateStreaming == 'function' &&\n          !isDataURI(wasmBinaryFile) &&\n          typeof fetch == 'function'\n        ) {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(\n            function (response) {\n              var result = WebAssembly.instantiateStreaming(response, info);\n\n              return result.then(receiveInstantiationResult, function (reason) {\n                err('wasm streaming compile failed: ' + reason);\n                err('falling back to ArrayBuffer instantiation');\n                return instantiateArrayBuffer(receiveInstantiationResult);\n              });\n            },\n          );\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          var exports = Module['instantiateWasm'](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err('Module.instantiateWasm callback failed with error: ' + e);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n\n    var tempDouble;\n    var tempI64;\n\n    var ASM_CONSTS = {};\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    }\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr >> 0];\n        case 'i8':\n          return HEAP8[ptr >> 0];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort('invalid type for getValue: ' + type);\n      }\n      return null;\n    }\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          (tempI64 = [\n            value >>> 0,\n            ((tempDouble = value),\n            +Math.abs(tempDouble) >= 1.0\n              ? tempDouble > 0.0\n                ? (Math.min(\n                    +Math.floor(tempDouble / 4294967296.0),\n                    4294967295.0,\n                  ) |\n                    0) >>>\n                  0\n                : ~~+Math.ceil(\n                    (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                  ) >>> 0\n              : 0),\n          ]),\n            (HEAP32[ptr >> 2] = tempI64[0]),\n            (HEAP32[(ptr + 4) >> 2] = tempI64[1]);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort('invalid type for setValue: ' + type);\n      }\n    }\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n      join2: (l, r) => {\n        return PATH.normalize(l + '/' + r);\n      },\n    };\n\n    function getRandomDevice() {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        var randomBuffer = new Uint8Array(1);\n        return () => {\n          crypto.getRandomValues(randomBuffer);\n          return randomBuffer[0];\n        };\n      } else return () => abort('randomDevice');\n    }\n\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var TTY = {\n      ttys: [],\n      init: function () {},\n      shutdown: function () {},\n      register: function (dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function (stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char: function (tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (\n              typeof window != 'undefined' &&\n              typeof window.prompt == 'function'\n            ) {\n              result = window.prompt('Input: ');\n              if (result !== null) {\n                result += '\\n';\n              }\n            } else if (typeof readline == 'function') {\n              result = readline();\n              if (result !== null) {\n                result += '\\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n      default_tty1_ops: {\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    function zeroMemory(address, size) {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    }\n\n    function alignMemory(size, alignment) {\n      return Math.ceil(size / alignment) * alignment;\n    }\n    function mmapAlloc(size) {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (!ptr) return 0;\n      return zeroMemory(ptr, size);\n    }\n    var MEMFS = {\n      ops_table: null,\n      mount: function (mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode: function (parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n              },\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync,\n              },\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink,\n              },\n              stream: {},\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: FS.chrdev_stream_ops,\n            },\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray: function (node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function (node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage: function (node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr: function (node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function (node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function (parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function (parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function (old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink: function (parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir: function (parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir: function (node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink: function (parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function (node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read: function (stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write: function (stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate: function (stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap: function (stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(\n                  contents,\n                  position,\n                  position + length,\n                );\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },\n        msync: function (stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\n      readAsync(\n        url,\n        (arrayBuffer) => {\n          assert(\n            arrayBuffer,\n            'Loading data file \"' + url + '\" failed (no arrayBuffer).',\n          );\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (event) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw 'Loading data file \"' + url + '\" failed.';\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    }\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath: (path, opts = {}) => {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath: (node) => {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? mount + '/' + path\n              : mount + path;\n          }\n          path = path ? node.name + '/' + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: (parentid, name) => {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: (parent, name) => {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode: (parent, name, mode, rdev) => {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode: (node) => {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: (node) => {\n        return node === node.parent;\n      },\n      isMountpoint: (node) => {\n        return !!node.mounted;\n      },\n      isFile: (mode) => {\n        return (mode & 61440) === 32768;\n      },\n      isDir: (mode) => {\n        return (mode & 61440) === 16384;\n      },\n      isLink: (mode) => {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: (mode) => {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: (mode) => {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: (mode) => {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: (mode) => {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },\n      modeStringToFlags: (str) => {\n        var flags = FS.flagModes[str];\n        if (typeof flags == 'undefined') {\n          throw new Error('Unknown file open mode: ' + str);\n        }\n        return flags;\n      },\n      flagsToPermissionString: (flag) => {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions: (node, perms) => {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup: (dir) => {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: (dir, name) => {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete: (dir, name, isdir) => {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen: (node, flags) => {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream: (stream, fd_start, fd_end) => {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {\n            this.shared = {};\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get: function () {\n                return this.node;\n              },\n\n              set: function (val) {\n                this.node = val;\n              },\n            },\n            isRead: {\n              get: function () {\n                return (this.flags & 2097155) !== 1;\n              },\n            },\n            isWrite: {\n              get: function () {\n                return (this.flags & 2097155) !== 0;\n              },\n            },\n            isAppend: {\n              get: function () {\n                return this.flags & 1024;\n              },\n            },\n            flags: {\n              get: function () {\n                return this.shared.flags;\n              },\n\n              set: function (val) {\n                this.shared.flags = val;\n              },\n            },\n            position: {\n              get: function () {\n                return this.shared.position;\n              },\n\n              set: function (val) {\n                this.shared.position = val;\n              },\n            },\n          });\n        }\n\n        stream = Object.assign(new FS.FSStream(), stream);\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: (fd) => {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: (stream) => {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: () => {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice: (dev, ops) => {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts: (mount) => {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs: (populate, callback) => {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            'warning: ' +\n              FS.syncFSRequests +\n              ' FS.syncfs operations in flight at once, probably just doing extra work',\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: (type, opts, mountpoint) => {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount: (mountpoint) => {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: (parent, name) => {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: (path, mode, dev) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: (path, mode) => {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: (path, mode) => {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: (path, mode) => {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: (path, mode, dev) => {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: (oldpath, newpath) => {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: (old_path, new_path) => {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink: (path) => {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat: (path, dontFollow) => {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat: (path) => {\n        return FS.stat(path, true);\n      },\n      chmod: (path, mode, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod: (path, mode) => {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: (fd, mode) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n      },\n      chown: (path, uid, gid, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown: (path, uid, gid) => {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: (fd, uid, gid) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: (path, len) => {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate: (fd, len) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime: (path, atime, mtime) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open: (path, flags, mode) => {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 : mode;\n        if (flags & 64) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close: (stream) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed: (stream) => {\n        return stream.fd === null;\n      },\n      llseek: (stream, offset, whence) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: (stream, buffer, offset, length, position) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: (stream, buffer, offset, length, position, canOwn) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate: (stream, offset, length) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: (stream, length, position, prot, flags) => {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync: (stream, buffer, offset, length, mmapFlags) => {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      munmap: (stream) => 0,\n      ioctl: (stream, cmd, arg) => {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: (path, opts = {}) => {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: (path, data, opts = {}) => {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: () => {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices: () => {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var random_device = getRandomDevice();\n        FS.createDevice('/dev', 'random', random_device);\n        FS.createDevice('/dev', 'urandom', random_device);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories: () => {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount: () => {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup: (parent, name) => {\n                  var fd = +name;\n                  var stream = FS.getStream(fd);\n                  if (!stream) throw new FS.ErrnoError(8);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams: () => {\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      ensureErrnoError: () => {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },\n      staticInit: () => {\n        FS.ensureErrnoError();\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init: (input, output, error) => {\n        FS.init.initialized = true;\n\n        FS.ensureErrnoError();\n\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n\n        FS.createStandardStreams();\n      },\n      quit: () => {\n        FS.init.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      getMode: (canRead, canWrite) => {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      findObject: (path, dontResolveLastLink) => {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath: (path, dontResolveLastLink) => {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath: (parent, path, canRead, canWrite) => {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile: (parent, name, properties, canRead, canWrite) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },\n      createDevice: (parent, name, input, output) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open: (stream) => {\n            stream.seekable = false;\n          },\n          close: (stream) => {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: (stream, buffer, offset, length, pos) => {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: (stream, buffer, offset, length, pos) => {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile: (obj) => {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n      createLazyFile: (parent, name, url, canRead, canWrite) => {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize) | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter =\n          function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n        LazyUint8Array.prototype.cacheLength =\n          function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              },\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              },\n            },\n          });\n\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr: ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: (\n        parent,\n        name,\n        url,\n        canRead,\n        canWrite,\n        onload,\n        onerror,\n        dontCreateFile,\n        canOwn,\n        preFinish,\n      ) => {\n        var fullname = name\n          ? PATH_FS.resolve(PATH.join2(parent, name))\n          : parent;\n        var dep = getUniqueRunDependency('cp ' + fullname);\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(\n                parent,\n                name,\n                byteArray,\n                canRead,\n                canWrite,\n                canOwn,\n              );\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          if (\n            Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\n              if (onerror) onerror();\n              removeRunDependency(dep);\n            })\n          ) {\n            return;\n          }\n          finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == 'string') {\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: () => {\n        return (\n          window.indexedDB ||\n          window.mozIndexedDB ||\n          window.webkitIndexedDB ||\n          window.msIndexedDB\n        );\n      },\n      DB_NAME: () => {\n        return 'EM_FS_' + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: 'FILE_DATA',\n      saveFilesToDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = () => {\n          out('creating db');\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var putRequest = files.put(\n              FS.analyzePath(path).object.contents,\n              path,\n            );\n            putRequest.onsuccess = () => {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            putRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror;\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = () => {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(\n                PATH.dirname(path),\n                PATH.basename(path),\n                getRequest.result,\n                true,\n                true,\n                true,\n              );\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt: function (dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat: function (func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (\n            e &&\n            e.node &&\n            PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))\n          ) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 8) >> 2] = stat.ino;\n        HEAP32[(buf + 12) >> 2] = stat.mode;\n        HEAPU32[(buf + 16) >> 2] = stat.nlink;\n        HEAP32[(buf + 20) >> 2] = stat.uid;\n        HEAP32[(buf + 24) >> 2] = stat.gid;\n        HEAP32[(buf + 28) >> 2] = stat.rdev;\n        (tempI64 = [\n          stat.size >>> 0,\n          ((tempDouble = stat.size),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n        HEAP32[(buf + 48) >> 2] = 4096;\n        HEAP32[(buf + 52) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [\n          Math.floor(atime / 1000) >>> 0,\n          ((tempDouble = Math.floor(atime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 56) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 60) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 64) >> 2] = (atime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(mtime / 1000) >>> 0,\n          ((tempDouble = Math.floor(mtime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 72) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 76) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 80) >> 2] = (mtime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(ctime / 1000) >>> 0,\n          ((tempDouble = Math.floor(ctime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 88) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 92) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 96) >> 2] = (ctime % 1000) * 1000;\n        (tempI64 = [\n          stat.ino >>> 0,\n          ((tempDouble = stat.ino),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 104) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 108) >> 2] = tempI64[1]);\n        return 0;\n      },\n      doMsync: function (addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function (fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function setErrNo(value) {\n      HEAP32[___errno_location() >> 2] = value;\n      return value;\n    }\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = SYSCALLS.get();\n            if (arg < 0) {\n              return -28;\n            }\n            var newStream;\n            newStream = FS.createStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = SYSCALLS.get();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 5: {\n            var arg = SYSCALLS.get();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 6:\n          case 7:\n            return 0;\n          case 16:\n          case 8:\n            return -28;\n          case 9:\n            setErrNo(28);\n            return -1;\n          default: {\n            return -28;\n          }\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var MAX_INT53 = 9007199254740992;\n\n    var MIN_INT53 = -9007199254740992;\n    function bigintToI53Checked(num) {\n      return num < MIN_INT53 || num > MAX_INT53 ? NaN : Number(num);\n    }\n\n    function ___syscall_ftruncate64(fd, length) {\n      try {\n        length = bigintToI53Checked(length);\n        if (isNaN(length)) return -61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509:\n          case 21505: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512:\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = SYSCALLS.get();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = SYSCALLS.get();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? SYSCALLS.get() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function readI53FromI64(ptr) {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    }\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        if (!times) {\n          var atime = Date.now();\n          var mtime = atime;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n        }\n        FS.utime(path, atime, mtime);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = true;\n    function __emscripten_get_now_is_monotonic() {\n      return nowIsMonotonic;\n    }\n\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n\n    var __MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var __MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    function __yday_from_date(date) {\n      var isLeapYear = __isLeapYear(date.getFullYear());\n      var monthDaysCumulative = isLeapYear\n        ? __MONTH_DAYS_LEAP_CUMULATIVE\n        : __MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    }\n    function __localtime_js(time, tmPtr) {\n      var date = new Date(readI53FromI64(time) * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = __yday_from_date(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function __mmap_js(len, prot, flags, fd, off, allocated, addr) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var res = FS.mmap(stream, len, off, prot, flags);\n        var ptr = res.ptr;\n        HEAP32[allocated >> 2] = res.allocated;\n        HEAPU32[addr >> 2] = ptr;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, flags, offset);\n        }\n        FS.munmap(stream);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function allocateUTF8(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n      return ret;\n    }\n    function __tzset_js(timezone, daylight, tzname) {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : 'GMT';\n      }\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = allocateUTF8(winterName);\n      var summerNamePtr = allocateUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        HEAPU32[tzname >> 2] = winterNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = summerNamePtr;\n      } else {\n        HEAPU32[tzname >> 2] = summerNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = winterNamePtr;\n      }\n    }\n\n    function _emscripten_date_now() {\n      return Date.now();\n    }\n\n    var _emscripten_get_now;\n    _emscripten_get_now = () => performance.now();\n    function getHeapMax() {\n      return 2147483648;\n    }\n\n    function emscripten_realloc_buffer(size) {\n      var b = wasmMemory.buffer;\n      try {\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      let alignUp = (x, multiple) =>\n        x + ((multiple - (x % multiple)) % multiple);\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignUp(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    var ENV = {};\n\n    function getExecutableName() {\n      return thisProgram || './this.program';\n    }\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(x + '=' + env[x]);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    }\n\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n\n        var type = stream.tty\n          ? 2\n          : FS.isDir(stream.mode)\n            ? 3\n            : FS.isLink(stream.mode)\n              ? 7\n              : 4;\n        HEAP8[pbuf >> 0] = type;\n\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doReadv(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      try {\n        offset = bigintToI53Checked(offset);\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        (tempI64 = [\n          stream.position >>> 0,\n          ((tempDouble = stream.position),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[newOffset >> 2] = tempI64[0]),\n          (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops && stream.stream_ops.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doWritev(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n        },\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n        },\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        },\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        },\n      },\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n    var ASSERTIONS = false;\n\n    var asmLibraryArg = {\n      __syscall_chmod: ___syscall_chmod,\n      __syscall_faccessat: ___syscall_faccessat,\n      __syscall_fchmod: ___syscall_fchmod,\n      __syscall_fchown32: ___syscall_fchown32,\n      __syscall_fcntl64: ___syscall_fcntl64,\n      __syscall_fstat64: ___syscall_fstat64,\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n      __syscall_getcwd: ___syscall_getcwd,\n      __syscall_ioctl: ___syscall_ioctl,\n      __syscall_lstat64: ___syscall_lstat64,\n      __syscall_mkdirat: ___syscall_mkdirat,\n      __syscall_newfstatat: ___syscall_newfstatat,\n      __syscall_openat: ___syscall_openat,\n      __syscall_readlinkat: ___syscall_readlinkat,\n      __syscall_rmdir: ___syscall_rmdir,\n      __syscall_stat64: ___syscall_stat64,\n      __syscall_unlinkat: ___syscall_unlinkat,\n      __syscall_utimensat: ___syscall_utimensat,\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n      _localtime_js: __localtime_js,\n      _mmap_js: __mmap_js,\n      _munmap_js: __munmap_js,\n      _tzset_js: __tzset_js,\n      emscripten_date_now: _emscripten_date_now,\n      emscripten_get_now: _emscripten_get_now,\n      emscripten_resize_heap: _emscripten_resize_heap,\n      environ_get: _environ_get,\n      environ_sizes_get: _environ_sizes_get,\n      fd_close: _fd_close,\n      fd_fdstat_get: _fd_fdstat_get,\n      fd_read: _fd_read,\n      fd_seek: _fd_seek,\n      fd_sync: _fd_sync,\n      fd_write: _fd_write,\n      memory: wasmMemory,\n    };\n    var asm = createWasm();\n\n    var ___wasm_call_ctors = (Module['___wasm_call_ctors'] = function () {\n      return (___wasm_call_ctors = Module['___wasm_call_ctors'] =\n        Module['asm']['__wasm_call_ctors']).apply(null, arguments);\n    });\n\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = function () {\n      return (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        Module['asm']['sqlite3_status64']).apply(null, arguments);\n    });\n\n    var _sqlite3_status = (Module['_sqlite3_status'] = function () {\n      return (_sqlite3_status = Module['_sqlite3_status'] =\n        Module['asm']['sqlite3_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = function () {\n      return (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        Module['asm']['sqlite3_db_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = function () {\n      return (_sqlite3_msize = Module['_sqlite3_msize'] =\n        Module['asm']['sqlite3_msize']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = function () {\n      return (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        Module['asm']['sqlite3_vfs_find']).apply(null, arguments);\n    });\n\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = function () {\n      return (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        Module['asm']['sqlite3_initialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = function () {\n      return (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        Module['asm']['sqlite3_malloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_free = (Module['_sqlite3_free'] = function () {\n      return (_sqlite3_free = Module['_sqlite3_free'] =\n        Module['asm']['sqlite3_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = function () {\n      return (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        Module['asm']['sqlite3_vfs_register']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] =\n      function () {\n        return (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n          Module['asm']['sqlite3_vfs_unregister']).apply(null, arguments);\n      });\n\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = function () {\n      return (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        Module['asm']['sqlite3_malloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = function () {\n      return (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        Module['asm']['sqlite3_realloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = function () {\n      return (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        Module['asm']['sqlite3_realloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = function () {\n      return (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        Module['asm']['sqlite3_value_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = function () {\n      return (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        Module['asm']['sqlite3_randomness']).apply(null, arguments);\n    });\n\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = function () {\n      return (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        Module['asm']['sqlite3_stricmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = function () {\n      return (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        Module['asm']['sqlite3_strnicmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] =\n      function () {\n        return (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n          Module['asm']['sqlite3_uri_parameter']).apply(null, arguments);\n      });\n\n    var ___errno_location = (Module['___errno_location'] = function () {\n      return (___errno_location = Module['___errno_location'] =\n        Module['asm']['__errno_location']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = function () {\n      return (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        Module['asm']['sqlite3_uri_boolean']).apply(null, arguments);\n    });\n\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = function () {\n      return (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        Module['asm']['sqlite3_serialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = function () {\n      return (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        Module['asm']['sqlite3_prepare_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_step = (Module['_sqlite3_step'] = function () {\n      return (_sqlite3_step = Module['_sqlite3_step'] =\n        Module['asm']['sqlite3_step']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = function () {\n      return (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        Module['asm']['sqlite3_column_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = function () {\n      return (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        Module['asm']['sqlite3_column_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = function () {\n      return (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        Module['asm']['sqlite3_finalize']).apply(null, arguments);\n    });\n\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = function () {\n      return (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        Module['asm']['sqlite3_file_control']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = function () {\n      return (_sqlite3_reset = Module['_sqlite3_reset'] =\n        Module['asm']['sqlite3_reset']).apply(null, arguments);\n    });\n\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = function () {\n      return (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        Module['asm']['sqlite3_deserialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] =\n      function () {\n        return (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n          Module['asm']['sqlite3_clear_bindings']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = function () {\n      return (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        Module['asm']['sqlite3_value_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = function () {\n      return (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        Module['asm']['sqlite3_value_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = function () {\n      return (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        Module['asm']['sqlite3_value_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = function () {\n      return (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        Module['asm']['sqlite3_value_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = function () {\n      return (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        Module['asm']['sqlite3_value_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] =\n      function () {\n        return (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n          Module['asm']['sqlite3_value_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] =\n      function () {\n        return (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n          Module['asm']['sqlite3_value_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = function () {\n      return (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        Module['asm']['sqlite3_value_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] =\n      function () {\n        return (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n          Module['asm']['sqlite3_value_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] =\n      function () {\n        return (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n          Module['asm']['sqlite3_value_frombind']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = function () {\n      return (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        Module['asm']['sqlite3_value_dup']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = function () {\n      return (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        Module['asm']['sqlite3_value_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = function () {\n      return (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        Module['asm']['sqlite3_result_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      function () {\n        return (_sqlite3_result_error_toobig = Module[\n          '_sqlite3_result_error_toobig'\n        ] =\n          Module['asm']['sqlite3_result_error_toobig']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] =\n      function () {\n        return (_sqlite3_result_error_nomem = Module[\n          '_sqlite3_result_error_nomem'\n        ] =\n          Module['asm']['sqlite3_result_error_nomem']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] =\n      function () {\n        return (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n          Module['asm']['sqlite3_result_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = function () {\n      return (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        Module['asm']['sqlite3_result_error']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = function () {\n      return (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        Module['asm']['sqlite3_result_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = function () {\n      return (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        Module['asm']['sqlite3_result_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = function () {\n      return (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        Module['asm']['sqlite3_result_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] =\n      function () {\n        return (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n          Module['asm']['sqlite3_result_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] =\n      function () {\n        return (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n          Module['asm']['sqlite3_result_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = function () {\n      return (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        Module['asm']['sqlite3_result_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] =\n      function () {\n        return (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n          Module['asm']['sqlite3_result_zeroblob']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] =\n      function () {\n        return (_sqlite3_result_zeroblob64 = Module[\n          '_sqlite3_result_zeroblob64'\n        ] =\n          Module['asm']['sqlite3_result_zeroblob64']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] =\n      function () {\n        return (_sqlite3_result_error_code = Module[\n          '_sqlite3_result_error_code'\n        ] =\n          Module['asm']['sqlite3_result_error_code']).apply(null, arguments);\n      });\n\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = function () {\n      return (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        Module['asm']['sqlite3_user_data']).apply(null, arguments);\n    });\n\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] =\n      function () {\n        return (_sqlite3_context_db_handle = Module[\n          '_sqlite3_context_db_handle'\n        ] =\n          Module['asm']['sqlite3_context_db_handle']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] =\n      function () {\n        return (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n          Module['asm']['sqlite3_vtab_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] =\n      function () {\n        return (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n          Module['asm']['sqlite3_vtab_in_first']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = function () {\n      return (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        Module['asm']['sqlite3_vtab_in_next']).apply(null, arguments);\n    });\n\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] =\n      function () {\n        return (_sqlite3_aggregate_context = Module[\n          '_sqlite3_aggregate_context'\n        ] =\n          Module['asm']['sqlite3_aggregate_context']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = function () {\n      return (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        Module['asm']['sqlite3_get_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = function () {\n      return (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        Module['asm']['sqlite3_set_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = function () {\n      return (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        Module['asm']['sqlite3_column_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = function () {\n      return (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        Module['asm']['sqlite3_data_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = function () {\n      return (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        Module['asm']['sqlite3_column_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = function () {\n      return (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        Module['asm']['sqlite3_column_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] =\n      function () {\n        return (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n          Module['asm']['sqlite3_column_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = function () {\n      return (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        Module['asm']['sqlite3_column_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = function () {\n      return (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        Module['asm']['sqlite3_column_value']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = function () {\n      return (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        Module['asm']['sqlite3_column_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = function () {\n      return (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        Module['asm']['sqlite3_column_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = function () {\n      return (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        Module['asm']['sqlite3_bind_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = function () {\n      return (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        Module['asm']['sqlite3_bind_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = function () {\n      return (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        Module['asm']['sqlite3_bind_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = function () {\n      return (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        Module['asm']['sqlite3_bind_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = function () {\n      return (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        Module['asm']['sqlite3_bind_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = function () {\n      return (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        Module['asm']['sqlite3_bind_pointer']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = function () {\n      return (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        Module['asm']['sqlite3_bind_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = function () {\n      return (_sqlite3_bind_parameter_count = Module[\n        '_sqlite3_bind_parameter_count'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = function () {\n      return (_sqlite3_bind_parameter_index = Module[\n        '_sqlite3_bind_parameter_index'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_index']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = function () {\n      return (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        Module['asm']['sqlite3_db_handle']).apply(null, arguments);\n    });\n\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] =\n      function () {\n        return (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n          Module['asm']['sqlite3_stmt_readonly']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] =\n      function () {\n        return (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n          Module['asm']['sqlite3_stmt_isexplain']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = function () {\n      return (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        Module['asm']['sqlite3_stmt_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = function () {\n      return (_sqlite3_sql = Module['_sqlite3_sql'] =\n        Module['asm']['sqlite3_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = function () {\n      return (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        Module['asm']['sqlite3_expanded_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] =\n      function () {\n        return (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n          Module['asm']['sqlite3_preupdate_old']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] =\n      function () {\n        return (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n          Module['asm']['sqlite3_preupdate_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] =\n      function () {\n        return (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n          Module['asm']['sqlite3_preupdate_depth']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      function () {\n        return (_sqlite3_preupdate_blobwrite = Module[\n          '_sqlite3_preupdate_blobwrite'\n        ] =\n          Module['asm']['sqlite3_preupdate_blobwrite']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] =\n      function () {\n        return (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n          Module['asm']['sqlite3_preupdate_new']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] =\n      function () {\n        return (_sqlite3_value_numeric_type = Module[\n          '_sqlite3_value_numeric_type'\n        ] =\n          Module['asm']['sqlite3_value_numeric_type']).apply(null, arguments);\n      });\n\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = function () {\n      return (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        Module['asm']['sqlite3_errmsg']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] =\n      function () {\n        return (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n          Module['asm']['sqlite3_set_authorizer']).apply(null, arguments);\n      });\n\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = function () {\n      return (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        Module['asm']['sqlite3_strglob']).apply(null, arguments);\n    });\n\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = function () {\n      return (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        Module['asm']['sqlite3_strlike']).apply(null, arguments);\n    });\n\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = function () {\n      return (_sqlite3_exec = Module['_sqlite3_exec'] =\n        Module['asm']['sqlite3_exec']).apply(null, arguments);\n    });\n\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] =\n      function () {\n        return (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n          Module['asm']['sqlite3_auto_extension']).apply(null, arguments);\n      });\n\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = function () {\n      return (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        Module['asm']['sqlite3_cancel_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = function () {\n      return (_sqlite3_reset_auto_extension = Module[\n        '_sqlite3_reset_auto_extension'\n      ] =\n        Module['asm']['sqlite3_reset_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = function () {\n      return (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        Module['asm']['sqlite3_prepare_v3']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] =\n      function () {\n        return (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n          Module['asm']['sqlite3_create_module']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] =\n      function () {\n        return (_sqlite3_create_module_v2 = Module[\n          '_sqlite3_create_module_v2'\n        ] =\n          Module['asm']['sqlite3_create_module_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = function () {\n      return (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        Module['asm']['sqlite3_drop_modules']).apply(null, arguments);\n    });\n\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = function () {\n      return (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        Module['asm']['sqlite3_declare_vtab']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] =\n      function () {\n        return (_sqlite3_vtab_on_conflict = Module[\n          '_sqlite3_vtab_on_conflict'\n        ] =\n          Module['asm']['sqlite3_vtab_on_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] =\n      function () {\n        return (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n          Module['asm']['sqlite3_vtab_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = function () {\n      return (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        Module['asm']['sqlite3_vtab_in']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] =\n      function () {\n        return (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n          Module['asm']['sqlite3_vtab_rhs_value']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] =\n      function () {\n        return (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n          Module['asm']['sqlite3_vtab_distinct']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = function () {\n      return (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        Module['asm']['sqlite3_keyword_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] =\n      function () {\n        return (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n          Module['asm']['sqlite3_keyword_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] =\n      function () {\n        return (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n          Module['asm']['sqlite3_keyword_check']).apply(null, arguments);\n      });\n\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = function () {\n      return (_sqlite3_complete = Module['_sqlite3_complete'] =\n        Module['asm']['sqlite3_complete']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = function () {\n      return (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        Module['asm']['sqlite3_libversion']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      function () {\n        return (_sqlite3_libversion_number = Module[\n          '_sqlite3_libversion_number'\n        ] =\n          Module['asm']['sqlite3_libversion_number']).apply(null, arguments);\n      });\n\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = function () {\n      return (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        Module['asm']['sqlite3_shutdown']).apply(null, arguments);\n    });\n\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] =\n      function () {\n        return (_sqlite3_last_insert_rowid = Module[\n          '_sqlite3_last_insert_rowid'\n        ] =\n          Module['asm']['sqlite3_last_insert_rowid']).apply(null, arguments);\n      });\n\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = function () {\n      return (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        Module['asm']['sqlite3_set_last_insert_rowid']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = function () {\n      return (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        Module['asm']['sqlite3_changes64']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = function () {\n      return (_sqlite3_changes = Module['_sqlite3_changes'] =\n        Module['asm']['sqlite3_changes']).apply(null, arguments);\n    });\n\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] =\n      function () {\n        return (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n          Module['asm']['sqlite3_total_changes64']).apply(null, arguments);\n      });\n\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] =\n      function () {\n        return (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n          Module['asm']['sqlite3_total_changes']).apply(null, arguments);\n      });\n\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = function () {\n      return (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        Module['asm']['sqlite3_txn_state']).apply(null, arguments);\n    });\n\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = function () {\n      return (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        Module['asm']['sqlite3_close_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = function () {\n      return (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        Module['asm']['sqlite3_busy_handler']).apply(null, arguments);\n    });\n\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] =\n      function () {\n        return (_sqlite3_progress_handler = Module[\n          '_sqlite3_progress_handler'\n        ] =\n          Module['asm']['sqlite3_progress_handler']).apply(null, arguments);\n      });\n\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = function () {\n      return (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        Module['asm']['sqlite3_busy_timeout']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] =\n      function () {\n        return (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n          Module['asm']['sqlite3_create_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] =\n      function () {\n        return (_sqlite3_create_function_v2 = Module[\n          '_sqlite3_create_function_v2'\n        ] =\n          Module['asm']['sqlite3_create_function_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = function () {\n      return (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        Module['asm']['sqlite3_create_window_function']).apply(null, arguments);\n    });\n\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] =\n      function () {\n        return (_sqlite3_overload_function = Module[\n          '_sqlite3_overload_function'\n        ] =\n          Module['asm']['sqlite3_overload_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = function () {\n      return (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        Module['asm']['sqlite3_trace_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = function () {\n      return (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        Module['asm']['sqlite3_commit_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = function () {\n      return (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        Module['asm']['sqlite3_update_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] =\n      function () {\n        return (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n          Module['asm']['sqlite3_rollback_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] =\n      function () {\n        return (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n          Module['asm']['sqlite3_preupdate_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = function () {\n      return (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        Module['asm']['sqlite3_error_offset']).apply(null, arguments);\n    });\n\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = function () {\n      return (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        Module['asm']['sqlite3_errcode']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] =\n      function () {\n        return (_sqlite3_extended_errcode = Module[\n          '_sqlite3_extended_errcode'\n        ] =\n          Module['asm']['sqlite3_extended_errcode']).apply(null, arguments);\n      });\n\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = function () {\n      return (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        Module['asm']['sqlite3_errstr']).apply(null, arguments);\n    });\n\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = function () {\n      return (_sqlite3_limit = Module['_sqlite3_limit'] =\n        Module['asm']['sqlite3_limit']).apply(null, arguments);\n    });\n\n    var _sqlite3_open = (Module['_sqlite3_open'] = function () {\n      return (_sqlite3_open = Module['_sqlite3_open'] =\n        Module['asm']['sqlite3_open']).apply(null, arguments);\n    });\n\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = function () {\n      return (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        Module['asm']['sqlite3_open_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] =\n      function () {\n        return (_sqlite3_create_collation = Module[\n          '_sqlite3_create_collation'\n        ] =\n          Module['asm']['sqlite3_create_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      function () {\n        return (_sqlite3_create_collation_v2 = Module[\n          '_sqlite3_create_collation_v2'\n        ] =\n          Module['asm']['sqlite3_create_collation_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] =\n      function () {\n        return (_sqlite3_collation_needed = Module[\n          '_sqlite3_collation_needed'\n        ] =\n          Module['asm']['sqlite3_collation_needed']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_autocommit = (Module['_sqlite3_get_autocommit'] =\n      function () {\n        return (_sqlite3_get_autocommit = Module['_sqlite3_get_autocommit'] =\n          Module['asm']['sqlite3_get_autocommit']).apply(null, arguments);\n      });\n\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = function () {\n      return (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        Module['asm']['sqlite3_table_column_metadata']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = function () {\n      return (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        Module['asm']['sqlite3_extended_result_codes']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = function () {\n      return (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        Module['asm']['sqlite3_uri_key']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = function () {\n      return (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        Module['asm']['sqlite3_uri_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = function () {\n      return (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        Module['asm']['sqlite3_db_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = function () {\n      return (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        Module['asm']['sqlite3_db_filename']).apply(null, arguments);\n    });\n\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] =\n      function () {\n        return (_sqlite3_compileoption_used = Module[\n          '_sqlite3_compileoption_used'\n        ] =\n          Module['asm']['sqlite3_compileoption_used']).apply(null, arguments);\n      });\n\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] =\n      function () {\n        return (_sqlite3_compileoption_get = Module[\n          '_sqlite3_compileoption_get'\n        ] =\n          Module['asm']['sqlite3_compileoption_get']).apply(null, arguments);\n      });\n\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = function () {\n      return (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        Module['asm']['sqlite3session_diff']).apply(null, arguments);\n    });\n\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] =\n      function () {\n        return (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n          Module['asm']['sqlite3session_attach']).apply(null, arguments);\n      });\n\n    var _sqlite3session_create = (Module['_sqlite3session_create'] =\n      function () {\n        return (_sqlite3session_create = Module['_sqlite3session_create'] =\n          Module['asm']['sqlite3session_create']).apply(null, arguments);\n      });\n\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] =\n      function () {\n        return (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n          Module['asm']['sqlite3session_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      function () {\n        return (_sqlite3session_table_filter = Module[\n          '_sqlite3session_table_filter'\n        ] =\n          Module['asm']['sqlite3session_table_filter']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] =\n      function () {\n        return (_sqlite3session_changeset = Module[\n          '_sqlite3session_changeset'\n        ] =\n          Module['asm']['sqlite3session_changeset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = function () {\n      return (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        Module['asm']['sqlite3session_changeset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = function () {\n      return (_sqlite3session_patchset_strm = Module[\n        '_sqlite3session_patchset_strm'\n      ] =\n        Module['asm']['sqlite3session_patchset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] =\n      function () {\n        return (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n          Module['asm']['sqlite3session_patchset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] =\n      function () {\n        return (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n          Module['asm']['sqlite3session_enable']).apply(null, arguments);\n      });\n\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] =\n      function () {\n        return (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n          Module['asm']['sqlite3session_indirect']).apply(null, arguments);\n      });\n\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] =\n      function () {\n        return (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n          Module['asm']['sqlite3session_isempty']).apply(null, arguments);\n      });\n\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] =\n      function () {\n        return (_sqlite3session_memory_used = Module[\n          '_sqlite3session_memory_used'\n        ] =\n          Module['asm']['sqlite3session_memory_used']).apply(null, arguments);\n      });\n\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = function () {\n      return (_sqlite3session_object_config = Module[\n        '_sqlite3session_object_config'\n      ] =\n        Module['asm']['sqlite3session_object_config']).apply(null, arguments);\n    });\n\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = function () {\n      return (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        Module['asm']['sqlite3session_changeset_size']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] =\n      function () {\n        return (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n          Module['asm']['sqlite3changeset_start']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] =\n      function () {\n        return (_sqlite3changeset_start_v2 = Module[\n          '_sqlite3changeset_start_v2'\n        ] =\n          Module['asm']['sqlite3changeset_start_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      function () {\n        return (_sqlite3changeset_start_strm = Module[\n          '_sqlite3changeset_start_strm'\n        ] =\n          Module['asm']['sqlite3changeset_start_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_start_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] =\n      function () {\n        return (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n          Module['asm']['sqlite3changeset_next']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = function () {\n      return (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        Module['asm']['sqlite3changeset_op']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = function () {\n      return (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        Module['asm']['sqlite3changeset_pk']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = function () {\n      return (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        Module['asm']['sqlite3changeset_old']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = function () {\n      return (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        Module['asm']['sqlite3changeset_new']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] =\n      function () {\n        return (_sqlite3changeset_conflict = Module[\n          '_sqlite3changeset_conflict'\n        ] =\n          Module['asm']['sqlite3changeset_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = function () {\n      return (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        Module['asm']['sqlite3changeset_fk_conflicts']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] =\n      function () {\n        return (_sqlite3changeset_finalize = Module[\n          '_sqlite3changeset_finalize'\n        ] =\n          Module['asm']['sqlite3changeset_finalize']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] =\n      function () {\n        return (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n          Module['asm']['sqlite3changeset_invert']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = function () {\n      return (_sqlite3changeset_invert_strm = Module[\n        '_sqlite3changeset_invert_strm'\n      ] =\n        Module['asm']['sqlite3changeset_invert_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] =\n      function () {\n        return (_sqlite3changeset_apply_v2 = Module[\n          '_sqlite3changeset_apply_v2'\n        ] =\n          Module['asm']['sqlite3changeset_apply_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] =\n      function () {\n        return (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n          Module['asm']['sqlite3changeset_apply']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_apply_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      function () {\n        return (_sqlite3changeset_apply_strm = Module[\n          '_sqlite3changeset_apply_strm'\n        ] =\n          Module['asm']['sqlite3changeset_apply_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] =\n      function () {\n        return (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n          Module['asm']['sqlite3changegroup_new']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] =\n      function () {\n        return (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n          Module['asm']['sqlite3changegroup_add']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] =\n      function () {\n        return (_sqlite3changegroup_output = Module[\n          '_sqlite3changegroup_output'\n        ] =\n          Module['asm']['sqlite3changegroup_output']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      function () {\n        return (_sqlite3changegroup_add_strm = Module[\n          '_sqlite3changegroup_add_strm'\n        ] =\n          Module['asm']['sqlite3changegroup_add_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = function () {\n      return (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        Module['asm']['sqlite3changegroup_output_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] =\n      function () {\n        return (_sqlite3changegroup_delete = Module[\n          '_sqlite3changegroup_delete'\n        ] =\n          Module['asm']['sqlite3changegroup_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] =\n      function () {\n        return (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n          Module['asm']['sqlite3changeset_concat']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = function () {\n      return (_sqlite3changeset_concat_strm = Module[\n        '_sqlite3changeset_concat_strm'\n      ] =\n        Module['asm']['sqlite3changeset_concat_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_config = (Module['_sqlite3session_config'] =\n      function () {\n        return (_sqlite3session_config = Module['_sqlite3session_config'] =\n          Module['asm']['sqlite3session_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = function () {\n      return (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        Module['asm']['sqlite3_sourceid']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_pstack_ptr = (Module['_sqlite3_wasm_pstack_ptr'] =\n      function () {\n        return (_sqlite3_wasm_pstack_ptr = Module['_sqlite3_wasm_pstack_ptr'] =\n          Module['asm']['sqlite3_wasm_pstack_ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_restore = (Module['_sqlite3_wasm_pstack_restore'] =\n      function () {\n        return (_sqlite3_wasm_pstack_restore = Module[\n          '_sqlite3_wasm_pstack_restore'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_restore']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_alloc = (Module['_sqlite3_wasm_pstack_alloc'] =\n      function () {\n        return (_sqlite3_wasm_pstack_alloc = Module[\n          '_sqlite3_wasm_pstack_alloc'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_alloc']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_remaining = (Module[\n      '_sqlite3_wasm_pstack_remaining'\n    ] = function () {\n      return (_sqlite3_wasm_pstack_remaining = Module[\n        '_sqlite3_wasm_pstack_remaining'\n      ] =\n        Module['asm']['sqlite3_wasm_pstack_remaining']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_pstack_quota = (Module['_sqlite3_wasm_pstack_quota'] =\n      function () {\n        return (_sqlite3_wasm_pstack_quota = Module[\n          '_sqlite3_wasm_pstack_quota'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_quota']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_error = (Module['_sqlite3_wasm_db_error'] =\n      function () {\n        return (_sqlite3_wasm_db_error = Module['_sqlite3_wasm_db_error'] =\n          Module['asm']['sqlite3_wasm_db_error']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_struct = (Module['_sqlite3_wasm_test_struct'] =\n      function () {\n        return (_sqlite3_wasm_test_struct = Module[\n          '_sqlite3_wasm_test_struct'\n        ] =\n          Module['asm']['sqlite3_wasm_test_struct']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_enum_json = (Module['_sqlite3_wasm_enum_json'] =\n      function () {\n        return (_sqlite3_wasm_enum_json = Module['_sqlite3_wasm_enum_json'] =\n          Module['asm']['sqlite3_wasm_enum_json']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vfs_unlink = (Module['_sqlite3_wasm_vfs_unlink'] =\n      function () {\n        return (_sqlite3_wasm_vfs_unlink = Module['_sqlite3_wasm_vfs_unlink'] =\n          Module['asm']['sqlite3_wasm_vfs_unlink']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_vfs = (Module['_sqlite3_wasm_db_vfs'] = function () {\n      return (_sqlite3_wasm_db_vfs = Module['_sqlite3_wasm_db_vfs'] =\n        Module['asm']['sqlite3_wasm_db_vfs']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_db_reset = (Module['_sqlite3_wasm_db_reset'] =\n      function () {\n        return (_sqlite3_wasm_db_reset = Module['_sqlite3_wasm_db_reset'] =\n          Module['asm']['sqlite3_wasm_db_reset']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_export_chunked = (Module[\n      '_sqlite3_wasm_db_export_chunked'\n    ] = function () {\n      return (_sqlite3_wasm_db_export_chunked = Module[\n        '_sqlite3_wasm_db_export_chunked'\n      ] =\n        Module['asm']['sqlite3_wasm_db_export_chunked']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_db_serialize = (Module['_sqlite3_wasm_db_serialize'] =\n      function () {\n        return (_sqlite3_wasm_db_serialize = Module[\n          '_sqlite3_wasm_db_serialize'\n        ] =\n          Module['asm']['sqlite3_wasm_db_serialize']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vfs_create_file = (Module[\n      '_sqlite3_wasm_vfs_create_file'\n    ] = function () {\n      return (_sqlite3_wasm_vfs_create_file = Module[\n        '_sqlite3_wasm_vfs_create_file'\n      ] =\n        Module['asm']['sqlite3_wasm_vfs_create_file']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_posix_create_file = (Module[\n      '_sqlite3_wasm_posix_create_file'\n    ] = function () {\n      return (_sqlite3_wasm_posix_create_file = Module[\n        '_sqlite3_wasm_posix_create_file'\n      ] =\n        Module['asm']['sqlite3_wasm_posix_create_file']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3_wasm_kvvfsMakeKeyOnPstack'\n    ] = function () {\n      return (_sqlite3_wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3_wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        Module['asm']['sqlite3_wasm_kvvfsMakeKeyOnPstack']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3_wasm_kvvfs_methods = (Module['_sqlite3_wasm_kvvfs_methods'] =\n      function () {\n        return (_sqlite3_wasm_kvvfs_methods = Module[\n          '_sqlite3_wasm_kvvfs_methods'\n        ] =\n          Module['asm']['sqlite3_wasm_kvvfs_methods']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vtab_config = (Module['_sqlite3_wasm_vtab_config'] =\n      function () {\n        return (_sqlite3_wasm_vtab_config = Module[\n          '_sqlite3_wasm_vtab_config'\n        ] =\n          Module['asm']['sqlite3_wasm_vtab_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_ip = (Module['_sqlite3_wasm_db_config_ip'] =\n      function () {\n        return (_sqlite3_wasm_db_config_ip = Module[\n          '_sqlite3_wasm_db_config_ip'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_ip']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_pii = (Module['_sqlite3_wasm_db_config_pii'] =\n      function () {\n        return (_sqlite3_wasm_db_config_pii = Module[\n          '_sqlite3_wasm_db_config_pii'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_pii']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_s = (Module['_sqlite3_wasm_db_config_s'] =\n      function () {\n        return (_sqlite3_wasm_db_config_s = Module[\n          '_sqlite3_wasm_db_config_s'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_s']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_i = (Module['_sqlite3_wasm_config_i'] =\n      function () {\n        return (_sqlite3_wasm_config_i = Module['_sqlite3_wasm_config_i'] =\n          Module['asm']['sqlite3_wasm_config_i']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_ii = (Module['_sqlite3_wasm_config_ii'] =\n      function () {\n        return (_sqlite3_wasm_config_ii = Module['_sqlite3_wasm_config_ii'] =\n          Module['asm']['sqlite3_wasm_config_ii']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_j = (Module['_sqlite3_wasm_config_j'] =\n      function () {\n        return (_sqlite3_wasm_config_j = Module['_sqlite3_wasm_config_j'] =\n          Module['asm']['sqlite3_wasm_config_j']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_init_wasmfs = (Module['_sqlite3_wasm_init_wasmfs'] =\n      function () {\n        return (_sqlite3_wasm_init_wasmfs = Module[\n          '_sqlite3_wasm_init_wasmfs'\n        ] =\n          Module['asm']['sqlite3_wasm_init_wasmfs']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_intptr = (Module['_sqlite3_wasm_test_intptr'] =\n      function () {\n        return (_sqlite3_wasm_test_intptr = Module[\n          '_sqlite3_wasm_test_intptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_intptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_voidptr = (Module['_sqlite3_wasm_test_voidptr'] =\n      function () {\n        return (_sqlite3_wasm_test_voidptr = Module[\n          '_sqlite3_wasm_test_voidptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_voidptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_max = (Module['_sqlite3_wasm_test_int64_max'] =\n      function () {\n        return (_sqlite3_wasm_test_int64_max = Module[\n          '_sqlite3_wasm_test_int64_max'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64_max']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_min = (Module['_sqlite3_wasm_test_int64_min'] =\n      function () {\n        return (_sqlite3_wasm_test_int64_min = Module[\n          '_sqlite3_wasm_test_int64_min'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64_min']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_times2 = (Module[\n      '_sqlite3_wasm_test_int64_times2'\n    ] = function () {\n      return (_sqlite3_wasm_test_int64_times2 = Module[\n        '_sqlite3_wasm_test_int64_times2'\n      ] =\n        Module['asm']['sqlite3_wasm_test_int64_times2']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_test_int64_minmax = (Module[\n      '_sqlite3_wasm_test_int64_minmax'\n    ] = function () {\n      return (_sqlite3_wasm_test_int64_minmax = Module[\n        '_sqlite3_wasm_test_int64_minmax'\n      ] =\n        Module['asm']['sqlite3_wasm_test_int64_minmax']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_test_int64ptr = (Module['_sqlite3_wasm_test_int64ptr'] =\n      function () {\n        return (_sqlite3_wasm_test_int64ptr = Module[\n          '_sqlite3_wasm_test_int64ptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_stack_overflow = (Module[\n      '_sqlite3_wasm_test_stack_overflow'\n    ] = function () {\n      return (_sqlite3_wasm_test_stack_overflow = Module[\n        '_sqlite3_wasm_test_stack_overflow'\n      ] =\n        Module['asm']['sqlite3_wasm_test_stack_overflow']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3_wasm_test_str_hello = (Module['_sqlite3_wasm_test_str_hello'] =\n      function () {\n        return (_sqlite3_wasm_test_str_hello = Module[\n          '_sqlite3_wasm_test_str_hello'\n        ] =\n          Module['asm']['sqlite3_wasm_test_str_hello']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_SQLTester_strglob = (Module[\n      '_sqlite3_wasm_SQLTester_strglob'\n    ] = function () {\n      return (_sqlite3_wasm_SQLTester_strglob = Module[\n        '_sqlite3_wasm_SQLTester_strglob'\n      ] =\n        Module['asm']['sqlite3_wasm_SQLTester_strglob']).apply(null, arguments);\n    });\n\n    var _malloc = (Module['_malloc'] = function () {\n      return (_malloc = Module['_malloc'] = Module['asm']['malloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _free = (Module['_free'] = function () {\n      return (_free = Module['_free'] = Module['asm']['free']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _realloc = (Module['_realloc'] = function () {\n      return (_realloc = Module['_realloc'] = Module['asm']['realloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _emscripten_builtin_memalign = (Module['_emscripten_builtin_memalign'] =\n      function () {\n        return (_emscripten_builtin_memalign = Module[\n          '_emscripten_builtin_memalign'\n        ] =\n          Module['asm']['emscripten_builtin_memalign']).apply(null, arguments);\n      });\n\n    var stackSave = (Module['stackSave'] = function () {\n      return (stackSave = Module['stackSave'] =\n        Module['asm']['stackSave']).apply(null, arguments);\n    });\n\n    var stackRestore = (Module['stackRestore'] = function () {\n      return (stackRestore = Module['stackRestore'] =\n        Module['asm']['stackRestore']).apply(null, arguments);\n    });\n\n    var stackAlloc = (Module['stackAlloc'] = function () {\n      return (stackAlloc = Module['stackAlloc'] =\n        Module['asm']['stackAlloc']).apply(null, arguments);\n    });\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run(args) {\n      args = args || arguments_;\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module['calledRun'] = true;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(function () {\n          setTimeout(function () {\n            Module['setStatus']('');\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    if (!Module.postRun) Module.postRun = [];\n    Module.postRun.push(function (Module) {\n      'use strict';\n\n      'use strict';\n      globalThis.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = globalThis.sqlite3ApiConfig ||\n          sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          console.warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                return !!Module.HEAPU64;\n              }\n              return !!globalThis.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () =>\n            globalThis.window === globalThis && !!globalThis.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n\n          affirmDbHeader: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const header = 'SQLite format 3';\n            if (header.length > bytes.byteLength) {\n              toss3('Input does not contain an SQLite3 database header.');\n            }\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss3('Input does not contain an SQLite3 database header.');\n              }\n            }\n          },\n\n          affirmIsDb: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 !== 0) {\n              toss3('Byte array size', n, 'is invalid for an SQLite3 db.');\n            }\n            util.affirmDbHeader(bytes);\n          },\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3_wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3_wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n\n          call: function (f) {\n            const stackPos = wasm.pstack.pointer;\n            try {\n              return f(sqlite3);\n            } finally {\n              wasm.pstack.restore(stackPos);\n            }\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          if (\n            !pdir ||\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3_wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3_wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          wasm.sqlite3_wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_posix_create_file = function (filename, data, dataLen) {\n          let pData;\n          if (data && wasm.isPtr(data)) {\n            pData = data;\n          } else if (\n            data instanceof ArrayBuffer ||\n            data instanceof Uint8Array\n          ) {\n            pData = wasm.allocFromTypedArray(data);\n            if (arguments.length < 3 || !util.isInt32(dataLen) || dataLen < 0) {\n              dataLen = data.byteLength;\n            }\n          } else {\n            SQLite3Error.toss(\n              'Invalid 2nd argument for sqlite3_js_posix_create_file().',\n            );\n          }\n          try {\n            if (!util.isInt32(dataLen) || dataLen < 0) {\n              SQLite3Error.toss(\n                'Invalid 3rd argument for sqlite3_js_posix_create_file().',\n              );\n            }\n            const rc = wasm.sqlite3_wasm_posix_create_file(\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          config.warn(\n            'sqlite3_js_vfs_create_file() is deprecated and',\n            'should be avoided because it can lead to C-level crashes.',\n            'See its documentation for alternative options.',\n          );\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = wasm.sqlite3_wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_sql_to_string = (sql) => {\n          if ('string' === typeof sql) {\n            return sql;\n          }\n          const x = flexibleString(v);\n          return x === v ? undefined : x;\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(globalThis.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(globalThis.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function (pDb, op, ...args) {\n          if (!this.s) {\n            this.s = wasm.xWrap('sqlite3_wasm_db_config_s', 'int', [\n              'sqlite3*',\n              'int',\n              'string:static',\n            ]);\n            this.pii = wasm.xWrap('sqlite3_wasm_db_config_pii', 'int', [\n              'sqlite3*',\n              'int',\n              '*',\n              'int',\n              'int',\n            ]);\n            this.ip = wasm.xWrap('sqlite3_wasm_db_config_ip', 'int', [\n              'sqlite3*',\n              'int',\n              'int',\n              '*',\n            ]);\n          }\n          switch (op) {\n            case capi.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case capi.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case capi.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case capi.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case capi.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case capi.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case capi.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case capi.SQLITE_DBCONFIG_RESET_DATABASE:\n            case capi.SQLITE_DBCONFIG_DEFENSIVE:\n            case capi.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case capi.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case capi.SQLITE_DBCONFIG_DQS_DML:\n            case capi.SQLITE_DBCONFIG_DQS_DDL:\n            case capi.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case capi.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case capi.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n            case capi.SQLITE_DBCONFIG_STMT_SCANSTATUS:\n            case capi.SQLITE_DBCONFIG_REVERSE_SCANORDER:\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case capi.SQLITE_DBCONFIG_LOOKASIDE:\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case capi.SQLITE_DBCONFIG_MAINDBNAME:\n              return this.s(pDb, op, args[0]);\n            default:\n              return capi.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n                throwIfCannotConvert,\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function ff() {\n            if (ff.isReady instanceof Promise) return ff.isReady;\n            let lia = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            const postInit = async () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            const catcher = (e) => {\n              config.error('an async sqlite3 initializer failed:', e);\n              throw e;\n            };\n            if (!lia || !lia.length) {\n              return (ff.isReady = postInit().catch(catcher));\n            }\n            lia = lia.map((f) => {\n              return f instanceof Function ? async (x) => f(sqlite3) : f;\n            });\n            lia.push(postInit);\n            let p = Promise.resolve(sqlite3);\n            while (lia.length) p = p.then(lia.shift());\n            return (ff.isReady = p.catch(catcher));\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers = [];\n\n      globalThis.sqlite3ApiBootstrap.initializersAsync = [];\n\n      globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      globalThis.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      globalThis.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!globalThis['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n              ? 8\n              : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === globalThis['BigUint64Array']) return c.HEAP64U;\n                else if (n === globalThis['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n              ? n\n              : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length) __argcMismatch(fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.name = opt.name || 'unnamed';\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    cache.scopedAlloc[cache.scopedAlloc.length - 1].push(\n                      pair[1],\n                    );\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  cache.scopedAlloc[cache.scopedAlloc.length - 1].push(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        xArg.FuncPtrAdapter.warnOnUse = false;\n\n        xArg.FuncPtrAdapter.debugFuncInstall = false;\n\n        xArg.FuncPtrAdapter.debugOut = console.debug.bind(console);\n\n        xArg.FuncPtrAdapter.bindScopes = [\n          'transient',\n          'context',\n          'singleton',\n          'permanent',\n        ];\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              for (const i in args)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                delete xcvPart.get(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      globalThis.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(globalThis.WhWasmUtilInstaller);\n\n      ('use strict');\n      globalThis.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!globalThis['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = globalThis['BigInt'],\n          BigInt64Array = globalThis['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        globalThis.WhWasmUtilInstaller(wasm);\n        delete globalThis.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_autocommit', 'int', 'sqlite3*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          [\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroyAuxData',\n                signature: 'v(*)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_isexplain', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_readonly', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        if (wasm.exports.sqlite3_activate_see instanceof Function) {\n          wasm.bindingSignatures.push(\n            ['sqlite3_key', 'int', 'sqlite3*', 'string', 'int'],\n            ['sqlite3_key_v2', 'int', 'sqlite3*', 'string', '*', 'int'],\n            ['sqlite3_rekey', 'int', 'sqlite3*', 'string', 'int'],\n            ['sqlite3_rekey_v2', 'int', 'sqlite3*', 'string', '*', 'int'],\n            ['sqlite3_activate_see', undefined, 'string'],\n          );\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_create_module',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n          ],\n          [\n            'sqlite3_create_module_v2',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n          ],\n          ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n          [\n            'sqlite3_preupdate_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_preupdate_hook',\n                signature: 'v(ppippjj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                    callback(\n                      p,\n                      db,\n                      op,\n                      wasm.cstrToJs(zDb),\n                      wasm.cstrToJs(zTbl),\n                      iKey1,\n                      iKey2,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n          ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n          ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n          ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n          ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n          ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n          ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n          ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n          ['sqlite3_vtab_rhs_value', 'int', 'sqlite3_index_info*', 'int', '**'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3changegroup_add) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasm = [\n          ['sqlite3_wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3_wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3_wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3_wasm_posix_create_file', 'int', 'string', '*', 'int'],\n          ['sqlite3_wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n        ];\n\n        sqlite3.StructBinder = globalThis.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete globalThis.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_index_info*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_index_info || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_module*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          if (0 === wasm.exports.sqlite3_step.length) {\n            wasm.xWrap.doArgcCheck = false;\n            sqlite3.config.warn(\n              'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',\n            );\n          }\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasm) {\n            wasm[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3_wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3_wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3_wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3_wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3_wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3_wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3_wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3_wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return util.sqlite3_wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3_wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.wudf) m.wudf = new Map();\n          this._addUDF(pDb, name, arity, m.wudf);\n        };\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              console.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_table_filter) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3_wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.xWrap(\n            'sqlite3_create_window_function',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xValue',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xInverse',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3_wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          capi.sqlite3_create_window_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_window_function',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateWindowFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xValue instanceof Function ||\n                  xInverse instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_window_function() setup threw:', e);\n              return util.sqlite3_wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult =\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3_wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3_wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3_wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3_wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3_wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3_wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3_wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3_wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3_wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey = wasm.exports.sqlite3_wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.45.1',\n          libVersionNumber: 3045001,\n          sourceId:\n            '2024-01-30 16:01:20 e876e51a0ed5c5b3126f52e532044363a014bc594cfefa87ffb5b82257cc467a',\n          downloadVersion: 3450100,\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              sqliteResultCode,\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenSql = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs = capi.sqlite3_js_db_vfs(pDb);\n            if (!pVfs)\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenSql[pVfs];\n            if (postInitSql instanceof Function) {\n              postInitSql(this, sqlite3);\n            } else if (postInitSql) {\n              checkSqlite3Rc(pDb, capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0));\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenSql = function (pVfs, sql) {\n          __vfsPostOpenSql[pVfs] = sql;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt) => stmt.get(Object.create(null));\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            const rc = stmt.bind(bind).step()\n              ? stmt.get(...getArgs)\n              : undefined;\n            stmt.reset();\n            return rc;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) {\n                  try {\n                    s.finalize();\n                  } catch (e) {}\n                }\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  let gotColNames = Array.isArray(opt.columnNames) ? 0 : 1;\n                  evalFirstResult = false;\n                  if (arg.cbArg || resultRows) {\n                    for (; stmt.step(); stmt._lockedByExec = false) {\n                      if (0 === gotColNames++)\n                        stmt.getColumnNames(opt.columnNames);\n                      stmt._lockedByExec = true;\n                      const row = arg.cbArg(stmt);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._lockedByExec = false;\n                  }\n                  if (0 === gotColNames) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.reset().finalize();\n                stmt = null;\n              }\n            } finally {\n              wasm.scopedAllocPop(stack);\n              if (stmt) {\n                delete stmt._lockedByExec;\n                stmt.finalize();\n              }\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                  ? xArity.length - 1\n                  : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n              stmt.reset();\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return checkSqlite3Rc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmNotLockedByExec = function (stmt, currentOpName) {\n          if (stmt._lockedByExec) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmNotLockedByExec(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmNotLockedByExec(this, 'finalize()');\n              const rc = capi.sqlite3_finalize(this.pointer);\n              delete __stmtMap.get(this.db)[this.pointer];\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.parameterCount;\n              delete this._lockedByExec;\n              delete this.db;\n              return rc;\n            }\n          },\n\n          clearBindings: function () {\n            affirmNotLockedByExec(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmNotLockedByExec(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            const rc = capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            checkSqlite3Rc(this.db, rc);\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmNotLockedByExec(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            try {\n              const rc = this.step();\n              this.reset();\n              return rc;\n            } finally {\n              try {\n                this.finalize();\n              } catch (e) {}\n            }\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            const n = this.columnCount;\n            for (let i = 0; i < n; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        Object.defineProperty(Stmt.prototype, 'columnCount', {\n          enumerable: false,\n          get: function () {\n            return capi.sqlite3_column_count(this.pointer);\n          },\n          set: () => toss3('The columnCount property is read-only.'),\n        });\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            dbCtorHelper.call(this, {\n              filename: storageName,\n              flags: 'c',\n              vfs: 'kvvfs',\n            });\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if (!(globalThis.WorkerGlobalScope instanceof Function)) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = sqlite3.wasm.sqlite3_wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  sqlite3.wasm.sqlite3_wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                globalThis.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                globalThis.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const guessVfs = function (filename) {\n            const m = /^file:.+(vfs=(\\w+))/.exec(filename);\n            return sqlite3.capi.sqlite3_vfs_find(m ? m[2] : 0);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              let byteArray, pVfs;\n              oargs.vfs = args.vfs;\n              if (isSpecialDbFilename(args.filename)) {\n                oargs.filename = args.filename || '';\n              } else {\n                oargs.filename = args.filename;\n                byteArray = args.byteArray;\n                if (byteArray) pVfs = guessVfs(args.filename);\n              }\n              if (pVfs) {\n                let pMem;\n                try {\n                  pMem = sqlite3.wasm.allocFromTypedArray(byteArray);\n                  const rc = sqlite3.wasm.sqlite3_wasm_vfs_create_file(\n                    pVfs,\n                    oargs.filename,\n                    pMem,\n                    byteArray.byteLength,\n                  );\n                  if (rc) sqlite3.SQLite3Error.toss(rc);\n                } catch (e) {\n                  throw new sqlite3.SQLite3Error(\n                    e.name + ' creating ' + args.filename + ': ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                } finally {\n                  if (pMem) sqlite3.wasm.dealloc(pMem);\n                }\n              }\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                const changeCount = !!rc.countChanges\n                  ? db.changes(true, 64 === rc.countChanges)\n                  : undefined;\n                db.exec(rc);\n                if (undefined !== changeCount) {\n                  rc.changeCount =\n                    db.changes(true, 64 === rc.countChanges) - changeCount;\n                }\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              rc.opfsEnabled = !!sqlite3.opfs;\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n\n            'opfs-tree': async function (ev) {\n              if (!sqlite3.opfs) toss('OPFS support is unavailable.');\n              const response = await sqlite3.opfs.treeList();\n              return response;\n            },\n          };\n\n          globalThis.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          globalThis.postMessage({\n            type: 'sqlite3-api',\n            result: 'worker1-ready',\n          });\n        }.bind({ sqlite3 });\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null),\n          vtab = Object.create(null);\n\n        const StructBinder = sqlite3.StructBinder;\n        sqlite3.vfs = vfs;\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage errror: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        StructBinder.StructType.prototype.installMethod = function callee(\n          name,\n          func,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return arguments.length < 3 && name && 'object' === typeof name\n            ? installMethods(this, ...arguments)\n            : installMethod(this, ...arguments);\n        };\n\n        StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              installMethods(o.struct, o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              installMethods(mod, remethods, false);\n            } else {\n              installMethods(mod, methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!globalThis.SharedArrayBuffer || !globalThis.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if ('undefined' === typeof WorkerGlobalScope) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(globalThis.location.href).searchParams;\n          if (urlParams.has('opfs-disable')) {\n            return Promise.resolve(sqlite3);\n          }\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve_,\n            promiseReject_,\n          ) {\n            const loggers = [\n              sqlite3.config.error,\n              sqlite3.config.warn,\n              sqlite3.config.log,\n            ];\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const util = sqlite3.util;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                globalThis.FileSystemHandle &&\n                globalThis.FileSystemDirectoryHandle &&\n                globalThis.FileSystemFileHandle &&\n                globalThis.FileSystemFileHandle.prototype\n                  .createSyncAccessHandle &&\n                navigator?.storage?.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  globalThis.location.href,\n                  'metrics for',\n                  globalThis.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsIoMethods = new sqlite3_io_methods();\n            const opfsVfs = new sqlite3_vfs().addOnDispose(() =>\n              opfsIoMethods.dispose(),\n            );\n            let promiseWasRejected = undefined;\n            const promiseReject = (err) => {\n              promiseWasRejected = true;\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const promiseResolve = () => {\n              promiseWasRejected = false;\n              return promiseResolve_(sqlite3);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            setTimeout(() => {\n              if (undefined === promiseWasRejected) {\n                promiseReject(\n                  new Error(\n                    'Timeout while waiting for OPFS async proxy worker.',\n                  ),\n                );\n              }\n            }, 4000);\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsIoMethods.$iVersion = 1;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.addOnDispose(\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n            );\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              Atomics.wait(state.sabOPView, state.opIds.rc, -1);\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                const f = __openFiles[pFile];\n                wasm.poke(pOut, f.lockType ? 1 : 0, 'i32');\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                return capi.SQLITE_NOTFOUND;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                mTimeStart('xSync');\n                ++metrics.xSync.count;\n                const rc = opRun('xSync', pFile, flags);\n                mTimeEnd();\n                return rc;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                const rc = opRun(\n                  'xDelete',\n                  wasm.cstrToJs(zName),\n                  doSyncDir,\n                  false,\n                );\n                mTimeEnd();\n                return rc;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if ('number' === typeof zName) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.registerVfs = (asDefault = false) => {\n              return wasm.exports.sqlite3_vfs_register(\n                opfsVfs.pointer,\n                asDefault ? 1 : 0,\n              );\n            };\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            const importDbChunked = async function (filename, callback) {\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              const hFile = await hDir.getFileHandle(fnamePart, {\n                create: true,\n              });\n              let sah = await hFile.createSyncAccessHandle();\n              let nWrote = 0,\n                chunk,\n                checkedHeader = false,\n                err = false;\n              try {\n                sah.truncate(0);\n                while (undefined !== (chunk = await callback())) {\n                  if (chunk instanceof ArrayBuffer)\n                    chunk = new Uint8Array(chunk);\n                  if (0 === nWrote && chunk.byteLength >= 15) {\n                    util.affirmDbHeader(chunk);\n                    checkedHeader = true;\n                  }\n                  sah.write(chunk, { at: nWrote });\n                  nWrote += chunk.byteLength;\n                }\n                if (nWrote < 512 || 0 !== nWrote % 512) {\n                  toss(\n                    'Input size',\n                    nWrote,\n                    'is not correct for an SQLite database.',\n                  );\n                }\n                if (!checkedHeader) {\n                  const header = new Uint8Array(20);\n                  sah.read(header, { at: 0 });\n                  util.affirmDbHeader(header);\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                await sah.close();\n                sah = undefined;\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            opfsUtil.importDb = async function (filename, bytes) {\n              if (bytes instanceof Function) {\n                return importDbChunked(filename, bytes);\n              }\n              if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n              util.affirmIsDb(bytes);\n              const n = bytes.byteLength;\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              let sah,\n                err,\n                nWrote = 0;\n              try {\n                const hFile = await hDir.getFileHandle(fnamePart, {\n                  create: true,\n                });\n                sah = await hFile.createSyncAccessHandle();\n                sah.truncate(0);\n                nWrote = sah.write(bytes, { at: 0 });\n                if (nWrote != n) {\n                  toss(\n                    'Expected to write ' +\n                      n +\n                      ' bytes but wrote ' +\n                      nWrote +\n                      '.',\n                  );\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                if (sah) {\n                  await sah.close();\n                  sah = undefined;\n                }\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              OpfsDb.importDb = opfsUtil.importDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                  sqlite3.capi.sqlite3_exec(\n                    oo1Db,\n                    [\n                      'pragma journal_mode=DELETE;',\n\n                      'pragma cache_size=-16384;',\n                    ],\n                    0,\n                    0,\n                    0,\n                  );\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is ä string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is ä string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  if (true === promiseWasRejected) {\n                    break;\n                  }\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve();\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve();\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default: {\n                  const errMsg =\n                    'Unexpected message from the OPFS async worker: ' +\n                    JSON.stringify(data);\n                  error(errMsg);\n                  promiseReject(new Error(errMsg));\n                  break;\n                }\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        globalThis.sqlite3ApiBootstrap.initializersAsync.push(\n          async (sqlite3) => {\n            try {\n              let proxyJs = installOpfsVfs.defaultProxyUri;\n              if (sqlite3.scriptInfo.sqlite3Dir) {\n                installOpfsVfs.defaultProxyUri =\n                  sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n              }\n              return installOpfsVfs().catch((e) => {\n                sqlite3.config.warn(\n                  'Ignoring inability to install OPFS sqlite3_vfs:',\n                  e.message,\n                );\n              });\n            } catch (e) {\n              sqlite3.config.error('installOpfsVfs() exception:', e);\n              return Promise.reject(e);\n            }\n          },\n        );\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = sqlite3.util.toss;\n        const toss3 = sqlite3.util.toss3;\n        const initPromises = Object.create(null);\n        const capi = sqlite3.capi;\n        const util = sqlite3.util;\n        const wasm = sqlite3.wasm;\n\n        const SECTOR_SIZE = 4096;\n        const HEADER_MAX_PATH_SIZE = 512;\n        const HEADER_FLAGS_SIZE = 4;\n        const HEADER_DIGEST_SIZE = 8;\n        const HEADER_CORPUS_SIZE = HEADER_MAX_PATH_SIZE + HEADER_FLAGS_SIZE;\n        const HEADER_OFFSET_FLAGS = HEADER_MAX_PATH_SIZE;\n        const HEADER_OFFSET_DIGEST = HEADER_CORPUS_SIZE;\n        const HEADER_OFFSET_DATA = SECTOR_SIZE;\n\n        const PERSISTENT_FILE_TYPES =\n          capi.SQLITE_OPEN_MAIN_DB |\n          capi.SQLITE_OPEN_MAIN_JOURNAL |\n          capi.SQLITE_OPEN_SUPER_JOURNAL |\n          capi.SQLITE_OPEN_WAL;\n\n        const OPAQUE_DIR_NAME = '.opaque';\n\n        const getRandomName = () => Math.random().toString(36).slice(2);\n\n        const textDecoder = new TextDecoder();\n        const textEncoder = new TextEncoder();\n\n        const optionDefaults = Object.assign(Object.create(null), {\n          name: 'opfs-sahpool',\n          directory: undefined,\n          initialCapacity: 6,\n          clearOnInit: false,\n\n          verbosity: 2,\n        });\n\n        const loggers = [\n          sqlite3.config.error,\n          sqlite3.config.warn,\n          sqlite3.config.log,\n        ];\n        const log = sqlite3.config.log;\n        const warn = sqlite3.config.warn;\n        const error = sqlite3.config.error;\n\n        const __mapVfsToPool = new Map();\n        const getPoolForVfs = (pVfs) => __mapVfsToPool.get(pVfs);\n        const setPoolForVfs = (pVfs, pool) => {\n          if (pool) __mapVfsToPool.set(pVfs, pool);\n          else __mapVfsToPool.delete(pVfs);\n        };\n\n        const __mapSqlite3File = new Map();\n        const getPoolForPFile = (pFile) => __mapSqlite3File.get(pFile);\n        const setPoolForPFile = (pFile, pool) => {\n          if (pool) __mapSqlite3File.set(pFile, pool);\n          else __mapSqlite3File.delete(pFile);\n        };\n\n        const ioMethods = {\n          xCheckReservedLock: function (pFile, pOut) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xCheckReservedLock');\n            pool.storeErr();\n            wasm.poke32(pOut, 1);\n            return 0;\n          },\n          xClose: function (pFile) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            if (file) {\n              try {\n                pool.log(`xClose ${file.path}`);\n                pool.mapS3FileToOFile(pFile, false);\n                file.sah.flush();\n                if (file.flags & capi.SQLITE_OPEN_DELETEONCLOSE) {\n                  pool.deletePath(file.path);\n                }\n              } catch (e) {\n                return pool.storeErr(e, capi.SQLITE_IOERR);\n              }\n            }\n            return 0;\n          },\n          xDeviceCharacteristics: function (pFile) {\n            return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n          },\n          xFileControl: function (pFile, opId, pArg) {\n            return capi.SQLITE_NOTFOUND;\n          },\n          xFileSize: function (pFile, pSz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xFileSize`);\n            const file = pool.getOFileForS3File(pFile);\n            const size = file.sah.getSize() - HEADER_OFFSET_DATA;\n\n            wasm.poke64(pSz64, BigInt(size));\n            return 0;\n          },\n          xLock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xLock ${lockType}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xRead: function (pFile, pDest, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xRead ${file.path} ${n} @ ${offset64}`);\n            try {\n              const nRead = file.sah.read(\n                wasm.heap8u().subarray(pDest, pDest + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              if (nRead < n) {\n                wasm.heap8u().fill(0, pDest + nRead, pDest + n);\n                return capi.SQLITE_IOERR_SHORT_READ;\n              }\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xSectorSize: function (pFile) {\n            return SECTOR_SIZE;\n          },\n          xSync: function (pFile, flags) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xSync ${flags}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.flush();\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xTruncate: function (pFile, sz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xTruncate ${sz64}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.truncate(HEADER_OFFSET_DATA + Number(sz64));\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xUnlock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xUnlock');\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xWrite: function (pFile, pSrc, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xWrite ${file.path} ${n} ${offset64}`);\n            try {\n              const nBytes = file.sah.write(\n                wasm.heap8u().subarray(pSrc, pSrc + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              return n === nBytes ? 0 : toss('Unknown write() failure.');\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n        };\n\n        const opfsIoMethods = new capi.sqlite3_io_methods();\n        opfsIoMethods.$iVersion = 1;\n        sqlite3.vfs.installVfs({\n          io: { struct: opfsIoMethods, methods: ioMethods },\n        });\n\n        const vfsMethods = {\n          xAccess: function (pVfs, zName, flags, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.storeErr();\n            try {\n              const name = pool.getPath(zName);\n              wasm.poke32(pOut, pool.hasFilename(name) ? 1 : 0);\n            } catch (e) {\n              wasm.poke32(pOut, 0);\n            }\n            return 0;\n          },\n          xCurrentTime: function (pVfs, pOut) {\n            wasm.poke(\n              pOut,\n              2440587.5 + new Date().getTime() / 86400000,\n              'double',\n            );\n            return 0;\n          },\n          xCurrentTimeInt64: function (pVfs, pOut) {\n            wasm.poke(pOut, 2440587.5 * 86400000 + new Date().getTime(), 'i64');\n            return 0;\n          },\n          xDelete: function (pVfs, zName, doSyncDir) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xDelete ${wasm.cstrToJs(zName)}`);\n            pool.storeErr();\n            try {\n              pool.deletePath(pool.getPath(zName));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR_DELETE;\n            }\n          },\n          xFullPathname: function (pVfs, zName, nOut, pOut) {\n            const i = wasm.cstrncpy(pOut, zName, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n          },\n          xGetLastError: function (pVfs, nOut, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            const e = pool.popErr();\n            pool.log(`xGetLastError ${nOut} e =`, e);\n            if (e) {\n              const scope = wasm.scopedAllocPush();\n              try {\n                const [cMsg, n] = wasm.scopedAllocCString(e.message, true);\n                wasm.cstrncpy(pOut, cMsg, nOut);\n                if (n > nOut) wasm.poke8(pOut + nOut - 1, 0);\n              } catch (e) {\n                return capi.SQLITE_NOMEM;\n              } finally {\n                wasm.scopedAllocPop(scope);\n              }\n            }\n            return e ? e.sqlite3Rc || capi.SQLITE_IOERR : 0;\n          },\n\n          xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n            const pool = getPoolForVfs(pVfs);\n            try {\n              pool.log(`xOpen ${wasm.cstrToJs(zName)} ${flags}`);\n\n              const path =\n                zName && wasm.peek8(zName)\n                  ? pool.getPath(zName)\n                  : getRandomName();\n              let sah = pool.getSAHForPath(path);\n              if (!sah && flags & capi.SQLITE_OPEN_CREATE) {\n                if (pool.getFileCount() < pool.getCapacity()) {\n                  sah = pool.nextAvailableSAH();\n                  pool.setAssociatedPath(sah, path, flags);\n                } else {\n                  toss('SAH pool is full. Cannot create file', path);\n                }\n              }\n              if (!sah) {\n                toss('file not found:', path);\n              }\n\n              const file = { path, flags, sah };\n              pool.mapS3FileToOFile(pFile, file);\n              file.lockType = capi.SQLITE_LOCK_NONE;\n              const sq3File = new capi.sqlite3_file(pFile);\n              sq3File.$pMethods = opfsIoMethods.pointer;\n              sq3File.dispose();\n              wasm.poke32(pOutFlags, flags);\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_CANTOPEN;\n            }\n          },\n        };\n\n        const createOpfsVfs = function (vfsName) {\n          if (sqlite3.capi.sqlite3_vfs_find(vfsName)) {\n            toss3('VFS name is already registered:', vfsName);\n          }\n          const opfsVfs = new capi.sqlite3_vfs();\n\n          const pDVfs = capi.sqlite3_vfs_find(null);\n          const dVfs = pDVfs ? new capi.sqlite3_vfs(pDVfs) : null;\n          opfsVfs.$iVersion = 2;\n          opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n          opfsVfs.$mxPathname = HEADER_MAX_PATH_SIZE;\n          opfsVfs.addOnDispose(\n            (opfsVfs.$zName = wasm.allocCString(vfsName)),\n            () => setPoolForVfs(opfsVfs.pointer, 0),\n          );\n\n          if (dVfs) {\n            opfsVfs.$xRandomness = dVfs.$xRandomness;\n            opfsVfs.$xSleep = dVfs.$xSleep;\n            dVfs.dispose();\n          }\n          if (!opfsVfs.$xRandomness && !vfsMethods.xRandomness) {\n            vfsMethods.xRandomness = function (pVfs, nOut, pOut) {\n              const heap = wasm.heap8u();\n              let i = 0;\n              for (; i < nOut; ++i)\n                heap[pOut + i] = (Math.random() * 255000) & 0xff;\n              return i;\n            };\n          }\n          if (!opfsVfs.$xSleep && !vfsMethods.xSleep) {\n            vfsMethods.xSleep = (pVfs, ms) => 0;\n          }\n          sqlite3.vfs.installVfs({\n            vfs: { struct: opfsVfs, methods: vfsMethods },\n          });\n          return opfsVfs;\n        };\n\n        class OpfsSAHPool {\n          vfsDir;\n\n          #dhVfsRoot;\n\n          #dhOpaque;\n\n          #dhVfsParent;\n\n          #mapSAHToName = new Map();\n\n          #mapFilenameToSAH = new Map();\n\n          #availableSAH = new Set();\n\n          #mapS3FileToOFile_ = new Map();\n\n          #apBody = new Uint8Array(HEADER_CORPUS_SIZE);\n\n          #dvBody;\n\n          #cVfs;\n\n          #verbosity;\n\n          constructor(options = Object.create(null)) {\n            this.#verbosity = options.verbosity ?? optionDefaults.verbosity;\n            this.vfsName = options.name || optionDefaults.name;\n            this.#cVfs = createOpfsVfs(this.vfsName);\n            setPoolForVfs(this.#cVfs.pointer, this);\n            this.vfsDir = options.directory || '.' + this.vfsName;\n            this.#dvBody = new DataView(\n              this.#apBody.buffer,\n              this.#apBody.byteOffset,\n            );\n            this.isReady = this.reset(\n              !!(options.clearOnInit ?? optionDefaults.clearOnInit),\n            ).then(() => {\n              if (this.$error) throw this.$error;\n              return this.getCapacity()\n                ? Promise.resolve(undefined)\n                : this.addCapacity(\n                    options.initialCapacity || optionDefaults.initialCapacity,\n                  );\n            });\n          }\n\n          #logImpl(level, ...args) {\n            if (this.#verbosity > level)\n              loggers[level](this.vfsName + ':', ...args);\n          }\n          log(...args) {\n            this.#logImpl(2, ...args);\n          }\n          warn(...args) {\n            this.#logImpl(1, ...args);\n          }\n          error(...args) {\n            this.#logImpl(0, ...args);\n          }\n\n          getVfs() {\n            return this.#cVfs;\n          }\n\n          getCapacity() {\n            return this.#mapSAHToName.size;\n          }\n\n          getFileCount() {\n            return this.#mapFilenameToSAH.size;\n          }\n\n          getFileNames() {\n            const rc = [];\n            const iter = this.#mapFilenameToSAH.keys();\n            for (const n of iter) rc.push(n);\n            return rc;\n          }\n\n          async addCapacity(n) {\n            for (let i = 0; i < n; ++i) {\n              const name = getRandomName();\n              const h = await this.#dhOpaque.getFileHandle(name, {\n                create: true,\n              });\n              const ah = await h.createSyncAccessHandle();\n              this.#mapSAHToName.set(ah, name);\n              this.setAssociatedPath(ah, '', 0);\n            }\n            return this.getCapacity();\n          }\n\n          async reduceCapacity(n) {\n            let nRm = 0;\n            for (const ah of Array.from(this.#availableSAH)) {\n              if (nRm === n || this.getFileCount() === this.getCapacity()) {\n                break;\n              }\n              const name = this.#mapSAHToName.get(ah);\n\n              ah.close();\n              await this.#dhOpaque.removeEntry(name);\n              this.#mapSAHToName.delete(ah);\n              this.#availableSAH.delete(ah);\n              ++nRm;\n            }\n            return nRm;\n          }\n\n          releaseAccessHandles() {\n            for (const ah of this.#mapSAHToName.keys()) ah.close();\n            this.#mapSAHToName.clear();\n            this.#mapFilenameToSAH.clear();\n            this.#availableSAH.clear();\n          }\n\n          async acquireAccessHandles(clearFiles) {\n            const files = [];\n            for await (const [name, h] of this.#dhOpaque) {\n              if ('file' === h.kind) {\n                files.push([name, h]);\n              }\n            }\n            return Promise.all(\n              files.map(async ([name, h]) => {\n                try {\n                  const ah = await h.createSyncAccessHandle();\n                  this.#mapSAHToName.set(ah, name);\n                  if (clearFiles) {\n                    ah.truncate(HEADER_OFFSET_DATA);\n                    this.setAssociatedPath(ah, '', 0);\n                  } else {\n                    const path = this.getAssociatedPath(ah);\n                    if (path) {\n                      this.#mapFilenameToSAH.set(path, ah);\n                    } else {\n                      this.#availableSAH.add(ah);\n                    }\n                  }\n                } catch (e) {\n                  this.storeErr(e);\n                  this.releaseAccessHandles();\n                  throw e;\n                }\n              }),\n            );\n          }\n\n          getAssociatedPath(sah) {\n            sah.read(this.#apBody, { at: 0 });\n\n            const flags = this.#dvBody.getUint32(HEADER_OFFSET_FLAGS);\n            if (\n              this.#apBody[0] &&\n              (flags & capi.SQLITE_OPEN_DELETEONCLOSE ||\n                (flags & PERSISTENT_FILE_TYPES) === 0)\n            ) {\n              warn(\n                `Removing file with unexpected flags ${flags.toString(16)}`,\n                this.#apBody,\n              );\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n\n            const fileDigest = new Uint32Array(HEADER_DIGEST_SIZE / 4);\n            sah.read(fileDigest, { at: HEADER_OFFSET_DIGEST });\n            const compDigest = this.computeDigest(this.#apBody);\n            if (fileDigest.every((v, i) => v === compDigest[i])) {\n              const pathBytes = this.#apBody.findIndex((v) => 0 === v);\n              if (0 === pathBytes) {\n                sah.truncate(HEADER_OFFSET_DATA);\n              }\n              return pathBytes\n                ? textDecoder.decode(this.#apBody.subarray(0, pathBytes))\n                : '';\n            } else {\n              warn('Disassociating file with bad digest.');\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n          }\n\n          setAssociatedPath(sah, path, flags) {\n            const enc = textEncoder.encodeInto(path, this.#apBody);\n            if (HEADER_MAX_PATH_SIZE <= enc.written + 1) {\n              toss('Path too long:', path);\n            }\n            this.#apBody.fill(0, enc.written, HEADER_MAX_PATH_SIZE);\n            this.#dvBody.setUint32(HEADER_OFFSET_FLAGS, flags);\n\n            const digest = this.computeDigest(this.#apBody);\n            sah.write(this.#apBody, { at: 0 });\n            sah.write(digest, { at: HEADER_OFFSET_DIGEST });\n            sah.flush();\n\n            if (path) {\n              this.#mapFilenameToSAH.set(path, sah);\n              this.#availableSAH.delete(sah);\n            } else {\n              sah.truncate(HEADER_OFFSET_DATA);\n              this.#availableSAH.add(sah);\n            }\n          }\n\n          computeDigest(byteArray) {\n            let h1 = 0xdeadbeef;\n            let h2 = 0x41c6ce57;\n            for (const v of byteArray) {\n              h1 = 31 * h1 + v * 307;\n              h2 = 31 * h2 + v * 307;\n            }\n            return new Uint32Array([h1 >>> 0, h2 >>> 0]);\n          }\n\n          async reset(clearFiles) {\n            await this.isReady;\n            let h = await navigator.storage.getDirectory();\n            let prev, prevName;\n            for (const d of this.vfsDir.split('/')) {\n              if (d) {\n                prev = h;\n                h = await h.getDirectoryHandle(d, { create: true });\n              }\n            }\n            this.#dhVfsRoot = h;\n            this.#dhVfsParent = prev;\n            this.#dhOpaque = await this.#dhVfsRoot.getDirectoryHandle(\n              OPAQUE_DIR_NAME,\n              { create: true },\n            );\n            this.releaseAccessHandles();\n            return this.acquireAccessHandles(clearFiles);\n          }\n\n          getPath(arg) {\n            if (wasm.isPtr(arg)) arg = wasm.cstrToJs(arg);\n            return (\n              arg instanceof URL ? arg : new URL(arg, 'file://localhost/')\n            ).pathname;\n          }\n\n          deletePath(path) {\n            const sah = this.#mapFilenameToSAH.get(path);\n            if (sah) {\n              this.#mapFilenameToSAH.delete(path);\n              this.setAssociatedPath(sah, '', 0);\n            }\n            return !!sah;\n          }\n\n          storeErr(e, code) {\n            if (e) {\n              e.sqlite3Rc = code || capi.SQLITE_IOERR;\n              this.error(e);\n            }\n            this.$error = e;\n            return code;\n          }\n\n          popErr() {\n            const rc = this.$error;\n            this.$error = undefined;\n            return rc;\n          }\n\n          nextAvailableSAH() {\n            const [rc] = this.#availableSAH.keys();\n            return rc;\n          }\n\n          getOFileForS3File(pFile) {\n            return this.#mapS3FileToOFile_.get(pFile);\n          }\n\n          mapS3FileToOFile(pFile, file) {\n            if (file) {\n              this.#mapS3FileToOFile_.set(pFile, file);\n              setPoolForPFile(pFile, this);\n            } else {\n              this.#mapS3FileToOFile_.delete(pFile);\n              setPoolForPFile(pFile, false);\n            }\n          }\n\n          hasFilename(name) {\n            return this.#mapFilenameToSAH.has(name);\n          }\n\n          getSAHForPath(path) {\n            return this.#mapFilenameToSAH.get(path);\n          }\n\n          async removeVfs() {\n            if (!this.#cVfs.pointer || !this.#dhOpaque) return false;\n            capi.sqlite3_vfs_unregister(this.#cVfs.pointer);\n            this.#cVfs.dispose();\n            try {\n              this.releaseAccessHandles();\n              await this.#dhVfsRoot.removeEntry(OPAQUE_DIR_NAME, {\n                recursive: true,\n              });\n              this.#dhOpaque = undefined;\n              await this.#dhVfsParent.removeEntry(this.#dhVfsRoot.name, {\n                recursive: true,\n              });\n              this.#dhVfsRoot = this.#dhVfsParent = undefined;\n            } catch (e) {\n              sqlite3.config.error(this.vfsName, 'removeVfs() failed:', e);\n            }\n            return true;\n          }\n\n          exportFile(name) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) || toss('File not found:', name);\n            const n = sah.getSize() - HEADER_OFFSET_DATA;\n            const b = new Uint8Array(n > 0 ? n : 0);\n            if (n > 0) {\n              const nRead = sah.read(b, { at: HEADER_OFFSET_DATA });\n              if (nRead != n) {\n                toss(\n                  'Expected to read ' + n + ' bytes but read ' + nRead + '.',\n                );\n              }\n            }\n            return b;\n          }\n\n          async importDbChunked(name, callback) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            sah.truncate(0);\n            let nWrote = 0,\n              chunk,\n              checkedHeader = false,\n              err = false;\n            try {\n              while (undefined !== (chunk = await callback())) {\n                if (chunk instanceof ArrayBuffer) chunk = new Uint8Array(chunk);\n                if (0 === nWrote && chunk.byteLength >= 15) {\n                  util.affirmDbHeader(chunk);\n                  checkedHeader = true;\n                }\n                sah.write(chunk, { at: HEADER_OFFSET_DATA + nWrote });\n                nWrote += chunk.byteLength;\n              }\n              if (nWrote < 512 || 0 !== nWrote % 512) {\n                toss(\n                  'Input size',\n                  nWrote,\n                  'is not correct for an SQLite database.',\n                );\n              }\n              if (!checkedHeader) {\n                const header = new Uint8Array(20);\n                sah.read(header, { at: 0 });\n                util.affirmDbHeader(header);\n              }\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n            } catch (e) {\n              this.setAssociatedPath(sah, '', 0);\n              throw e;\n            }\n            this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            return nWrote;\n          }\n\n          importDb(name, bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            else if (bytes instanceof Function)\n              return this.importDbChunked(name, bytes);\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 != 0) {\n              toss('Byte array size is invalid for an SQLite db.');\n            }\n            const header = 'SQLite format 3';\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss('Input does not contain an SQLite database header.');\n              }\n            }\n            const nWrote = sah.write(bytes, { at: HEADER_OFFSET_DATA });\n            if (nWrote != n) {\n              this.setAssociatedPath(sah, '', 0);\n              toss(\n                'Expected to write ' + n + ' bytes but wrote ' + nWrote + '.',\n              );\n            } else {\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n              this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            }\n            return nWrote;\n          }\n        }\n\n        class OpfsSAHPoolUtil {\n          #p;\n\n          constructor(sahPool) {\n            this.#p = sahPool;\n            this.vfsName = sahPool.vfsName;\n          }\n\n          async addCapacity(n) {\n            return this.#p.addCapacity(n);\n          }\n\n          async reduceCapacity(n) {\n            return this.#p.reduceCapacity(n);\n          }\n\n          getCapacity() {\n            return this.#p.getCapacity(this.#p);\n          }\n\n          getFileCount() {\n            return this.#p.getFileCount();\n          }\n          getFileNames() {\n            return this.#p.getFileNames();\n          }\n\n          async reserveMinimumCapacity(min) {\n            const c = this.#p.getCapacity();\n            return c < min ? this.#p.addCapacity(min - c) : c;\n          }\n\n          exportFile(name) {\n            return this.#p.exportFile(name);\n          }\n\n          importDb(name, bytes) {\n            return this.#p.importDb(name, bytes);\n          }\n\n          async wipeFiles() {\n            return this.#p.reset(true);\n          }\n\n          unlink(filename) {\n            return this.#p.deletePath(filename);\n          }\n\n          async removeVfs() {\n            return this.#p.removeVfs();\n          }\n        }\n\n        const apiVersionCheck = async () => {\n          const dh = await navigator.storage.getDirectory();\n          const fn = '.opfs-sahpool-sync-check-' + getRandomName();\n          const fh = await dh.getFileHandle(fn, { create: true });\n          const ah = await fh.createSyncAccessHandle();\n          const close = ah.close();\n          await close;\n          await dh.removeEntry(fn);\n          if (close?.then) {\n            toss(\n              'The local OPFS API is too old for opfs-sahpool:',\n              'it has an async FileSystemSyncAccessHandle.close() method.',\n            );\n          }\n          return true;\n        };\n\n        let instanceCounter = 0;\n\n        sqlite3.installOpfsSAHPoolVfs = async function (\n          options = Object.create(null),\n        ) {\n          const vfsName = options.name || optionDefaults.name;\n          if (0 && 2 === ++instanceCounter) {\n            throw new Error('Just testing rejection.');\n          }\n          if (initPromises[vfsName]) {\n            return initPromises[vfsName];\n          }\n          if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return (initPromises[vfsName] = Promise.reject(\n              new Error('Missing required OPFS APIs.'),\n            ));\n          }\n\n          return (initPromises[vfsName] = apiVersionCheck()\n            .then(async function () {\n              if (options.$testThrowInInit) {\n                throw options.$testThrowInInit;\n              }\n              const thePool = new OpfsSAHPool(options);\n              return thePool.isReady\n                .then(async () => {\n                  const poolUtil = new OpfsSAHPoolUtil(thePool);\n                  if (sqlite3.oo1) {\n                    const oo1 = sqlite3.oo1;\n                    const theVfs = thePool.getVfs();\n                    const OpfsSAHPoolDb = function (...args) {\n                      const opt = oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                      opt.vfs = theVfs.$zName;\n                      oo1.DB.dbCtorHelper.call(this, opt);\n                    };\n                    OpfsSAHPoolDb.prototype = Object.create(oo1.DB.prototype);\n\n                    poolUtil.OpfsSAHPoolDb = OpfsSAHPoolDb;\n                    oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                      theVfs.pointer,\n                      function (oo1Db, sqlite3) {\n                        sqlite3.capi.sqlite3_exec(\n                          oo1Db,\n                          [\n                            'pragma journal_mode=DELETE;',\n                            'pragma cache_size=-16384;',\n                          ],\n                          0,\n                          0,\n                          0,\n                        );\n                      },\n                    );\n                  }\n                  thePool.log('VFS initialized.');\n                  return poolUtil;\n                })\n                .catch(async (e) => {\n                  await thePool.removeVfs().catch(() => {});\n                  return e;\n                });\n            })\n            .catch((err) => {\n              return (initPromises[vfsName] = Promise.reject(err));\n            }));\n        };\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports:\n              'undefined' === typeof wasmExports ? Module['asm'] : wasmExports,\n            memory: Module.wasmMemory,\n          },\n          globalThis.sqlite3ApiConfig || {},\n        );\n\n        globalThis.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = globalThis.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete globalThis.sqlite3ApiBootstrap;\n          delete globalThis.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    });\n\n    return sqlite3InitModule.ready;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (globalThis.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: globalThis?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: globalThis.location,\n      urlParams: globalThis?.location?.href\n        ? new URL(globalThis.location.href).searchParams\n        : new URLSearchParams(),\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  globalThis.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        return f();\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  globalThis.sqlite3InitModule.ready = originalInit.ready;\n\n  if (globalThis.sqlite3InitModuleState.moduleScript) {\n    const sim = globalThis.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('globalThis.location.href =', globalThis.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return globalThis.sqlite3InitModule;\n})();\nsqlite3InitModule = toExportForESM;\nexport default sqlite3InitModule;\n","/*\n  2022-08-24\n\n  The author disclaims copyright to this source code.  In place of a\n  legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n\n  ***********************************************************************\n\n  This file implements a Promise-based proxy for the sqlite3 Worker\n  API #1. It is intended to be included either from the main thread or\n  a Worker, but only if (A) the environment supports nested Workers\n  and (B) it's _not_ a Worker which loads the sqlite3 WASM/JS\n  module. This file's features will load that module and provide a\n  slightly simpler client-side interface than the slightly-lower-level\n  Worker API does.\n\n  This script necessarily exposes one global symbol, but clients may\n  freely `delete` that symbol after calling it.\n*/\n'use strict';\n\nglobalThis.sqlite3Worker1Promiser = function callee(\n  config = callee.defaultConfig,\n) {\n  if (1 === arguments.length && 'function' === typeof arguments[0]) {\n    const f = config;\n    config = Object.assign(Object.create(null), callee.defaultConfig);\n    config.onready = f;\n  } else {\n    config = Object.assign(Object.create(null), callee.defaultConfig, config);\n  }\n  const handlerMap = Object.create(null);\n  const noop = function () {};\n  const err = config.onerror || noop;\n  const debug = config.debug || noop;\n  const idTypeMap = config.generateMessageId ? undefined : Object.create(null);\n  const genMsgId =\n    config.generateMessageId ||\n    function (msg) {\n      return (\n        msg.type + '#' + (idTypeMap[msg.type] = (idTypeMap[msg.type] || 0) + 1)\n      );\n    };\n  const toss = (...args) => {\n    throw new Error(args.join(' '));\n  };\n  if (!config.worker) config.worker = callee.defaultConfig.worker;\n  if ('function' === typeof config.worker) config.worker = config.worker();\n  let dbId;\n  config.worker.onmessage = function (ev) {\n    ev = ev.data;\n    debug('worker1.onmessage', ev);\n    let msgHandler = handlerMap[ev.messageId];\n    if (!msgHandler) {\n      if (ev && 'sqlite3-api' === ev.type && 'worker1-ready' === ev.result) {\n        if (config.onready) config.onready();\n        return;\n      }\n      msgHandler = handlerMap[ev.type];\n      if (msgHandler && msgHandler.onrow) {\n        msgHandler.onrow(ev);\n        return;\n      }\n      if (config.onunhandled) config.onunhandled(arguments[0]);\n      else err('sqlite3Worker1Promiser() unhandled worker message:', ev);\n      return;\n    }\n    delete handlerMap[ev.messageId];\n    switch (ev.type) {\n      case 'error':\n        msgHandler.reject(ev);\n        return;\n      case 'open':\n        if (!dbId) dbId = ev.dbId;\n        break;\n      case 'close':\n        if (ev.dbId === dbId) dbId = undefined;\n        break;\n      default:\n        break;\n    }\n    try {\n      msgHandler.resolve(ev);\n    } catch (e) {\n      msgHandler.reject(e);\n    }\n  };\n  return function () {\n    let msg;\n    if (1 === arguments.length) {\n      msg = arguments[0];\n    } else if (2 === arguments.length) {\n      msg = Object.create(null);\n      msg.type = arguments[0];\n      msg.args = arguments[1];\n      msg.dbId = msg.args.dbId;\n    } else {\n      toss('Invalid arugments for sqlite3Worker1Promiser()-created factory.');\n    }\n    if (!msg.dbId && msg.type !== 'open') msg.dbId = dbId;\n    msg.messageId = genMsgId(msg);\n    msg.departureTime = performance.now();\n    const proxy = Object.create(null);\n    proxy.message = msg;\n    let rowCallbackId;\n    if ('exec' === msg.type && msg.args) {\n      if ('function' === typeof msg.args.callback) {\n        rowCallbackId = msg.messageId + ':row';\n        proxy.onrow = msg.args.callback;\n        msg.args.callback = rowCallbackId;\n        handlerMap[rowCallbackId] = proxy;\n      } else if ('string' === typeof msg.args.callback) {\n        toss(\n          'exec callback may not be a string when using the Promise interface.',\n        );\n      }\n    }\n\n    let p = new Promise(function (resolve, reject) {\n      proxy.resolve = resolve;\n      proxy.reject = reject;\n      handlerMap[msg.messageId] = proxy;\n      debug(\n        'Posting',\n        msg.type,\n        'message to Worker dbId=' + (dbId || 'default') + ':',\n        msg,\n      );\n      config.worker.postMessage(msg);\n    });\n    if (rowCallbackId) p = p.finally(() => delete handlerMap[rowCallbackId]);\n    return p;\n  };\n};\nglobalThis.sqlite3Worker1Promiser.defaultConfig = {\n  worker: function () {\n    return new Worker(\n      new URL('sqlite3-worker1-bundler-friendly.mjs', import.meta.url),\n      {\n        type: 'module',\n      },\n    );\n  },\n  onerror: (...args) => console.error('worker1 promiser error', ...args),\n};\n","import { default as sqlite3InitModule } from './sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs';\nimport './sqlite-wasm/jswasm/sqlite3-worker1-promiser-bundler-friendly.js';\n\nconst sqlite3Worker1Promiser = self.sqlite3Worker1Promiser;\n\nexport default sqlite3InitModule;\nexport { sqlite3Worker1Promiser };\n","export const SYNQLITE_PREFIX = 'synql';\nexport const SYNQLITE_BATCH_SIZE = 20;","import { ISettingsParam, ILogObj } from 'tslog';\n\nexport type SyncableTable = {\n  name: string;\n  id: string;\n}\n\nexport type SynQLiteOptionsBase = {\n  sqlite3?: SQLiteWASM;\n  filename?: string;\n  prefix: string;\n  tables: SyncableTable[];\n  batchSize?: number;\n  wal?: boolean;\n  preInit?: string[];\n  postInit?: string[];\n  logOptions?: ISettingsParam<ILogObj>\n}\n\nexport type SynQLiteOptions = SynQLiteOptionsBase & (\n  {\n    sqlite3: any;\n  } | {\n    filename: string;\n  }\n)\n\nexport type SQLiteWASM = any\n\n// @TODO: create types for WASM SQLite3 instance?\nexport type Database = { }\n\nexport type SynqlDatabase = Database & {\n  synqPrefix?: string;\n  synqTables?: SyncableTable[];\n  synqBatchSize: number;\n  utils: {\n    utcNowAsISO8601: () => string;\n    strtimeAsISO8601: string;\n  }\n  [key: string]: any;\n}\n\nexport interface SynQLiteInterface {\n  db: SQLiteWASM;\n  dbName: string;\n  synqDbId?: string;\n  synqPrefix?: string;\n  synqTables?: SyncableTable[];\n  synqBatchSize: number;\n  wal: boolean;\n  utils: {\n    utcNowAsISO8601: () => string;\n    strtimeAsISO8601: string;\n  };\n  init(): Promise<SynQLiteInterface>;\n  runQuery<T>(queryData: {sql: string, values?: any[]}): Promise<T>;\n  getLastSync: Promise<MetaRowData>;\n  getChangesSinceLastSync(data: {db: SQLiteWASM, lastSync?: string}): Promise<Change[]>;\n  beginTransaction(): Promise<string>;\n  commitTransaction({savepoint}: {savepoint: string}): Promise<any>;\n  rollbackTransaction({savepoint}: {savepoint: string}): Promise<any>;\n  // applyChange(data: ApplyChangeParams): Promise<any>;\n  applyChangesToLocalDB(changes: Change[]): Promise<any>;\n  setupTriggersForTable(data: {table: SyncableTable}): Promise<any>;\n}\n\nexport type ApplyChangeParams = {\n  change: Change,\n  savepoint: string\n}\n\nexport type MetaRowData = {\n  meta_name: string;\n  meta_value: string;\n}\n\nexport type Change = {\n  id: number;\n  table_name: string;\n  row_id: string;\n  operation: string;\n  data: string; // JSON string\n  modified_at: string;\n}\n\nexport enum LogLevel {\n  Silly,\n  Trace,\n  Debug,\n  Info,\n  Warn,\n  Error,\n  Fatal\n};","export const prettyLogStyles = {\n    reset: [0, 0],\n    bold: [1, 22],\n    dim: [2, 22],\n    italic: [3, 23],\n    underline: [4, 24],\n    overline: [53, 55],\n    inverse: [7, 27],\n    hidden: [8, 28],\n    strikethrough: [9, 29],\n    black: [30, 39],\n    red: [31, 39],\n    green: [32, 39],\n    yellow: [33, 39],\n    blue: [34, 39],\n    magenta: [35, 39],\n    cyan: [36, 39],\n    white: [37, 39],\n    blackBright: [90, 39],\n    redBright: [91, 39],\n    greenBright: [92, 39],\n    yellowBright: [93, 39],\n    blueBright: [94, 39],\n    magentaBright: [95, 39],\n    cyanBright: [96, 39],\n    whiteBright: [97, 39],\n    bgBlack: [40, 49],\n    bgRed: [41, 49],\n    bgGreen: [42, 49],\n    bgYellow: [43, 49],\n    bgBlue: [44, 49],\n    bgMagenta: [45, 49],\n    bgCyan: [46, 49],\n    bgWhite: [47, 49],\n    bgBlackBright: [100, 49],\n    bgRedBright: [101, 49],\n    bgGreenBright: [102, 49],\n    bgYellowBright: [103, 49],\n    bgBlueBright: [104, 49],\n    bgMagentaBright: [105, 49],\n    bgCyanBright: [106, 49],\n    bgWhiteBright: [107, 49],\n};\n","import { prettyLogStyles } from \"./prettyLogStyles.js\";\nexport function formatTemplate(settings, template, values, hideUnsetPlaceholder = false) {\n    const templateString = String(template);\n    const ansiColorWrap = (placeholderValue, code) => `\\u001b[${code[0]}m${placeholderValue}\\u001b[${code[1]}m`;\n    const styleWrap = (value, style) => {\n        if (style != null && typeof style === \"string\") {\n            return ansiColorWrap(value, prettyLogStyles[style]);\n        }\n        else if (style != null && Array.isArray(style)) {\n            return style.reduce((prevValue, thisStyle) => styleWrap(prevValue, thisStyle), value);\n        }\n        else {\n            if (style != null && style[value.trim()] != null) {\n                return styleWrap(value, style[value.trim()]);\n            }\n            else if (style != null && style[\"*\"] != null) {\n                return styleWrap(value, style[\"*\"]);\n            }\n            else {\n                return value;\n            }\n        }\n    };\n    const defaultStyle = null;\n    return templateString.replace(/{{(.+?)}}/g, (_, placeholder) => {\n        const value = values[placeholder] != null ? String(values[placeholder]) : hideUnsetPlaceholder ? \"\" : _;\n        return settings.stylePrettyLogs\n            ? styleWrap(value, settings?.prettyLogStyles?.[placeholder] ?? defaultStyle) + ansiColorWrap(\"\", prettyLogStyles.reset)\n            : value;\n    });\n}\n","export function formatNumberAddZeros(value, digits = 2, addNumber = 0) {\n    if (value != null && isNaN(value)) {\n        return \"\";\n    }\n    value = value != null ? value + addNumber : value;\n    return digits === 2\n        ? value == null\n            ? \"--\"\n            : value < 10\n                ? \"0\" + value\n                : value.toString()\n        : value == null\n            ? \"---\"\n            : value < 10\n                ? \"00\" + value\n                : value < 100\n                    ? \"0\" + value\n                    : value.toString();\n}\n","export function jsonStringifyRecursive(obj) {\n    const cache = new Set();\n    return JSON.stringify(obj, (key, value) => {\n        if (typeof value === \"object\" && value !== null) {\n            if (cache.has(value)) {\n                return \"[Circular]\";\n            }\n            cache.add(value);\n        }\n        return value;\n    });\n}\n","import { prettyLogStyles } from \"../../prettyLogStyles.js\";\nimport { jsonStringifyRecursive } from \"./helper.jsonStringifyRecursive.js\";\nexport function inspect(obj, opts) {\n    const ctx = {\n        seen: [],\n        stylize: stylizeNoColor,\n    };\n    if (opts != null) {\n        _extend(ctx, opts);\n    }\n    if (isUndefined(ctx.showHidden))\n        ctx.showHidden = false;\n    if (isUndefined(ctx.depth))\n        ctx.depth = 2;\n    if (isUndefined(ctx.colors))\n        ctx.colors = true;\n    if (isUndefined(ctx.customInspect))\n        ctx.customInspect = true;\n    if (ctx.colors)\n        ctx.stylize = stylizeWithColor;\n    return formatValue(ctx, obj, ctx.depth);\n}\ninspect.colors = prettyLogStyles;\ninspect.styles = {\n    special: \"cyan\",\n    number: \"yellow\",\n    boolean: \"yellow\",\n    undefined: \"grey\",\n    null: \"bold\",\n    string: \"green\",\n    date: \"magenta\",\n    regexp: \"red\",\n};\nfunction isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nfunction isUndefined(arg) {\n    return arg === undefined;\n}\nfunction stylizeNoColor(str) {\n    return str;\n}\nfunction stylizeWithColor(str, styleType) {\n    const style = inspect.styles[styleType];\n    if (style != null && inspect?.colors?.[style]?.[0] != null && inspect?.colors?.[style]?.[1] != null) {\n        return \"\\u001b[\" + inspect.colors[style][0] + \"m\" + str + \"\\u001b[\" + inspect.colors[style][1] + \"m\";\n    }\n    else {\n        return str;\n    }\n}\nfunction isFunction(arg) {\n    return typeof arg === \"function\";\n}\nfunction isString(arg) {\n    return typeof arg === \"string\";\n}\nfunction isNumber(arg) {\n    return typeof arg === \"number\";\n}\nfunction isNull(arg) {\n    return arg === null;\n}\nfunction hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nfunction isRegExp(re) {\n    return isObject(re) && objectToString(re) === \"[object RegExp]\";\n}\nfunction isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nfunction isError(e) {\n    return isObject(e) && (objectToString(e) === \"[object Error]\" || e instanceof Error);\n}\nfunction isDate(d) {\n    return isObject(d) && objectToString(d) === \"[object Date]\";\n}\nfunction objectToString(o) {\n    return Object.prototype.toString.call(o);\n}\nfunction arrayToHash(array) {\n    const hash = {};\n    array.forEach((val) => {\n        hash[val] = true;\n    });\n    return hash;\n}\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n    const output = [];\n    for (let i = 0, l = value.length; i < l; ++i) {\n        if (hasOwn(value, String(i))) {\n            output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n        }\n        else {\n            output.push(\"\");\n        }\n    }\n    keys.forEach((key) => {\n        if (!key.match(/^\\d+$/)) {\n            output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n        }\n    });\n    return output;\n}\nfunction formatError(value) {\n    return \"[\" + Error.prototype.toString.call(value) + \"]\";\n}\nexport function formatValue(ctx, value, recurseTimes = 0) {\n    if (ctx.customInspect &&\n        value != null &&\n        isFunction(value) &&\n        value?.inspect !== inspect &&\n        !(value?.constructor && value?.constructor.prototype === value)) {\n        if (typeof value.inspect !== \"function\" && value.toString != null) {\n            return value.toString();\n        }\n        let ret = value?.inspect(recurseTimes, ctx);\n        if (!isString(ret)) {\n            ret = formatValue(ctx, ret, recurseTimes);\n        }\n        return ret;\n    }\n    const primitive = formatPrimitive(ctx, value);\n    if (primitive) {\n        return primitive;\n    }\n    let keys = Object.keys(value);\n    const visibleKeys = arrayToHash(keys);\n    try {\n        if (ctx.showHidden && Object.getOwnPropertyNames) {\n            keys = Object.getOwnPropertyNames(value);\n        }\n    }\n    catch (e) {\n    }\n    if (isError(value) && (keys.indexOf(\"message\") >= 0 || keys.indexOf(\"description\") >= 0)) {\n        return formatError(value);\n    }\n    if (keys.length === 0) {\n        if (isFunction(ctx.stylize)) {\n            if (isFunction(value)) {\n                const name = value.name ? \": \" + value.name : \"\";\n                return ctx.stylize(\"[Function\" + name + \"]\", \"special\");\n            }\n            if (isRegExp(value)) {\n                return ctx.stylize(RegExp.prototype.toString.call(value), \"regexp\");\n            }\n            if (isDate(value)) {\n                return ctx.stylize(Date.prototype.toISOString.call(value), \"date\");\n            }\n            if (isError(value)) {\n                return formatError(value);\n            }\n        }\n        else {\n            return value;\n        }\n    }\n    let base = \"\";\n    let array = false;\n    let braces = [\"{\\n\", \"\\n}\"];\n    if (Array.isArray(value)) {\n        array = true;\n        braces = [\"[\\n\", \"\\n]\"];\n    }\n    if (isFunction(value)) {\n        const n = value.name ? \": \" + value.name : \"\";\n        base = \" [Function\" + n + \"]\";\n    }\n    if (isRegExp(value)) {\n        base = \" \" + RegExp.prototype.toString.call(value);\n    }\n    if (isDate(value)) {\n        base = \" \" + Date.prototype.toUTCString.call(value);\n    }\n    if (isError(value)) {\n        base = \" \" + formatError(value);\n    }\n    if (keys.length === 0 && (!array || value.length == 0)) {\n        return braces[0] + base + braces[1];\n    }\n    if (recurseTimes < 0) {\n        if (isRegExp(value)) {\n            return ctx.stylize(RegExp.prototype.toString.call(value), \"regexp\");\n        }\n        else {\n            return ctx.stylize(\"[Object]\", \"special\");\n        }\n    }\n    ctx.seen.push(value);\n    let output;\n    if (array) {\n        output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n    }\n    else {\n        output = keys.map((key) => {\n            return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n        });\n    }\n    ctx.seen.pop();\n    return reduceToSingleString(output, base, braces);\n}\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n    let name, str;\n    let desc = { value: void 0 };\n    try {\n        desc.value = value[key];\n    }\n    catch (e) {\n    }\n    try {\n        if (Object.getOwnPropertyDescriptor) {\n            desc = Object.getOwnPropertyDescriptor(value, key) || desc;\n        }\n    }\n    catch (e) {\n    }\n    if (desc.get) {\n        if (desc.set) {\n            str = ctx.stylize(\"[Getter/Setter]\", \"special\");\n        }\n        else {\n            str = ctx.stylize(\"[Getter]\", \"special\");\n        }\n    }\n    else {\n        if (desc.set) {\n            str = ctx.stylize(\"[Setter]\", \"special\");\n        }\n    }\n    if (!hasOwn(visibleKeys, key)) {\n        name = \"[\" + key + \"]\";\n    }\n    if (!str) {\n        if (ctx.seen.indexOf(desc.value) < 0) {\n            if (isNull(recurseTimes)) {\n                str = formatValue(ctx, desc.value, undefined);\n            }\n            else {\n                str = formatValue(ctx, desc.value, recurseTimes - 1);\n            }\n            if (str.indexOf(\"\\n\") > -1) {\n                if (array) {\n                    str = str\n                        .split(\"\\n\")\n                        .map((line) => {\n                        return \"  \" + line;\n                    })\n                        .join(\"\\n\")\n                        .substr(2);\n                }\n                else {\n                    str =\n                        \"\\n\" +\n                            str\n                                .split(\"\\n\")\n                                .map((line) => {\n                                return \"   \" + line;\n                            })\n                                .join(\"\\n\");\n                }\n            }\n        }\n        else {\n            str = ctx.stylize(\"[Circular]\", \"special\");\n        }\n    }\n    if (isUndefined(name)) {\n        if (array && key.match(/^\\d+$/)) {\n            return str;\n        }\n        name = JSON.stringify(\"\" + key);\n        if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n            name = name.substr(1, name.length - 2);\n            name = ctx.stylize(name, \"name\");\n        }\n        else {\n            name = name\n                .replace(/'/g, \"\\\\'\")\n                .replace(/\\\\\"/g, \"\\\\'\")\n                .replace(/(^\"|\"$)/g, \"'\");\n            name = ctx.stylize(name, \"string\");\n        }\n    }\n    return name + \": \" + str;\n}\nfunction formatPrimitive(ctx, value) {\n    if (isUndefined(value))\n        return ctx.stylize(\"undefined\", \"undefined\");\n    if (isString(value)) {\n        const simple = \"'\" + JSON.stringify(value).replace(/^\"|\"$/g, \"\").replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, \"\\\\'\") + \"'\";\n        return ctx.stylize(simple, \"string\");\n    }\n    if (isNumber(value))\n        return ctx.stylize(\"\" + value, \"number\");\n    if (isBoolean(value))\n        return ctx.stylize(\"\" + value, \"boolean\");\n    if (isNull(value))\n        return ctx.stylize(\"null\", \"null\");\n}\nfunction reduceToSingleString(output, base, braces) {\n    return braces[0] + (base === \"\" ? \"\" : base + \"\\n\") + \"  \" + output.join(\",\\n  \") + \" \" + braces[1];\n}\nfunction _extend(origin, add) {\n    if (!add || !isObject(add))\n        return origin;\n    const clonedOrigin = { ...origin };\n    const clonedAdd = { ...add };\n    const keys = Object.keys(add);\n    let i = keys.length;\n    while (i--) {\n        clonedOrigin[keys[i]] = clonedAdd[keys[i]];\n    }\n    return origin;\n}\nexport function formatWithOptions(inspectOptions, ...args) {\n    const ctx = {\n        seen: [],\n        stylize: stylizeNoColor,\n    };\n    if (inspectOptions != null) {\n        _extend(ctx, inspectOptions);\n    }\n    const first = args[0];\n    let a = 0;\n    let str = \"\";\n    let join = \"\";\n    if (typeof first === \"string\") {\n        if (args.length === 1) {\n            return first;\n        }\n        let tempStr;\n        let lastPos = 0;\n        for (let i = 0; i < first.length - 1; i++) {\n            if (first.charCodeAt(i) === 37) {\n                const nextChar = first.charCodeAt(++i);\n                if (a + 1 !== args.length) {\n                    switch (nextChar) {\n                        case 115: {\n                            const tempArg = args[++a];\n                            if (typeof tempArg === \"number\") {\n                                tempStr = formatPrimitive(ctx, tempArg);\n                            }\n                            else if (typeof tempArg === \"bigint\") {\n                                tempStr = formatPrimitive(ctx, tempArg);\n                            }\n                            else if (typeof tempArg !== \"object\" || tempArg === null) {\n                                tempStr = String(tempArg);\n                            }\n                            else {\n                                tempStr = inspect(tempArg, {\n                                    ...inspectOptions,\n                                    compact: 3,\n                                    colors: false,\n                                    depth: 0,\n                                });\n                            }\n                            break;\n                        }\n                        case 106:\n                            tempStr = jsonStringifyRecursive(args[++a]);\n                            break;\n                        case 100: {\n                            const tempNum = args[++a];\n                            if (typeof tempNum === \"bigint\") {\n                                tempStr = formatPrimitive(ctx, tempNum);\n                            }\n                            else if (typeof tempNum === \"symbol\") {\n                                tempStr = \"NaN\";\n                            }\n                            else {\n                                tempStr = formatPrimitive(ctx, tempNum);\n                            }\n                            break;\n                        }\n                        case 79:\n                            tempStr = inspect(args[++a], inspectOptions);\n                            break;\n                        case 111:\n                            tempStr = inspect(args[++a], {\n                                ...inspectOptions,\n                                showHidden: true,\n                                showProxy: true,\n                                depth: 4,\n                            });\n                            break;\n                        case 105: {\n                            const tempInteger = args[++a];\n                            if (typeof tempInteger === \"bigint\") {\n                                tempStr = formatPrimitive(ctx, tempInteger);\n                            }\n                            else if (typeof tempInteger === \"symbol\") {\n                                tempStr = \"NaN\";\n                            }\n                            else {\n                                tempStr = formatPrimitive(ctx, parseInt(tempStr));\n                            }\n                            break;\n                        }\n                        case 102: {\n                            const tempFloat = args[++a];\n                            if (typeof tempFloat === \"symbol\") {\n                                tempStr = \"NaN\";\n                            }\n                            else {\n                                tempStr = formatPrimitive(ctx, parseInt(tempFloat));\n                            }\n                            break;\n                        }\n                        case 99:\n                            a += 1;\n                            tempStr = \"\";\n                            break;\n                        case 37:\n                            str += first.slice(lastPos, i);\n                            lastPos = i + 1;\n                            continue;\n                        default:\n                            continue;\n                    }\n                    if (lastPos !== i - 1) {\n                        str += first.slice(lastPos, i - 1);\n                    }\n                    str += tempStr;\n                    lastPos = i + 1;\n                }\n                else if (nextChar === 37) {\n                    str += first.slice(lastPos, i);\n                    lastPos = i + 1;\n                }\n            }\n        }\n        if (lastPos !== 0) {\n            a++;\n            join = \" \";\n            if (lastPos < first.length) {\n                str += first.slice(lastPos);\n            }\n        }\n    }\n    while (a < args.length) {\n        const value = args[a];\n        str += join;\n        str += typeof value !== \"string\" ? inspect(value, inspectOptions) : value;\n        join = \" \";\n        a++;\n    }\n    return str;\n}\n","import { formatTemplate } from \"../../formatTemplate.js\";\nimport { formatWithOptions } from \"./util.inspect.polyfil.js\";\nimport { jsonStringifyRecursive } from \"./helper.jsonStringifyRecursive.js\";\nexport default {\n    getCallerStackFrame,\n    getErrorTrace,\n    getMeta,\n    transportJSON,\n    transportFormatted,\n    isBuffer,\n    isError,\n    prettyFormatLogObj,\n    prettyFormatErrorObj,\n};\nconst meta = {\n    runtime: ![typeof window, typeof document].includes(\"undefined\") ? \"Browser\" : \"Generic\",\n    browser: globalThis?.[\"navigator\"]?.userAgent,\n};\nconst pathRegex = /(?:(?:file|https?|global code|[^@]+)@)?(?:file:)?((?:\\/[^:/]+){2,})(?::(\\d+))?(?::(\\d+))?/;\nexport function getMeta(logLevelId, logLevelName, stackDepthLevel, hideLogPositionForPerformance, name, parentNames) {\n    return Object.assign({}, meta, {\n        name,\n        parentNames,\n        date: new Date(),\n        logLevelId,\n        logLevelName,\n        path: !hideLogPositionForPerformance ? getCallerStackFrame(stackDepthLevel) : undefined,\n    });\n}\nexport function getCallerStackFrame(stackDepthLevel, error = Error()) {\n    return stackLineToStackFrame(error?.stack?.split(\"\\n\")?.filter((line) => !line.includes(\"Error: \"))?.[stackDepthLevel]);\n}\nexport function getErrorTrace(error) {\n    return error?.stack\n        ?.split(\"\\n\")\n        ?.filter((line) => !line.includes(\"Error: \"))\n        ?.reduce((result, line) => {\n        result.push(stackLineToStackFrame(line));\n        return result;\n    }, []);\n}\nfunction stackLineToStackFrame(line) {\n    const href = globalThis?.location?.origin;\n    const pathResult = {\n        fullFilePath: undefined,\n        fileName: undefined,\n        fileNameWithLine: undefined,\n        fileColumn: undefined,\n        fileLine: undefined,\n        filePath: undefined,\n        filePathWithLine: undefined,\n        method: undefined,\n    };\n    if (line != null) {\n        const match = line.match(pathRegex);\n        if (match) {\n            pathResult.filePath = match[1].replace(/\\?.*$/, \"\");\n            pathResult.fullFilePath = `${href}${pathResult.filePath}`;\n            const pathParts = pathResult.filePath.split(\"/\");\n            pathResult.fileName = pathParts[pathParts.length - 1];\n            pathResult.fileLine = match[2];\n            pathResult.fileColumn = match[3];\n            pathResult.filePathWithLine = `${pathResult.filePath}:${pathResult.fileLine}`;\n            pathResult.fileNameWithLine = `${pathResult.fileName}:${pathResult.fileLine}`;\n        }\n    }\n    return pathResult;\n}\nexport function isError(e) {\n    return e instanceof Error;\n}\nexport function prettyFormatLogObj(maskedArgs, settings) {\n    return maskedArgs.reduce((result, arg) => {\n        isError(arg) ? result.errors.push(prettyFormatErrorObj(arg, settings)) : result.args.push(arg);\n        return result;\n    }, { args: [], errors: [] });\n}\nexport function prettyFormatErrorObj(error, settings) {\n    const errorStackStr = getErrorTrace(error).map((stackFrame) => {\n        return formatTemplate(settings, settings.prettyErrorStackTemplate, { ...stackFrame }, true);\n    });\n    const placeholderValuesError = {\n        errorName: ` ${error.name} `,\n        errorMessage: Object.getOwnPropertyNames(error)\n            .reduce((result, key) => {\n            if (key !== \"stack\") {\n                result.push(error[key]);\n            }\n            return result;\n        }, [])\n            .join(\", \"),\n        errorStack: errorStackStr.join(\"\\n\"),\n    };\n    return formatTemplate(settings, settings.prettyErrorTemplate, placeholderValuesError);\n}\nexport function transportFormatted(logMetaMarkup, logArgs, logErrors, settings) {\n    const logErrorsStr = (logErrors.length > 0 && logArgs.length > 0 ? \"\\n\" : \"\") + logErrors.join(\"\\n\");\n    settings.prettyInspectOptions.colors = settings.stylePrettyLogs;\n    console.log(logMetaMarkup + formatWithOptions(settings.prettyInspectOptions, ...logArgs) + logErrorsStr);\n}\nexport function transportJSON(json) {\n    console.log(jsonStringifyRecursive(json));\n}\nexport function isBuffer(arg) {\n    return arg ? false : false;\n}\n","import { formatTemplate } from \"./formatTemplate.js\";\nimport { formatNumberAddZeros } from \"./formatNumberAddZeros.js\";\nimport { urlToObject } from \"./urlToObj.js\";\nimport Runtime from \"./runtime/nodejs/index.js\";\nexport * from \"./interfaces.js\";\nexport { Runtime };\nexport class BaseLogger {\n    constructor(settings, logObj, stackDepthLevel = 4) {\n        this.logObj = logObj;\n        this.stackDepthLevel = stackDepthLevel;\n        this.runtime = Runtime;\n        this.settings = {\n            type: settings?.type ?? \"pretty\",\n            name: settings?.name,\n            parentNames: settings?.parentNames,\n            minLevel: settings?.minLevel ?? 0,\n            argumentsArrayName: settings?.argumentsArrayName,\n            hideLogPositionForProduction: settings?.hideLogPositionForProduction ?? false,\n            prettyLogTemplate: settings?.prettyLogTemplate ??\n                \"{{yyyy}}.{{mm}}.{{dd}} {{hh}}:{{MM}}:{{ss}}:{{ms}}\\t{{logLevelName}}\\t{{filePathWithLine}}{{nameWithDelimiterPrefix}}\\t\",\n            prettyErrorTemplate: settings?.prettyErrorTemplate ?? \"\\n{{errorName}} {{errorMessage}}\\nerror stack:\\n{{errorStack}}\",\n            prettyErrorStackTemplate: settings?.prettyErrorStackTemplate ?? \"  • {{fileName}}\\t{{method}}\\n\\t{{filePathWithLine}}\",\n            prettyErrorParentNamesSeparator: settings?.prettyErrorParentNamesSeparator ?? \":\",\n            prettyErrorLoggerNameDelimiter: settings?.prettyErrorLoggerNameDelimiter ?? \"\\t\",\n            stylePrettyLogs: settings?.stylePrettyLogs ?? true,\n            prettyLogTimeZone: settings?.prettyLogTimeZone ?? \"UTC\",\n            prettyLogStyles: settings?.prettyLogStyles ?? {\n                logLevelName: {\n                    \"*\": [\"bold\", \"black\", \"bgWhiteBright\", \"dim\"],\n                    SILLY: [\"bold\", \"white\"],\n                    TRACE: [\"bold\", \"whiteBright\"],\n                    DEBUG: [\"bold\", \"green\"],\n                    INFO: [\"bold\", \"blue\"],\n                    WARN: [\"bold\", \"yellow\"],\n                    ERROR: [\"bold\", \"red\"],\n                    FATAL: [\"bold\", \"redBright\"],\n                },\n                dateIsoStr: \"white\",\n                filePathWithLine: \"white\",\n                name: [\"white\", \"bold\"],\n                nameWithDelimiterPrefix: [\"white\", \"bold\"],\n                nameWithDelimiterSuffix: [\"white\", \"bold\"],\n                errorName: [\"bold\", \"bgRedBright\", \"whiteBright\"],\n                fileName: [\"yellow\"],\n                fileNameWithLine: \"white\",\n            },\n            prettyInspectOptions: settings?.prettyInspectOptions ?? {\n                colors: true,\n                compact: false,\n                depth: Infinity,\n            },\n            metaProperty: settings?.metaProperty ?? \"_meta\",\n            maskPlaceholder: settings?.maskPlaceholder ?? \"[***]\",\n            maskValuesOfKeys: settings?.maskValuesOfKeys ?? [\"password\"],\n            maskValuesOfKeysCaseInsensitive: settings?.maskValuesOfKeysCaseInsensitive ?? false,\n            maskValuesRegEx: settings?.maskValuesRegEx,\n            prefix: [...(settings?.prefix ?? [])],\n            attachedTransports: [...(settings?.attachedTransports ?? [])],\n            overwrite: {\n                mask: settings?.overwrite?.mask,\n                toLogObj: settings?.overwrite?.toLogObj,\n                addMeta: settings?.overwrite?.addMeta,\n                addPlaceholders: settings?.overwrite?.addPlaceholders,\n                formatMeta: settings?.overwrite?.formatMeta,\n                formatLogObj: settings?.overwrite?.formatLogObj,\n                transportFormatted: settings?.overwrite?.transportFormatted,\n                transportJSON: settings?.overwrite?.transportJSON,\n            },\n        };\n    }\n    log(logLevelId, logLevelName, ...args) {\n        if (logLevelId < this.settings.minLevel) {\n            return;\n        }\n        const logArgs = [...this.settings.prefix, ...args];\n        const maskedArgs = this.settings.overwrite?.mask != null\n            ? this.settings.overwrite?.mask(logArgs)\n            : this.settings.maskValuesOfKeys != null && this.settings.maskValuesOfKeys.length > 0\n                ? this._mask(logArgs)\n                : logArgs;\n        const thisLogObj = this.logObj != null ? this._recursiveCloneAndExecuteFunctions(this.logObj) : undefined;\n        const logObj = this.settings.overwrite?.toLogObj != null ? this.settings.overwrite?.toLogObj(maskedArgs, thisLogObj) : this._toLogObj(maskedArgs, thisLogObj);\n        const logObjWithMeta = this.settings.overwrite?.addMeta != null\n            ? this.settings.overwrite?.addMeta(logObj, logLevelId, logLevelName)\n            : this._addMetaToLogObj(logObj, logLevelId, logLevelName);\n        let logMetaMarkup;\n        let logArgsAndErrorsMarkup = undefined;\n        if (this.settings.overwrite?.formatMeta != null) {\n            logMetaMarkup = this.settings.overwrite?.formatMeta(logObjWithMeta?.[this.settings.metaProperty]);\n        }\n        if (this.settings.overwrite?.formatLogObj != null) {\n            logArgsAndErrorsMarkup = this.settings.overwrite?.formatLogObj(maskedArgs, this.settings);\n        }\n        if (this.settings.type === \"pretty\") {\n            logMetaMarkup = logMetaMarkup ?? this._prettyFormatLogObjMeta(logObjWithMeta?.[this.settings.metaProperty]);\n            logArgsAndErrorsMarkup = logArgsAndErrorsMarkup ?? this.runtime.prettyFormatLogObj(maskedArgs, this.settings);\n        }\n        if (logMetaMarkup != null && logArgsAndErrorsMarkup != null) {\n            this.settings.overwrite?.transportFormatted != null\n                ? this.settings.overwrite?.transportFormatted(logMetaMarkup, logArgsAndErrorsMarkup.args, logArgsAndErrorsMarkup.errors, this.settings)\n                : this.runtime.transportFormatted(logMetaMarkup, logArgsAndErrorsMarkup.args, logArgsAndErrorsMarkup.errors, this.settings);\n        }\n        else {\n            this.settings.overwrite?.transportJSON != null\n                ? this.settings.overwrite?.transportJSON(logObjWithMeta)\n                : this.settings.type !== \"hidden\"\n                    ? this.runtime.transportJSON(logObjWithMeta)\n                    : undefined;\n        }\n        if (this.settings.attachedTransports != null && this.settings.attachedTransports.length > 0) {\n            this.settings.attachedTransports.forEach((transportLogger) => {\n                transportLogger(logObjWithMeta);\n            });\n        }\n        return logObjWithMeta;\n    }\n    attachTransport(transportLogger) {\n        this.settings.attachedTransports.push(transportLogger);\n    }\n    getSubLogger(settings, logObj) {\n        const subLoggerSettings = {\n            ...this.settings,\n            ...settings,\n            parentNames: this.settings?.parentNames != null && this.settings?.name != null\n                ? [...this.settings.parentNames, this.settings.name]\n                : this.settings?.name != null\n                    ? [this.settings.name]\n                    : undefined,\n            prefix: [...this.settings.prefix, ...(settings?.prefix ?? [])],\n        };\n        const subLogger = new this.constructor(subLoggerSettings, logObj ?? this.logObj, this.stackDepthLevel);\n        return subLogger;\n    }\n    _mask(args) {\n        const maskValuesOfKeys = this.settings.maskValuesOfKeysCaseInsensitive !== true ? this.settings.maskValuesOfKeys : this.settings.maskValuesOfKeys.map((key) => key.toLowerCase());\n        return args?.map((arg) => {\n            return this._recursiveCloneAndMaskValuesOfKeys(arg, maskValuesOfKeys);\n        });\n    }\n    _recursiveCloneAndMaskValuesOfKeys(source, keys, seen = []) {\n        if (seen.includes(source)) {\n            return { ...source };\n        }\n        if (typeof source === \"object\" && source !== null) {\n            seen.push(source);\n        }\n        if (this.runtime.isError(source) || this.runtime.isBuffer(source)) {\n            return source;\n        }\n        else if (source instanceof Map) {\n            return new Map(source);\n        }\n        else if (source instanceof Set) {\n            return new Set(source);\n        }\n        else if (Array.isArray(source)) {\n            return source.map((item) => this._recursiveCloneAndMaskValuesOfKeys(item, keys, seen));\n        }\n        else if (source instanceof Date) {\n            return new Date(source.getTime());\n        }\n        else if (source instanceof URL) {\n            return urlToObject(source);\n        }\n        else if (source !== null && typeof source === \"object\") {\n            const baseObject = this.runtime.isError(source) ? this._cloneError(source) : Object.create(Object.getPrototypeOf(source));\n            return Object.getOwnPropertyNames(source).reduce((o, prop) => {\n                o[prop] = keys.includes(this.settings?.maskValuesOfKeysCaseInsensitive !== true ? prop : prop.toLowerCase())\n                    ? this.settings.maskPlaceholder\n                    : this._recursiveCloneAndMaskValuesOfKeys(source[prop], keys, seen);\n                return o;\n            }, baseObject);\n        }\n        else {\n            if (typeof source === \"string\") {\n                let modifiedSource = source;\n                for (const regEx of this.settings?.maskValuesRegEx || []) {\n                    modifiedSource = modifiedSource.replace(regEx, this.settings?.maskPlaceholder || \"\");\n                }\n                return modifiedSource;\n            }\n            return source;\n        }\n    }\n    _recursiveCloneAndExecuteFunctions(source, seen = []) {\n        if (this.isObjectOrArray(source) && seen.includes(source)) {\n            return this.shallowCopy(source);\n        }\n        if (this.isObjectOrArray(source)) {\n            seen.push(source);\n        }\n        if (Array.isArray(source)) {\n            return source.map((item) => this._recursiveCloneAndExecuteFunctions(item, seen));\n        }\n        else if (source instanceof Date) {\n            return new Date(source.getTime());\n        }\n        else if (this.isObject(source)) {\n            return Object.getOwnPropertyNames(source).reduce((o, prop) => {\n                const descriptor = Object.getOwnPropertyDescriptor(source, prop);\n                if (descriptor) {\n                    Object.defineProperty(o, prop, descriptor);\n                    const value = source[prop];\n                    o[prop] = typeof value === \"function\" ? value() : this._recursiveCloneAndExecuteFunctions(value, seen);\n                }\n                return o;\n            }, Object.create(Object.getPrototypeOf(source)));\n        }\n        else {\n            return source;\n        }\n    }\n    isObjectOrArray(value) {\n        return typeof value === \"object\" && value !== null;\n    }\n    isObject(value) {\n        return typeof value === \"object\" && !Array.isArray(value) && value !== null;\n    }\n    shallowCopy(source) {\n        if (Array.isArray(source)) {\n            return [...source];\n        }\n        else {\n            return { ...source };\n        }\n    }\n    _toLogObj(args, clonedLogObj = {}) {\n        args = args?.map((arg) => (this.runtime.isError(arg) ? this._toErrorObject(arg) : arg));\n        if (this.settings.argumentsArrayName == null) {\n            if (args.length === 1 && !Array.isArray(args[0]) && this.runtime.isBuffer(args[0]) !== true && !(args[0] instanceof Date)) {\n                clonedLogObj = typeof args[0] === \"object\" && args[0] != null ? { ...args[0], ...clonedLogObj } : { 0: args[0], ...clonedLogObj };\n            }\n            else {\n                clonedLogObj = { ...clonedLogObj, ...args };\n            }\n        }\n        else {\n            clonedLogObj = {\n                ...clonedLogObj,\n                [this.settings.argumentsArrayName]: args,\n            };\n        }\n        return clonedLogObj;\n    }\n    _cloneError(error) {\n        const cloned = new error.constructor();\n        Object.getOwnPropertyNames(error).forEach((key) => {\n            cloned[key] = error[key];\n        });\n        return cloned;\n    }\n    _toErrorObject(error) {\n        return {\n            nativeError: error,\n            name: error.name ?? \"Error\",\n            message: error.message,\n            stack: this.runtime.getErrorTrace(error),\n        };\n    }\n    _addMetaToLogObj(logObj, logLevelId, logLevelName) {\n        return {\n            ...logObj,\n            [this.settings.metaProperty]: this.runtime.getMeta(logLevelId, logLevelName, this.stackDepthLevel, this.settings.hideLogPositionForProduction, this.settings.name, this.settings.parentNames),\n        };\n    }\n    _prettyFormatLogObjMeta(logObjMeta) {\n        if (logObjMeta == null) {\n            return \"\";\n        }\n        let template = this.settings.prettyLogTemplate;\n        const placeholderValues = {};\n        if (template.includes(\"{{yyyy}}.{{mm}}.{{dd}} {{hh}}:{{MM}}:{{ss}}:{{ms}}\")) {\n            template = template.replace(\"{{yyyy}}.{{mm}}.{{dd}} {{hh}}:{{MM}}:{{ss}}:{{ms}}\", \"{{dateIsoStr}}\");\n        }\n        else {\n            if (this.settings.prettyLogTimeZone === \"UTC\") {\n                placeholderValues[\"yyyy\"] = logObjMeta?.date?.getUTCFullYear() ?? \"----\";\n                placeholderValues[\"mm\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCMonth(), 2, 1);\n                placeholderValues[\"dd\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCDate(), 2);\n                placeholderValues[\"hh\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCHours(), 2);\n                placeholderValues[\"MM\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCMinutes(), 2);\n                placeholderValues[\"ss\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCSeconds(), 2);\n                placeholderValues[\"ms\"] = formatNumberAddZeros(logObjMeta?.date?.getUTCMilliseconds(), 3);\n            }\n            else {\n                placeholderValues[\"yyyy\"] = logObjMeta?.date?.getFullYear() ?? \"----\";\n                placeholderValues[\"mm\"] = formatNumberAddZeros(logObjMeta?.date?.getMonth(), 2, 1);\n                placeholderValues[\"dd\"] = formatNumberAddZeros(logObjMeta?.date?.getDate(), 2);\n                placeholderValues[\"hh\"] = formatNumberAddZeros(logObjMeta?.date?.getHours(), 2);\n                placeholderValues[\"MM\"] = formatNumberAddZeros(logObjMeta?.date?.getMinutes(), 2);\n                placeholderValues[\"ss\"] = formatNumberAddZeros(logObjMeta?.date?.getSeconds(), 2);\n                placeholderValues[\"ms\"] = formatNumberAddZeros(logObjMeta?.date?.getMilliseconds(), 3);\n            }\n        }\n        const dateInSettingsTimeZone = this.settings.prettyLogTimeZone === \"UTC\" ? logObjMeta?.date : new Date(logObjMeta?.date?.getTime() - logObjMeta?.date?.getTimezoneOffset() * 60000);\n        placeholderValues[\"rawIsoStr\"] = dateInSettingsTimeZone?.toISOString();\n        placeholderValues[\"dateIsoStr\"] = dateInSettingsTimeZone?.toISOString().replace(\"T\", \" \").replace(\"Z\", \"\");\n        placeholderValues[\"logLevelName\"] = logObjMeta?.logLevelName;\n        placeholderValues[\"fileNameWithLine\"] = logObjMeta?.path?.fileNameWithLine ?? \"\";\n        placeholderValues[\"filePathWithLine\"] = logObjMeta?.path?.filePathWithLine ?? \"\";\n        placeholderValues[\"fullFilePath\"] = logObjMeta?.path?.fullFilePath ?? \"\";\n        let parentNamesString = this.settings.parentNames?.join(this.settings.prettyErrorParentNamesSeparator);\n        parentNamesString = parentNamesString != null && logObjMeta?.name != null ? parentNamesString + this.settings.prettyErrorParentNamesSeparator : undefined;\n        placeholderValues[\"name\"] = logObjMeta?.name != null || parentNamesString != null ? (parentNamesString ?? \"\") + logObjMeta?.name ?? \"\" : \"\";\n        placeholderValues[\"nameWithDelimiterPrefix\"] =\n            placeholderValues[\"name\"].length > 0 ? this.settings.prettyErrorLoggerNameDelimiter + placeholderValues[\"name\"] : \"\";\n        placeholderValues[\"nameWithDelimiterSuffix\"] =\n            placeholderValues[\"name\"].length > 0 ? placeholderValues[\"name\"] + this.settings.prettyErrorLoggerNameDelimiter : \"\";\n        if (this.settings.overwrite?.addPlaceholders != null) {\n            this.settings.overwrite?.addPlaceholders(logObjMeta, placeholderValues);\n        }\n        return formatTemplate(this.settings, template, placeholderValues);\n    }\n}\n","export function urlToObject(url) {\n    return {\n        href: url.href,\n        protocol: url.protocol,\n        username: url.username,\n        password: url.password,\n        host: url.host,\n        hostname: url.hostname,\n        port: url.port,\n        pathname: url.pathname,\n        search: url.search,\n        searchParams: [...url.searchParams].map(([key, value]) => ({ key, value })),\n        hash: url.hash,\n        origin: url.origin,\n    };\n}\n","import { BaseLogger } from \"./BaseLogger.js\";\nexport * from \"./interfaces.js\";\nexport * from \"./BaseLogger.js\";\nexport class Logger extends BaseLogger {\n    constructor(settings, logObj) {\n        const isBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\n        const isBrowserBlinkEngine = isBrowser ? window.chrome !== undefined && window.CSS !== undefined && window.CSS.supports(\"color\", \"green\") : false;\n        const isSafari = isBrowser ? /^((?!chrome|android).)*safari/i.test(navigator.userAgent) : false;\n        settings = settings || {};\n        settings.stylePrettyLogs = settings.stylePrettyLogs && isBrowser && !isBrowserBlinkEngine ? false : settings.stylePrettyLogs;\n        super(settings, logObj, isSafari ? 4 : 5);\n    }\n    log(logLevelId, logLevelName, ...args) {\n        return super.log(logLevelId, logLevelName, ...args);\n    }\n    silly(...args) {\n        return super.log(0, \"SILLY\", ...args);\n    }\n    trace(...args) {\n        return super.log(1, \"TRACE\", ...args);\n    }\n    debug(...args) {\n        return super.log(2, \"DEBUG\", ...args);\n    }\n    info(...args) {\n        return super.log(3, \"INFO\", ...args);\n    }\n    warn(...args) {\n        return super.log(4, \"WARN\", ...args);\n    }\n    error(...args) {\n        return super.log(5, \"ERROR\", ...args);\n    }\n    fatal(...args) {\n        return super.log(6, \"FATAL\", ...args);\n    }\n    getSubLogger(settings, logObj) {\n        return super.getSubLogger(settings, logObj);\n    }\n}\n","import { sqlite3Worker1Promiser } from '@sqlite.org/sqlite-wasm';\nimport { SYNQLITE_BATCH_SIZE, SYNQLITE_PREFIX } from './constants.js';\nimport { ApplyChangeParams, Change, LogLevel, SynQLiteOptions, SyncableTable } from './types.js';\nimport { Logger, ILogObj, ISettingsParam } from 'tslog';\n\nconst log = new Logger({ name: 'synqlite-web-init', minLevel: LogLevel.Info });\nconst strtimeAsISO8601 = `STRFTIME('%Y-%m-%dT%H:%M:%f','NOW')`;\n\nexport class SynQLite {\n  private _db: any;\n  private _dbName: string;\n  private _synqDbId?: string;\n  private _synqPrefix?: string;\n  private _synqTables?: SyncableTable[];\n  private _synqBatchSize: number = 20;\n  private _wal = false;\n  private log: Logger<ILogObj>;\n\n  utils = {\n    strtimeAsISO8601,\n    nowAsISO8601: strtimeAsISO8601,\n    utcNowAsISO8601: (): string => {\n      return new Date((new Date()).toUTCString()).toISOString();\n    }\n  }\n\n  constructor(initData: SynQLiteOptions) {\n    this._dbName = initData.filename || '';\n    this._db = initData.sqlite3 || undefined;\n    this._synqPrefix = initData.prefix;\n    this._synqTables = initData.tables;\n    this._synqBatchSize = initData.batchSize || this._synqBatchSize;\n    this._wal = initData.wal ?? false;\n    this.log = new Logger({\n      name: 'synqlite-web',\n      minLevel: LogLevel.Info,\n      type: 'json',\n      maskValuesOfKeys: ['password', 'encryption_key'],\n      hideLogPositionForProduction: true,\n      ...(initData.logOptions || {})\n    });\n  }\n\n  async init() {\n    if (this.db) return Promise.resolve(this.db); // @TODO: test DB connection\n    if (!this.dbName) return Promise.reject('No DB filename or connection provided');\n\n    return new Promise(async (resolve, reject) => {\n      try {\n        this.log.debug('get promiser...')\n        const promiser: any = await new Promise((res) => {\n          const _promiser = sqlite3Worker1Promiser({\n            onready: () => {\n              res(_promiser);\n            },\n            onerror: (err: any) => {\n              this.log.error('@ERROR', err);\n            },\n            debug: (...args: any) => {\n              this.log.debug(...args);\n            },\n            onunhandled: (event: any) => {\n              this.log.error('@UNHANDLED', event);\n            }\n          });\n        });\n        \n        this.log.debug('get config...')\n        await promiser('config-get', {});\n\n        let res;\n  \n        try {\n          this.log.debug(`open ${this.dbName}...`);\n          res = await promiser('open', {\n            filename: `file:${this.dbName}?vfs=opfs`,\n          });\n  \n          this.log.info(\n            'OPFS is available, created persisted database at',\n            res.result.filename.replace(/^file:(.*?)\\?vfs=opfs$/, '$1'),\n          );\n        }\n        catch(err) {\n          // Probably no vfs\n          res = await promiser('open', {\n            filename: `file:${this.dbName}`\n          });\n          this.log.info(\n            'OPFS not available, created in-memory database at',\n            res.result.filename, '$1'\n          );\n        }\n  \n        if (!res) return reject('Unable to start DB');\n\n        const { dbId } = res;\n        this._synqDbId = dbId;\n      \n        const conf = await promiser('config-get', {});\n        this.log.info('Running SQLite3 version', conf.result.version.libVersion);\n        \n        this._db = promiser;\n        resolve(this);\n      }\n      catch(err: any) {\n        if (!(err instanceof Error)) {\n          err = new Error(err.result.message);\n        }\n        this.log.error(err.name, err.message);\n        this.log.error(err)\n        reject('DB setup failed.');\n      }\n    });\n  };\n\n  get db() {\n    return this._db;\n  }\n\n  get dbName() {\n    return this._dbName;\n  }\n\n  get synqDbId() {\n    return this._synqDbId;\n  }\n\n  get synqPrefix() {\n    return this._synqPrefix;\n  }\n\n  get synqTables() {\n    return this._synqTables;\n  }\n\n  get synqBatchSize() {\n    return this._synqBatchSize;\n  }\n\n  get wal() {\n    return this._wal;\n  }\n\n  async runQuery<T>({sql, values}: {sql: string, values?: any[]}): Promise<T> {\n    const quid = Math.ceil(Math.random() * 1000000);\n    this.log.debug('@runQuery', quid, sql, values, '/');\n    const dbId = this.synqDbId;\n    return new Promise((resolve, reject) => {\n      const results: any[] = [];\n      try {\n        this.db('exec', {\n          dbId,\n          sql, // I think we can make this sexier, in Minmail\n          bind: values,\n          callback: (result: any) => {\n            if (!result.row) {\n              this.log.debug('@runQuery RESOLVED', quid);\n              return resolve(results as any);\n            }\n            const o: any = {};\n            result.row.forEach((col: string, i: number) => o[result.columnNames[i]] = result.row[i]);\n            results.push(o);\n          }\n        });\n      }\n      catch(err) {\n        this.log.error(quid, err);\n        reject(err);\n      }\n    });\n  }\n\n  async getLastSync() {\n    const res = await this.runQuery<any[]>({\n      sql:`\n        SELECT * FROM ${this.synqPrefix}_meta\n        WHERE meta_name = 'last_local_sync'`\n    });\n    return res[0];\n  }\n  \n  async getChangesSinceLastSync({db, lastSync}: {db: any, lastSync?: string}) {\n    let lastLocalSync: string = lastSync || (await this.getLastSync()).last_local_sync;\n    this.log.debug('@getChangesSinceLastSync', lastLocalSync);\n  \n    let where: string = '';\n  \n    if (lastLocalSync) {\n      where = 'WHERE modified_at > ?'\n    }\n    const sql = `\n    SELECT * FROM ${this.synqPrefix}_changes\n      ${where}\n      ORDER BY modified_at ASC\n    `;\n    const values = lastLocalSync ? [lastLocalSync] : [];\n    this.log.debug(sql, values);\n  \n    return this.runQuery<Change[]>({sql, values});\n  };\n\n  private enableTriggers() {\n    return this.runQuery({\n      sql: `\n      INSERT OR REPLACE INTO ${this.synqPrefix}_meta (meta_name, meta_value)\n      VALUES ('triggers_on', '1')\n      RETURNING *;\n      `\n    });\n  }\n\n  private disableTriggers() {\n    return this.runQuery({\n      sql: `\n      INSERT OR REPLACE INTO ${this.synqPrefix}_meta (meta_name, meta_value)\n      VALUES ('triggers_on', '0')\n      RETURNING *;\n      `\n    });\n  }\n\n  private async beginTransaction(): Promise<string> {\n    const savepoint = `SP${Date.now()}`;\n    const sql = `SAVEPOINT ${savepoint};`;\n    await this.runQuery({sql});\n    return savepoint\n  }\n\n  private async commitTransaction({savepoint}: {savepoint: string}) {\n    const sql = `RELEASE SAVEPOINT ${savepoint};`;\n    return this.runQuery({sql});\n  }\n\n  private async rollbackTransaction({savepoint}: {savepoint: string}) {\n    const sql = `ROLLBACK TRANSACTION TO SAVEPOINT ${savepoint};`;\n    return this.runQuery({sql}); \n  }\n\n  private async applyChange({\n    change,\n    savepoint\n  }: ApplyChangeParams) {\n    try {\n      const table = this.synqTables?.find(t => t.name === change.table_name);\n      let recordData: any;\n      if (change.data) {\n        try {\n          recordData = JSON.parse(change.data);\n        }\n        catch(err) {\n          this.log.debug(change);\n          throw new Error('Invalid data for insert or update');\n        }\n      }\n        \n      if (!table) throw new Error(`Unable to find table ${change.table_name}`);\n      switch(change.operation) {\n        case 'UPDATE':\n          const columnsToUpdate = Object.keys(recordData).map(key => `${key} = :${key}`).join(', ');\n          const updateValues = { ...recordData, [table.id]: change.row_id};\n          const updateSql = `UPDATE ${change.table_name} SET ${columnsToUpdate} WHERE ${table.id} = :${table.id}`;\n          // this.log.debug('@performing update... sql:', updateSql, updateValues);\n          await this.runQuery({sql: updateSql, values: updateValues});\n          break;\n        case 'INSERT':\n          const columnsToInsert = Object.keys(recordData).join(',');\n          const insertPlaceholders = Object.keys(recordData).map(k => `:${k}`).join(',')\n          const insertSql = `INSERT OR REPLACE INTO ${change.table_name} (${columnsToInsert}) VALUES (${insertPlaceholders});`;\n          // this.log.debug('@performing insert... sql:', insertSql, recordData);\n          await this.runQuery({sql: insertSql, values: recordData});\n          break;\n        case 'DELETE':\n          const sql = `DELETE FROM ${change.table_name} WHERE ${table.id} = ?`;\n          await this.runQuery({sql, values: [change.row_id]});\n          break;\n      }\n\n      // @TODO: do we need last_sync_local per table?\n      this.runQuery({\n        sql: `INSERT OR REPLACE INTO ${this.synqPrefix}_meta (meta_name, meta_value) VALUES('last_local_sync', STRFTIME('%Y-%m-%d %H:%M:%f','NOW'))`,\n      });\n    }\n    catch (error) {\n      await this.rollbackTransaction({savepoint})\n      this.log.error(`Error applying change: ${error}`);\n      throw error; // Throw the error to trigger rollback\n    }\n  }\n  \n  async applyChangesToLocalDB(changes: Change[]) {\n    await this.disableTriggers();\n    // Split changes into batches\n    for (let i = 0; i < changes.length; i += this.synqBatchSize) {\n      const batch = changes.slice(i, i + this.synqBatchSize);\n  \n      // Create savepoint and apply each batch within a transaction\n      const savepoint = await this.beginTransaction();\n      try {\n        for (const change of batch) {\n          await this.applyChange({change, savepoint})\n        }\n\n        // Commit the changes for this batch\n        await this.commitTransaction({savepoint});\n\n      } catch (error) {\n        await this.rollbackTransaction({savepoint})\n        this.log.error(`Transaction failed, changes rolled back: ${error}`);\n        // Handle transaction failure (e.g., log, retry logic, notification)\n      }\n    }\n    await this.enableTriggers();\n    this.log.debug(`Applied ${changes.length} change(s)`)\n  };\n\n  async setupTriggersForTable({ table }: { table: SyncableTable }) {\n    this.log.debug('Setting up triggers for', table.name);\n\n    // Ensure triggers are up to date\n    await this.runQuery({sql: `DROP TRIGGER IF EXISTS ${this.synqPrefix}_after_insert_${table.name}`});\n    await this.runQuery({sql: `DROP TRIGGER IF EXISTS ${this.synqPrefix}_after_update_${table.name}`});\n    await this.runQuery({sql: `DROP TRIGGER IF EXISTS ${this.synqPrefix}_after_delete_${table.name}`});\n\n    const jsonObject = (await this.runQuery<any>({\n      sql:`\n      SELECT 'json_object(' || GROUP_CONCAT('''' || name || ''', NEW.' || name, ',') || ')' AS jo\n      FROM pragma_table_info('${table.name}');`\n    }))[0];\n    this.log.debug('@jsonObject', JSON.stringify(jsonObject, null, 2));\n\n    const sql = `\n      CREATE TRIGGER IF NOT EXISTS ${this.synqPrefix}_after_insert_${table.name}\n      AFTER INSERT ON ${table.name}\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM synqlite_meta WHERE meta_name = 'triggers_on')='1'\n      BEGIN\n        INSERT INTO ${this.synqPrefix}_changes (table_name, row_id, operation, data)\n        VALUES ('${table.name}', NEW.${table.id}, 'INSERT', ${jsonObject.jo});\n      END;`\n    await this.runQuery({sql});\n\n    await this.runQuery({\n      sql:`\n      CREATE TRIGGER IF NOT EXISTS ${this.synqPrefix}_after_update_${table.name}\n      AFTER UPDATE ON ${table.name}\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM synqlite_meta WHERE meta_name = 'triggers_on')='1'\n      BEGIN\n        INSERT INTO ${this.synqPrefix}_changes (table_name, row_id, operation, data)\n        VALUES ('${table.name}', NEW.${table.id}, 'UPDATE', ${jsonObject.jo});\n      END;`\n    });\n\n    await this.runQuery({\n      sql:`\n      CREATE TRIGGER IF NOT EXISTS ${this.synqPrefix}_after_delete_${table.name}\n      AFTER DELETE ON ${table.name}\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM synqlite_meta WHERE meta_name = 'triggers_on')='1'\n      BEGIN\n        INSERT INTO ${this.synqPrefix}_changes (table_name, row_id, operation) VALUES ('${table.name}', OLD.${table.id}, 'DELETE');\n      END;`\n    });\n\n    await this.enableTriggers();\n    this.log.debug(`@@@\\nTriggers ready\\n@@@`)\n  }\n}\n\nexport const setupDatabase = async ({\n  filename,\n  sqlite3,\n  prefix = SYNQLITE_PREFIX,\n  tables,\n  batchSize = SYNQLITE_BATCH_SIZE,\n  wal = false,\n  preInit = [],\n  postInit = [],\n  logOptions\n}: SynQLiteOptions) => {\n  /*\n  @TODO:\n   - check if DB path exists (throw if not)\n   - check if table names have been provided (throw if not)\n   - check if table names exist (throw if not)\n  */\n  const db = new SynQLite({\n    filename,\n    sqlite3,\n    prefix,\n    tables,\n    batchSize,\n    wal,\n    logOptions\n  });\n  log.debug('@SynQLite db', db)\n  \n  // Initialise the DB\n  try {\n    await db.init();\n  }\n  catch(err) {\n    log.error(err);\n    throw err;\n  }\n\n  prefix = prefix?.trim().replace(/[^a-z0-9]+$/gi, '');\n  log.debug({prefix, batchSize})\n\n  // Set WAL mode if necessary\n  if (wal === true) {\n    await db.runQuery({\n      sql: `PRAGMA journal_mode=WAL;`\n    });\n  }\n\n  if (preInit?.length > 0) {\n    for (const preInitQuery of preInit) {\n      log.debug(`@@@\\npreInit\\n${preInitQuery}\\n@@@`)\n      await db.runQuery({\n        sql: preInitQuery\n      });\n    }\n  }\n  \n  // Create a change-tracking table\n  await db.runQuery({\n    sql:`\n    CREATE TABLE IF NOT EXISTS ${prefix}_changes (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      table_name TEXT NOT NULL,\n      row_id TEXT NOT NULL,\n      data BLOB,\n      operation TEXT NOT NULL, -- 'INSERT', 'UPDATE', 'DELETE'\n      modified_at TIMESTAMP DATETIME DEFAULT(STRFTIME('%Y-%m-%d %H:%M:%f','NOW'))\n    );`\n  });\n    \n  // Create the index\n  db.runQuery({\n    sql: `CREATE INDEX IF NOT EXISTS ${prefix}_change_modified_idx ON ${prefix}_changes(modified_at)`\n  });\n\n  db.runQuery({\n    sql:`\n    CREATE TABLE IF NOT EXISTS ${prefix}_meta (\n      meta_name TEXT NOT NULL PRIMARY KEY,\n      meta_value TEXT NOT NULL\n    );`\n  });\n  db.runQuery({\n    sql: `CREATE INDEX IF NOT EXISTS ${prefix}_meta_name_idx ON ${prefix}_meta(meta_name)`\n  });\n\n  try {\n    for (const table of tables) {\n      await db.setupTriggersForTable({ table });\n    }\n\n    if (postInit?.length > 0) {\n      for (const postInitQuery of postInit) {\n        log.debug(`@@@\\npostInit\\n${postInitQuery}\\n@@@`)\n        await db.runQuery({\n          sql: postInitQuery\n        });\n      }\n    }\n  }\n  catch(err) {\n    log.error('Failed to setup triggers', err);\n    return null\n  }\n\n  return db;\n};\n\nexport default setupDatabase;"],"names":["_scriptDir","sqlite3InitModule","url","config","readyPromiseResolve","readyPromiseReject","Module","Promise","resolve","reject","sqlite3InitModuleState","globalThis","Object","assign","create","debugModule","location","xNameOfInstantiateWasm","callee","imports","onSuccess","env","foo","uri","locateFile","scriptDirectory","wfetch","fetch","credentials","WebAssembly","instantiateStreaming","async","then","arg","instance","module","response","arrayBuffer","bytes","instantiate","moduleOverrides","thisProgram","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","process","versions","read_","readAsync","readBinary","self","href","document","currentScript","src","indexOf","substr","replace","lastIndexOf","xhr","XMLHttpRequest","open","send","responseText","responseType","Uint8Array","onload","onerror","status","wasmBinary","wasmMemory","out","console","log","bind","err","warn","abort","HEAP8","HEAPU8","HEAP16","HEAP32","HEAPU32","ABORT","UTF8Decoder","TextDecoder","undefined","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","buffer","decode","subarray","str","u0","u1","u2","String","fromCharCode","ch","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","i","length","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","c","updateMemoryViews","b","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","INITIAL_MEMORY","Memory","initial","maximum","byteLength","wasmBinaryFile","path","tempDouble","tempI64","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","what","e","RuntimeError","isDataURI","filename","startsWith","getBinary","file","callRuntimeCallbacks","callbacks","shift","URL","PATH","isAbs","charAt","splitPath","exec","slice","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","trailingSlash","split","filter","p","join","dirname","result","root","dir","basename","lastSlash","paths","Array","prototype","call","arguments","join2","l","r","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","TTY","ttys","init","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","fsync","read","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","prompt","readline","val","default_tty1_ops","mmapAlloc","size","alignment","ceil","alignMemory","ptr","_emscripten_builtin_memalign","address","fill","zeroMemory","MEMFS","ops_table","mount","createNode","parent","name","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","set","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","hasOwnProperty","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","lookupPath","opts","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagModes","w","a","modeStringToFlags","Error","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","this","shared","defineProperties","object","get","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","apply","syncfs","populate","completed","doCallback","done","errored","forEach","type","pseudo","mountRoot","unmount","keys","next","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","error","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","ret","buf","writeFile","data","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","message","constructor","code","stack","staticInit","quit","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","writeChunks","fn","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","byteArray","finish","Browser","handledByPreloadPlugin","noRunDep","dep","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","func","abs","floor","getTime","doMsync","addr","varargs","getStr","UTF8ToString","bigintToI53Checked","num","NaN","readI53FromI64","_emscripten_get_now","__MONTH_DAYS_LEAP_CUMULATIVE","__MONTH_DAYS_REGULAR_CUMULATIVE","allocateUTF8","_malloc","emscripten_realloc_buffer","grow","performance","ENV","getEnvStrings","strings","USER","LOGNAME","PWD","HOME","LANG","navigator","languages","_","x","asmLibraryArg","__syscall_chmod","__syscall_faccessat","amode","__syscall_fchmod","__syscall_fchown32","owner","group","__syscall_fcntl64","___errno_location","__syscall_fstat64","__syscall_ftruncate64","isNaN","__syscall_getcwd","cwdLengthInBytes","__syscall_ioctl","op","argp","__syscall_lstat64","__syscall_mkdirat","__syscall_newfstatat","nofollow","__syscall_openat","__syscall_readlinkat","bufsize","endChar","__syscall_rmdir","__syscall_stat64","__syscall_unlinkat","__syscall_utimensat","times","seconds","nanoseconds","_emscripten_get_now_is_monotonic","_localtime_js","time","tmPtr","date","getSeconds","getMinutes","getHours","getDate","getMonth","getFullYear","getDay","yday","year","__yday_from_date","getTimezoneOffset","summerOffset","winterOffset","dst","_mmap_js","off","res","_munmap_js","_tzset_js","timezone","daylight","tzname","currentYear","winter","summer","stdTimezoneOffset","extractZone","match","toTimeString","winterName","summerName","winterNamePtr","summerNamePtr","emscripten_date_now","emscripten_get_now","emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","environ_get","__environ","environ_buf","bufSize","string","writeAsciiToMemory","environ_sizes_get","penviron_count","penviron_buf_size","fd_close","fd_fdstat_get","pbuf","fd_read","iov","iovcnt","pnum","curr","doReadv","fd_seek","newOffset","fd_sync","fd_write","doWritev","memory","info","wasi_snapshot_preview1","receiveInstance","exports","receiveInstantiationResult","instantiateArrayBuffer","receiver","catch","binary","reason","createWasm","calledRun","run","args","doRun","cb","postRun","preRun","setTimeout","runCaller","sqlite3ApiBootstrap","apiConfig","sqlite3ApiConfig","defaultConfig","sqlite3","bigIntEnabled","HEAPU64","debug","wasmfsOpfsDir","useStdAlloc","allocExportName","deallocExportName","reallocExportName","k","capi","wasm","__rcStr","rc","sqlite3_js_rc_str","SQLite3Error","n","super","rcStr","resultCode","SQLITE_ERROR","toss","toss3","test","isInt32","__SAB","SharedArrayBuffer","isSharedTypedArray","aTypedArray","typedArrayPart","begin","isBindableTypedArray","v","isSQLableTypedArray","affirmBindableTypedArray","utf8Decoder","typedArrayToString","typedArray","flexibleString","isArray","isPtr","cstrToJs","WasmAllocError","SQLITE_NOMEM","sqlite3_bind_blob","sqlite3_bind_text","sqlite3_create_function_v2","pDb","funcName","nArg","eTextRep","pApp","xFunc","xStep","xFinal","xDestroy","sqlite3_create_function","sqlite3_create_window_function","xValue","xInverse","sqlite3_prepare_v3","dbPtr","sql","sqlByteLen","prepFlags","stmtPtrPtr","strPtrPtr","sqlite3_prepare_v2","sqlite3_exec","pVoid","pErrMsg","sqlite3_randomness","util","bigIntFits32","bigIntFits64","f","_max","BigInt","_min","bigIntFitsDouble","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","isTypedArray","BYTES_PER_ELEMENT","isUIThread","affirmDbHeader","affirmIsDb","ptrSizeof","wasmPtrSizeof","ptrIR","wasmPtrIR","alloc","realloc","dealloc","allocFromTypedArray","srcTypedArray","pRet","heapForSize","keyAlloc","keyDealloc","keyRealloc","Function","impl","m2","__wasmfsOpfsDir","compileOptionUsed","optName","_result","_opt","_rx","_rxInt","opt","rv","ov","sqlite3_compileoption_get","sqlite3_compileoption_used","pstack","restore","sqlite3_wasm_pstack_restore","sizeofIR","sqlite3_wasm_pstack_alloc","allocChunks","sz","mem","allocPtr","safePtrSize","stackPos","pointer","configurable","iterable","writeable","sqlite3_wasm_pstack_ptr","quota","sqlite3_wasm_pstack_quota","remaining","sqlite3_wasm_pstack_remaining","ta","heap8u","nAlloc","j","sqlite3_wasmfs_opfs_dir","pdir","FileSystemHandle","FileSystemDirectoryHandle","FileSystemFileHandle","xCallWrapped","sqlite3_wasmfs_filename_is_persistent","sqlite3_js_db_uses_vfs","vfsName","dbName","pK","sqlite3_vfs_find","sqlite3_js_db_vfs","sqlite3_js_vfs_list","pVfs","oVfs","sqlite3_vfs","$zName","$pNext","dispose","sqlite3_js_db_export","schema","xWrap","testConvertArg","scope","scopedAllocPush","pOut","pSize","scopedAlloc","ppOut","zSchema","scopedAllocCString","sqlite3_wasm_db_serialize","peekPtr","nOut","peek","sqlite3_free","scopedAllocPop","dbPointer","sqlite3_wasm_db_vfs","sqlite3_js_aggregate_context","pCtx","sqlite3_aggregate_context","sqlite3_js_posix_create_file","dataLen","pData","sqlite3_wasm_posix_create_file","sqlite3_js_vfs_create_file","vfs","sqlite3_wasm_vfs_create_file","sqlite3_js_sql_to_string","__kvvfsInfo","which","prefix","stores","sessionStorage","localStorage","sqlite3_js_kvvfs_clear","kvinfo","s","toRm","kk","removeItem","sqlite3_js_kvvfs_size","getItem","sqlite3_db_config","pii","ip","SQLITE_DBCONFIG_ENABLE_FKEY","SQLITE_DBCONFIG_ENABLE_TRIGGER","SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION","SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","SQLITE_DBCONFIG_ENABLE_QPSG","SQLITE_DBCONFIG_TRIGGER_EQP","SQLITE_DBCONFIG_RESET_DATABASE","SQLITE_DBCONFIG_DEFENSIVE","SQLITE_DBCONFIG_WRITABLE_SCHEMA","SQLITE_DBCONFIG_LEGACY_ALTER_TABLE","SQLITE_DBCONFIG_DQS_DML","SQLITE_DBCONFIG_DQS_DDL","SQLITE_DBCONFIG_ENABLE_VIEW","SQLITE_DBCONFIG_LEGACY_FILE_FORMAT","SQLITE_DBCONFIG_TRUSTED_SCHEMA","SQLITE_DBCONFIG_STMT_SCANSTATUS","SQLITE_DBCONFIG_REVERSE_SCANORDER","SQLITE_DBCONFIG_LOOKASIDE","SQLITE_DBCONFIG_MAINDBNAME","SQLITE_MISUSE","sqlite3_value_to_js","pVal","throwIfCannotConvert","valType","sqlite3_value_type","SQLITE_INTEGER","sqlite3_value_int64","sqlite3_value_double","SQLITE_FLOAT","SQLITE_TEXT","sqlite3_value_text","SQLITE_BLOB","sqlite3_value_bytes","pBlob","sqlite3_value_blob","SQLITE_NULL","SQLITE_MISMATCH","sqlite3_values_to_js","argc","pArgv","tgt","sqlite3_result_error_js","sqlite3_result_error_nomem","sqlite3_result_error","sqlite3_result_js","sqlite3_result_int","sqlite3_result_double","sqlite3_result_int64","toString","isInteger","allocCString","sqlite3_result_text","SQLITE_WASM_DEALLOC","sqlite3_result_null","sqlite3_result_blob","sqlite3_column_js","pStmt","iCol","sqlite3_column_value","__newOldValue","pObj","pokePtr","pv","sqlite3_preupdate_new_js","sqlite3_preupdate_old_js","sqlite3changeset_new_js","pChangesetIter","sqlite3changeset_old_js","version","client","asyncPostInit","ff","isReady","lia","initializersAsync","postInit","__isUnderTest","StructBinder","catcher","map","scriptInfo","initializers","WhWasmUtilInstaller","target","defineProperty","enumerable","pointerIR","cache","heapSize","freeFuncIndexes","utf8Encoder","TextEncoder","endsWith","heapWrappers","HEAP8U","HEAP16U","HEAP32U","HEAP64","HEAP64U","HEAP32F","HEAP64F","heap8","heap16","heap16u","heap32","heap32u","unsigned","functionTable","__indirect_function_table","functionEntry","fptr","ft","jsFuncToWasm","sig","sigTypes","P","typeCodes","f64","f32","i64","i32","uleb128Encode","method","rxJSig","sigParams","letterType","pushSigType","dest","letter","wasmCode","Instance","__installFunction","scoped","oldLen","installFunction","scopedInstallFunction","uninstallFunction","fi","list","poke","value","peek8","poke8","peek16","poke16","peek32","poke32","peek64","poke64","peek32f","poke32f","peek64f","poke64f","getMemValue","getPtrValue","setMemValue","setPtrValue","isPtr32","cstrlen","h","jstrlen","jstrcpy","jstr","maxBytes","addNul","cstrncpy","tgtPtr","srcPtr","strPtr","jstrToUintArray","encode","__affirmAlloc","__allocCStr","returnWithLength","allocator","state","__allocMainArgv","isScoped","pList","scopedAllocMainArgv","allocMainArgv","cArgvToJs","scopedAllocCall","__allocPtr","howMany","pIr","scopedAllocPtr","xGet","__argcMismatch","xCall","fname","convert","Map","xArg","xResult","__xArgPtr","valueOf","copyToResult","adaptPtr","t","__xArgString","JSON","parse","AbstractArgAdapter","convertArg","argv","argIndex","FuncPtrAdapter","warnOnUse","signature","contextKey","bindScope","bindScopes","bindMod","isTransient","isContext","isPermanent","singleton","callProxy","contextMap","cm","__cmap","pair","fp","debugFuncInstall","debugOut","__xArgAdapterCheck","__xResultAdapterCheck","convertArgNoCheck","convertResult","convertResultNoCheck","fArg","resultType","argTypes","fIsFunc","xf","cxw","__xAdapter","typeName","adapter","modeName","xcvPart","resultAdapter","argAdapter","testConvertResult","yawl","wui","finalThen","wasmUtilTarget","malloc","free","Jaccwabyt","StructBinderFactory","SBF","memberPrefix","memberSuffix","debugFlags","__makeDebugFlags","deriveFrom","__flags","setter","_flags","writable","isLittleEndian","DataView","setInt16","sigLetter","isFuncSig","sigIR","affirmBigIntArray","sPropName","__instancePointerMap","WeakMap","xPtrPropName","__freeStruct","ctor","delete","ondispose","StructType","structName","structInfo","sizeof","rop","__allocStruct","__memberKeyProp","__lookupMember","memberName","tossIfNotFound","members","values","__memberSignature","emscriptenFormat","__ptrPropDescriptor","__structMemberKeys","memberKey","__utf8Decoder","__utf8Encoder","__affirmCStringSignature","member","stringify","__addOnDispose","__allocCString","lookupMember","memberToJsString","__memberToJsString","memberIsString","__memberIsString","memberKeys","memberSignature","memoryDump","setMemberCString","__setMemberCString","addOnDispose","isA","hasExternalPointer","isNumericValue","isFinite","makeMemberWrapper","descr","getters","setters","sw","sigDVGetter","sigDVSetter","sigDVSetWrapper","rxSig1","rxSig2","sigCheck","sigGlyph","xPropName","dbg","prop","propName","readOnly","lastMember","StructCtor","externalMemory","methodInfoForKey","mKey","bindingSignatures","aNames","nCols","pColVals","pColNames","aVals","pV","iCode","s0","s1","s2","s3","sqlite3_activate_see","int64","zDb","zTbl","iKey1","iKey2","z0","z1","rowid","sqlite3changegroup_add","__ipsProxy","__xString","nilType","oo1","Stmt","DB","sqlite3_index_info","sqlite3_module","SQLITE_NOTFOUND","__xRcPtr","sqlite3_step","doArgcCheck","fI64Disabled","sqlite3_wasm_db_error","__db_err","msg","cJson","ctype","defineGroups","__rcMap","notThese","WasmTestStruct","sqlite3_kvvfs_methods","sqlite3_index_constraint","sqlite3_index_orderby","sqlite3_index_constraint_usage","structs","sqlite3_vtab_config","__dbArgcMismatch","__errEncoding","SQLITE_FORMAT","__argPDb","__argStr","__dbCleanupMap","dbMap","addCollation","collation","Set","add","toLowerCase","_addUDF","arity","addFunction","udf","addWindowFunc","wudf","cleanup","closeArgs","sqlite3_create_collation_v2","SQLITE_UTF8","fmap","arities","fargs","clear","__sqlite3CloseV2","sqlite3_close_v2","sqlite3session_table_filter","__sqlite3SessionDelete","sqlite3session_delete","pSession","__sqlite3CreateCollationV2","zName","pArg","xCompare","sqlite3_create_collation","__cfProxy","xInverseAndStep","xFinalAndValue","__sqlite3CreateFunction","__sqlite3CreateWindowFunction","udfSetResult","udfConvertArgs","udfSetError","__flexiString","__prepare","basic","full","sqlLen","ppStmt","pzTail","xSql","xSqlLen","__bindText","__bindBlob","text","nText","sqlite3_db_handle","pMem","nMem","sqlite3_config","SQLITE_CONFIG_COVERING_INDEX_SCAN","SQLITE_CONFIG_MEMSTATUS","SQLITE_CONFIG_SMALL_MALLOC","SQLITE_CONFIG_SORTERREF_SIZE","SQLITE_CONFIG_STMTJRNL_SPILL","SQLITE_CONFIG_URI","sqlite3_wasm_config_i","SQLITE_CONFIG_LOOKASIDE","sqlite3_wasm_config_ii","SQLITE_CONFIG_MEMDB_MAXSIZE","sqlite3_wasm_config_j","__autoExtFptr","sqlite3_auto_extension","fPtr","sqlite3_cancel_auto_extension","sqlite3_reset_auto_extension","pKvvfs","kvvfsMethods","sqlite3_wasm_kvvfs_methods","kvvfsMakeKey","sqlite3_wasm_kvvfsMakeKeyOnPstack","kvvfsStorage","zClass","kvvfsImpls","xRead","zKey","zBuf","nBuf","astack","zXKey","jKey","jV","nV","zV","copyWithin","xWrite","zData","setItem","SQLITE_IOERR","xDelete","sqlite3_vfs_unregister","libVersion","libVersionNumber","sourceId","downloadVersion","__ptrMap","__stmtMap","getOwnOption","dflt","getOwnPropertyDescriptor","checkSqlite3Rc","sqliteResultCode","sqlite3_errmsg","sqlite3_errstr","__dbTraceToConsole","SQLITE_TRACE_STMT","counter","__vfsPostOpenSql","dbCtorHelper","_name2vfs","isWorkerThread","normalizeArgs","flagsStr","fnJs","vfsCheck","oflags","SQLITE_OPEN_CREATE","SQLITE_OPEN_READWRITE","SQLITE_OPEN_READONLY","SQLITE_OPEN_EXRESCODE","pPtr","sqlite3_open_v2","sqlite3_extended_result_codes","sqlite3_trace_v2","postInitSql","setVfsPostOpenSql","BindTypes","null","number","boolean","blob","bigint","parameterCount","sqlite3_bind_parameter_count","affirmDbOpen","affirmColIndex","stmt","ndx","columnCount","__selectFirstRow","getArgs","prepare","step","reset","finalize","__selectAll","rowMode","returnValue","checkRc","isOpen","affirmOpen","onclose","before","after","changes","sixtyFour","sqlite3_total_changes64","sqlite3_total_changes","sqlite3_changes64","sqlite3_changes","dbFilename","sqlite3_db_filename","dbNumber","sqlite3_db_name","dbVfsName","resultRows","returnVal","saveSql","cbArg","$colName","parseExecArgs","evalFirstResult","columnNames","isTA","pSql","pSqlEnd","sqlite3_sql","gotColNames","_lockedByExec","getColumnNames","row","createFunction","isFunc","isWindow","fFlags","SQLITE_DETERMINISTIC","SQLITE_DIRECTONLY","SQLITE_INNOCUOUS","xArity","arityArg","selectValue","asType","selectValues","selectArray","selectObject","selectArrays","selectObjects","openStatementCount","opener","savepoint","affirmStmtOpen","affirmSupportedBindType","isSupportedBindType","affirmNotLockedByExec","currentOpName","bindOne","bindType","_tooBigInt","asBlob","pStr","sqlite3_bind_parameter_index","affirmParamIndex","sqlite3_bind_null","sqlite3_bind_int","sqlite3_bind_int64","sqlite3_bind_double","_mayGet","sqlite3_finalize","clearBindings","sqlite3_clear_bindings","alsoClearBinds","sqlite3_reset","bindAsBlob","SQLITE_DONE","SQLITE_ROW","stepReset","stepFinalize","sqlite3_column_name","sqlite3_column_type","sqlite3_column_int64","sqlite3_column_double","sqlite3_column_text","sqlite3_column_bytes","sqlite3_column_blob","_blobXfer","getInt","getFloat","getString","getBlob","getJSON","SQLITE_STRING","getColumnName","getParamIndex","sqlite3_column_count","JsStorageDb","storageName","jdb","clearStorage","storageSize","initWorker1API","WorkerGlobalScope","getDbId","wState","idMap","idSeq","dbList","xfer","dbs","alsoUnlink","ddNdx","sqlite3_wasm_vfs_unlink","post","xferList","postMessage","getDb","require","getMsgDb","msgData","affirmExists","dbId","wMsgHandler","ev","oargs","simulateError","guessVfs","cause","persistent","theCallback","rowNumber","changeCount","countChanges","vfsList","opfsEnabled","opfs","export","mimetype","treeList","onmessage","evType","arrivalTime","operation","errorClass","messageId","workerReceivedTime","workerRespondTime","departureTime","vtab","sii","nthConstraint","asPtr","$nConstraint","$aConstraint","nthConstraintUsage","$aConstraintUsage","nthOrderBy","$nOrderBy","$aOrderBy","installMethod","applyArgcCheck","installMethodArgcCheck","argcProxy","removeFuncList","__removeFuncList","sigN","memKey","fProxy","pFunc","installMethods","structInstance","methods","seen","prior","mkey","registerVfs","asDefault","sqlite3_vfs_register","installVfs","propList","o","struct","StructPtrMapper","__xWrap","methodName","removeMapping","__xWrapFactory","pCObj","unget","xVtab","sqlite3_vtab","xCursor","sqlite3_vtab_cursor","xIndexInfo","pIdxInfo","xError","defaultRc","errorReporter","xRowid","ppRowid64","setupModule","createdMod","mod","xConnect","xDisconnect","catchExceptions","fwrap","pAux","ppVtab","pzErr","mnames","remethods","xCreate","$iVersion","iVersion","$xShadowName","$xSavePoint","$xRelease","$xRollbackTo","installOpfsVfs","options","Atomics","createSyncAccessHandle","storage","getDirectory","urlParams","searchParams","has","verbose","sanityChecks","proxyUri","defaultProxyUri","thePromise","promiseResolve_","promiseReject_","loggers","logImpl","level","sqlite3_file","sqlite3_io_methods","opfsUtil","metrics","dump","opIds","wait","avgTime","avgWait","s11n","W","serialize","deserialize","opfsIoMethods","opfsVfs","promiseWasRejected","promiseReject","promiseResolve","Worker","_originalOnError","pDVfs","dVfs","$szOsFile","$mxPathname","$xDlOpen","$xDlError","$xDlSym","$xDlClose","littleEndian","asyncIdleWaitTime","asyncS11nExceptions","fileBufferSize","sabS11nOffset","sabS11nSize","sabIO","whichOp","xAccess","xClose","xDeleteNoWait","xFileSize","xLock","xOpen","xSleep","xSync","xTruncate","xUnlock","retry","sabOP","sq3Codes","opfsFlags","OPFS_UNLOCK_ASAP","defaultUnlockAsap","opRun","opNdx","store","sabOPView","notify","load","asyncShutdown","asyncRestart","randomFilename","_chars","_n","random","__openFiles","opTimer","mTimeStart","mTimeEnd","ioSyncWrappers","xCheckReservedLock","pFile","lockType","sq3File","xDeviceCharacteristics","SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN","xFileControl","opId","pSz64","pDest","offset64","SQLITE_IOERR_SHORT_READ","sabView","SQLITE_IOERR_READ","sz64","SQLITE_LOCK_NONE","pSrc","SQLITE_IOERR_WRITE","vfsSyncWrappers","xCurrentTime","xCurrentTimeInt64","doSyncDir","xFullPathname","SQLITE_CANTOPEN","xGetLastError","pOutFlags","sqlite3_uri_boolean","fh","fid","sab","sabFileBufView","$pMethods","$xRandomness","$xSleep","xRandomness","ms","getResolvedPath","splitIt","getDirForFilename","absFilename","createDirs","dh","rootDirectory","dirName","getDirectoryHandle","absDirName","entryExists","fsEntryName","getFileHandle","dirHandle","handle","kind","subDir","doDir","rmfr","recurse","removeEntry","recursive","throwOnError","hDir","filenamePart","traverse","depth","directory","importDb","fnamePart","hFile","chunk","sah","nWrote","checkedHeader","at","importDbChunked","OpfsDb","oo1Db","sqlite3_busy_timeout","payload","io","sabS11nView","textDecoder","textEncoder","viewU8","viewDV","TypeIds","getTypeId","getTypeIdById","tid","typeIds","getInt32","setInt32","initS11n","openFlags","SQLITE_OPEN_MAIN_DB","dbFile","zDbFile","readBuf","jRead","sanityCheck","errMsg","sqlite3Dir","initPromises","HEADER_OFFSET_DATA","PERSISTENT_FILE_TYPES","SQLITE_OPEN_MAIN_JOURNAL","SQLITE_OPEN_SUPER_JOURNAL","SQLITE_OPEN_WAL","OPAQUE_DIR_NAME","getRandomName","optionDefaults","initialCapacity","clearOnInit","verbosity","__mapVfsToPool","getPoolForVfs","setPoolForVfs","pool","__mapSqlite3File","getPoolForPFile","setPoolForPFile","ioMethods","storeErr","getOFileForS3File","mapS3FileToOFile","flush","SQLITE_OPEN_DELETEONCLOSE","deletePath","getSize","nRead","xSectorSize","vfsMethods","hasFilename","SQLITE_IOERR_DELETE","popErr","cMsg","sqlite3Rc","getSAHForPath","getFileCount","getCapacity","nextAvailableSAH","setAssociatedPath","OpfsSAHPool","vfsDir","dhVfsRoot","dhOpaque","dhVfsParent","mapSAHToName","mapFilenameToSAH","availableSAH","mapS3FileToOFile_","apBody","HEADER_MAX_PATH_SIZE","dvBody","cVfs","createOpfsVfs","$error","addCapacity","getVfs","getFileNames","iter","ah","reduceCapacity","nRm","releaseAccessHandles","acquireAccessHandles","clearFiles","all","getAssociatedPath","getUint32","fileDigest","HEADER_DIGEST_SIZE","compDigest","computeDigest","every","pathBytes","findIndex","enc","encodeInto","written","setUint32","digest","h1","h2","prev","removeVfs","exportFile","OpfsSAHPoolUtil","sahPool","reserveMinimumCapacity","wipeFiles","installOpfsSAHPoolVfs","apiVersionCheck","$testThrowInInit","thePool","poolUtil","theVfs","OpfsSAHPoolDb","SABC","wasmExports","ready","toExportForESM","originalInit","initModuleState","moduleScript","isWorker","URLSearchParams","li","EmscriptenModule","sim","scriptDir","sqlite3Worker1Promiser","onready","handlerMap","noop","idTypeMap","generateMessageId","genMsgId","worker","msgHandler","onrow","onunhandled","proxy","rowCallbackId","finally","LogLevel","prettyLogStyles","bold","dim","italic","underline","overline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","formatTemplate","settings","template","hideUnsetPlaceholder","templateString","ansiColorWrap","placeholderValue","styleWrap","style","reduce","prevValue","thisStyle","placeholder","stylePrettyLogs","formatNumberAddZeros","digits","addNumber","jsonStringifyRecursive","inspect","ctx","stylize","stylizeNoColor","isUndefined","showHidden","colors","customInspect","stylizeWithColor","formatValue","styleType","styles","isFunction","isString","isNull","hasOwn","isRegExp","re","isObject","objectToString","isError","isDate","formatError","recurseTimes","primitive","formatPrimitive","visibleKeys","array","arrayToHash","getOwnPropertyNames","RegExp","toISOString","base","braces","toUTCString","formatProperty","formatArray","reduceToSingleString","desc","line","simple","special","regexp","Runtime","getCallerStackFrame","getErrorTrace","getMeta","logLevelId","logLevelName","stackDepthLevel","hideLogPositionForPerformance","parentNames","meta","transportJSON","json","transportFormatted","logMetaMarkup","logArgs","logErrors","logErrorsStr","prettyInspectOptions","inspectOptions","first","tempStr","lastPos","nextChar","tempArg","tempNum","tempInteger","parseInt","tempFloat","formatWithOptions","isBuffer","prettyFormatLogObj","maskedArgs","errors","prettyFormatErrorObj","runtime","browser","userAgent","pathRegex","stackLineToStackFrame","origin","pathResult","fullFilePath","fileName","fileNameWithLine","fileColumn","fileLine","filePath","filePathWithLine","pathParts","errorStackStr","stackFrame","prettyErrorStackTemplate","placeholderValuesError","errorName","errorMessage","errorStack","prettyErrorTemplate","BaseLogger","logObj","minLevel","argumentsArrayName","hideLogPositionForProduction","prettyLogTemplate","prettyErrorParentNamesSeparator","prettyErrorLoggerNameDelimiter","prettyLogTimeZone","SILLY","TRACE","DEBUG","INFO","WARN","ERROR","FATAL","dateIsoStr","nameWithDelimiterPrefix","nameWithDelimiterSuffix","compact","Infinity","metaProperty","maskPlaceholder","maskValuesOfKeys","maskValuesOfKeysCaseInsensitive","maskValuesRegEx","attachedTransports","overwrite","mask","toLogObj","addMeta","addPlaceholders","formatMeta","formatLogObj","_mask","thisLogObj","_recursiveCloneAndExecuteFunctions","_toLogObj","logObjWithMeta","_addMetaToLogObj","logArgsAndErrorsMarkup","_prettyFormatLogObjMeta","transportLogger","attachTransport","getSubLogger","subLoggerSettings","_recursiveCloneAndMaskValuesOfKeys","source","item","protocol","username","password","host","hostname","port","search","baseObject","_cloneError","getPrototypeOf","modifiedSource","regEx","isObjectOrArray","shallowCopy","descriptor","clonedLogObj","_toErrorObject","cloned","nativeError","logObjMeta","placeholderValues","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getMilliseconds","dateInSettingsTimeZone","parentNamesString","Logger","isBrowser","isBrowserBlinkEngine","chrome","CSS","supports","isSafari","silly","trace","fatal","Info","_settle","pact","_Pact","observer","strtimeAsISO8601","onFulfilled","onRejected","_this","_iteratorSymbol","Symbol","iterator","thenable","_forOf","body","_cycle","_isSettledPact","_fixup","SynQLite","initData","_initData$wal","_db","_dbName","_synqDbId","_synqPrefix","_synqTables","_synqBatchSize","_wal","utils","nowAsISO8601","utcNowAsISO8601","tables","batchSize","wal","_extends","logOptions","_proto","_this2","_catch","_promiser","_this$log","promiser","_temp2","conf","_temp","_promiser2","_promiser3","runQuery","_ref","_this3","quid","synqDbId","results","col","getLastSync","synqPrefix","getChangesSinceLastSync","_ref2","lastSync","_temp3","_this5$getLastSync","lastLocalSync","last_local_sync","_this5","where","enableTriggers","disableTriggers","beginTransaction","commitTransaction","_ref3","rollbackTransaction","_ref4","applyChange","_ref5","change","_this9","_this9$synqTables","_temp5","recordData","table","synqTables","find","table_name","_temp4","_switch","_extends2","columnsToUpdate","updateValues","row_id","columnsToInsert","insertPlaceholders","_interrupt","applyChangesToLocalDB","_this10","_temp12","_temp11","update","shouldContinue","stage","updateValue","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","_for","synqBatchSize","batch","_temp10","_temp9","_temp8","setupTriggersForTable","_ref6","_this11","_this11$runQuery","jsonObject","jo","setupDatabase","_ref7","_ref7$prefix","_ref7$batchSize","_ref7$wal","_ref7$preInit","preInit","_ref7$postInit","_temp25","_result3","_prefix","_temp23","_temp21","_exit2","_temp19","_temp18","_temp16","_temp15","postInitQuery","_temp17","_temp14","_result4","_temp20","_temp13","preInitQuery","_temp22","_exit","_temp24"],"mappings":"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"}