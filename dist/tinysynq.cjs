var e,n,r,t,o=require("tslog"),i=require("@sqlite.org/sqlite-wasm"),a=require("nanoid");function s(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(s=function(){return!!e})()}function u(e){var n=function(e,n){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var t=r.call(e,"string");if("object"!=typeof t)return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof n?n:String(n)}function c(e,n){for(var r=0;r<n.length;r++){var t=n[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,u(t.key),t)}}function l(e,n,r){return n&&c(e.prototype,n),r&&c(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function f(){return f=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},f.apply(this,arguments)}function d(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,v(e,n)}function m(e){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},m(e)}function v(e,n){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},v(e,n)}function E(e){var n="function"==typeof Map?new Map:void 0;return E=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf("[native code]")}catch(n){return"function"==typeof e}}(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,r)}function r(){return function(e,n,r){if(s())return Reflect.construct.apply(null,arguments);var t=[null];t.push.apply(t,n);var o=new(e.bind.apply(e,t));return r&&v(o,r.prototype),o}(e,arguments,m(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),v(r,e)},E(e)}function h(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}!function(e){e.INSERT="INSERT",e.UPDATE="UPDATE",e.DELETE="DELETE"}(e||(e={})),function(e){e.push="push",e.pull="pull"}(n||(n={})),function(e){e.ack="ack",e.nack="nack"}(r||(r={})),function(e){e[e.Silly=0]="Silly",e[e.Trace=1]="Trace",e[e.Debug=2]="Debug",e[e.Info=3]="Info",e[e.Warn=4]="Warn",e[e.Error=5]="Error",e[e.Fatal=6]="Fatal"}(t||(t={}));var _=/*#__PURE__*/function(){function e(e){var n=e.local,r=e.remote,t=e.localId,o=e.localTime,i=e.remoteTime;this.local=void 0,this.isGreater=!1,this.isLess=!1,this.isWrongOrder=!1,this.remote={},this.localId=void 0,this.localTime=void 0,this.remoteTime=void 0,this.local=n,this.remote="string"==typeof r?JSON.parse(r):r,this.localId=t,this.localTime=o,this.remoteTime=i}var n=e.prototype;return n.setRemote=function(e){this.remote=e.remote},n.isConflicted=function(e){var n=this,r=(null==e?void 0:e.remote)||this.remote;return Object.keys(f({},this.local,r)).forEach(function(e){var t=n.local[e]||0,o=r[e]||0;n.isGreater=n.isGreater||t>o,n.isLess=n.isLess||t<o}),this.isGreater&&this.isLess},n.isOutDated=function(){var e=this.remoteTime,n=this.localTime,r=void 0===n?"1970-01-01":n;if(console.debug("\n\n::: isOutDated() :::",JSON.stringify({localTime:r,remoteTime:e,local:this.local,remote:this.remote},null,1),"\n\n::: /isOutDated() :::"),!e||!r)throw new Error("Missing modified time");return new Date(r)>=new Date(e)},n.isOutOfOrder=function(){var e=this.remote,n=this.local,r=this.localId;if(!e||!n)throw new Error("Remote vector clock not set");for(var t=Object.keys(f({},this.local,e)).filter(function(e){return e!==r}),o=0;o<t.length;o++){var i,a,s=t[o],u=Math.abs((null!=(i=n[s])?i:0)-(null!=(a=e[s])?a:0));this.isWrongOrder=u>1}return this.isWrongOrder},n.merge=function(){for(var e,n={},r=function(e,n){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(r)return(r=r.call(e)).next.bind(r);if(Array.isArray(e)||(r=function(e,n){if(e){if("string"==typeof e)return h(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?h(e,n):void 0}}(e))){r&&(e=r);var t=0;return function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(new Set(Object.keys(this.local).concat(Object.keys(this.remote))));!(e=r()).done;){var t=e.value;n[t]=Math.max(this.local[t]||0,this.remote[t]||0)}return void 0===n[this.localId]&&(n[this.localId]=0),n},e}(),T=["id"];function y(e,n){try{var r=e()}catch(e){return n(e)}return r&&r.then?r.then(void 0,n):r}var g="undefined"!=typeof Symbol?Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator")):"@@iterator";function P(e,n,r){if(!e.s){if(r instanceof b){if(!r.s)return void(r.o=P.bind(null,e,n));1&n&&(n=r.s),r=r.v}if(r&&r.then)return void r.then(P.bind(null,e,n),P.bind(null,e,2));e.s=n,e.v=r;var t=e.o;t&&t(e)}}var b=/*#__PURE__*/function(){function e(){}return e.prototype.then=function(n,r){var t=new e,o=this.s;if(o){var i=1&o?n:r;if(i){try{P(t,1,i(this.v))}catch(e){P(t,2,e)}return t}return this}return this.o=function(e){try{var o=e.v;1&e.s?P(t,1,n?n(o):o):r?P(t,1,r(o)):P(t,2,o)}catch(e){P(t,2,e)}},t},e}();function O(e){return e instanceof b&&1&e.s}var I=new o.Logger({name:"tinysynq-web-init",minLevel:t.Info});function R(e,n,r){if("function"==typeof e[g]){var t,o,i,a=e[g]();if(function e(s){try{for(;!((t=a.next()).done||r&&r());)if((s=n(t.value))&&s.then){if(!O(s))return void s.then(e,i||(i=P.bind(null,o=new b,2)));s=s.v}o?P(o,1,s):o=s}catch(e){P(o||(o=new b),2,e)}}(),a.return){var s=function(e){try{t.done||a.return()}catch(e){}return e};if(o&&o.then)return o.then(s,function(e){throw s(e)});s()}return o}if(!("length"in e))throw new TypeError("Object is not iterable");for(var u=[],c=0;c<e.length;c++)u.push(e[c]);return function(e,n,r){var t,o,i=-1;return function a(s){try{for(;++i<e.length&&(!r||!r());)if((s=n(i))&&s.then){if(!O(s))return void s.then(a,o||(o=P.bind(null,t=new b,2)));s=s.v}t?P(t,1,s):t=s}catch(e){P(t||(t=new b),2,e)}}(),t}(u,function(e){return n(u[e])},r)}var S="STRFTIME('%Y-%m-%d %H:%M:%f','NOW')",p=/*#__PURE__*/function(n){function r(e){var r,i,a,s,u,c;if((c=n.call(this)||this)._db=void 0,c._dbPath=void 0,c._deviceId=void 0,c._synqPrefix=void 0,c._synqTables=void 0,c._synqBatchSize=20,c._wal=!0,c.log=void 0,c.utils={strftimeAsISO8601:S,nowAsISO8601:S,utcNowAsISO8601:function(){return(new Date).toISOString().replace(/[TZ]/g," ").trim()},isSafeISO8601:function(e){return/^\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}(\.\d{1,3})?$/.test(e)}},!e.filePath&&!e.sqlite3)throw new Error("No DB filePath or connection provided");var l={};return e.tables.forEach(function(e){l[e.name]=e}),c._dbPath=e.filePath||"",c._db=e.sqlite3||void 0,c._synqPrefix=null==(r=e.prefix)?void 0:r.trim().replace(/[^a-z0-9]+$/i,""),c._synqTables=l,c._synqBatchSize=e.batchSize||c._synqBatchSize,c._wal=null!=(i=e.wal)&&i,c.log=new o.Logger(f({name:"tinysynq-node",minLevel:null!=(a=null==(s=e.logOptions)?void 0:s.minLevel)?a:t.Info,type:(null==(u=e.logOptions)?void 0:u.type)||"json",maskValuesOfKeys:["password","encryption_key"],hideLogPositionForProduction:!0},e.logOptions||{})),c}d(r,n);var s=r.prototype;return s.init=function(){try{var e=this,n=e;return e.db?Promise.resolve(e.db):e.dbPath?Promise.resolve(new Promise(function(r,t){try{return Promise.resolve(y(function(){return e.log.debug("get promiser..."),Promise.resolve(new Promise(function(r){var t=i.sqlite3Worker1Promiser({onready:function(){r(t)},onerror:function(n){e.log.error("@ERROR",n)},debug:function(){var e;(e=n.log).debug.apply(e,[].slice.call(arguments))},onunhandled:function(n){e.log.error("@UNHANDLED",n)}})})).then(function(n){return e.log.debug("get config..."),Promise.resolve(n("config-get",{})).then(function(){function o(){if(!i)return t("Unable to start DB");var o=i.dbId;return Promise.resolve(n("config-get",{})).then(function(i){function a(){var n=0,o=setInterval(function(){return n+=50,e.db?(clearInterval(o),e.dispatchEvent(new CustomEvent("ready")),r(e)):n>=5e3&&!e._db?(e.log.error("@db",e.db),clearInterval(o),t("TinySynq failed to load. (waited "+n+"ms")):void e.log.error("::: Impossible. :::")},50)}e.log.info("Running SQLite3 version",i.result.version.libVersion),e._db=n,e._deviceId=o,e.setDeviceId();var s=function(){if(!0===e._wal)return Promise.resolve(e.runQuery({sql:"PRAGMA journal_mode=WAL;"})).then(function(){})}();return s&&s.then?s.then(a):a()})}var i,a=y(function(){return e.log.debug("open "+e.dbPath+"..."),Promise.resolve(n("open",{filename:"file:"+e.dbPath+"?vfs=opfs"})).then(function(n){e.log.info("OPFS is available, created persisted database at",(i=n).result.filename.replace(/^file:(.*?)\?vfs=opfs$/,"$1"))})},function(){return Promise.resolve(n("open",{filename:"file:"+e.dbPath})).then(function(n){e.log.warn("OPFS not available, created in-memory database at "+(i=n).result.filename)})});return a&&a.then?a.then(o):o()})})},function(n){n instanceof Error||(n=new Error(n.result.message)),e.log.error(n.name,n.message),e.log.error(n),t("DB setup failed.")}))}catch(e){return Promise.reject(e)}})):Promise.reject("No DB filename or connection provided")}catch(e){return Promise.reject(e)}},s.getNewId=function(){return a.nanoid(16)},s.getTableIdColumn=function(e){var n;return null==(n=this.synqTables[e.table_name])?void 0:n.id},s.setDeviceId=function(){try{var e,n=function(){function n(){var n;r._deviceId=null==(n=e)?void 0:n.meta_value}I.warn("@device_id",e);var t=function(n){if(null==(n=e)||!n.meta_value)return Promise.resolve(r.runQuery({sql:"INSERT OR REPLACE INTO "+r.synqPrefix+"_meta (meta_name, meta_value) VALUES (?,?) RETURNING *",values:["device_id",r.deviceId]})).then(function(n){I.warn("@created record for device_id:",n),e=n[0]})}();return t&&t.then?t.then(n):n()},r=this,t=y(function(){return Promise.resolve(r.runQuery({sql:"SELECT meta_value FROM "+r.synqPrefix+"_meta WHERE meta_name = 'device_id'"})).then(function(n){e=n[0]})},function(){r.log.warn("Couldn't retrieve device ID")});return Promise.resolve(t&&t.then?t.then(n):n())}catch(e){return Promise.reject(e)}},s.run=function(e){try{return Promise.resolve(this.runQuery(e))}catch(e){return Promise.reject(e)}},s.runMany=function(e){try{var n=this,r=e.sql,t=e.values,o=e.prefix,i=void 0===o?":":o,a=Math.ceil(1e6*Math.random()),s=n.synqDbId;return n.log.debug("@runMany",{quid:a,sql:r,values:t}),Promise.resolve(new Promise(function(e,o){try{var u=function(){e(!0)},c=y(function(){var e=R(t,function(e){var t=n.reformatQueryValues({values:e,prefix:i});return Promise.resolve(n.db("exec",{dbId:s,sql:r,bind:t})).then(function(){})});if(e&&e.then)return e.then(function(){})},function(e){n.log.error({quid:a,err:e,stack:e.stack}),o(e)});return Promise.resolve(c&&c.then?c.then(u):u())}catch(e){return Promise.reject(e)}}))}catch(e){return Promise.reject(e)}},s.runQuery=function(e){try{var n=this;if(!n._db)var r=setInterval(function(){try{return n._db?(clearInterval(r),Promise.resolve()):Promise.resolve()}catch(e){return Promise.reject(e)}},50);var t=e.sql,o=e.prefix,i=n.reformatQueryValues({values:e.values,prefix:void 0===o?":":o}),a=Math.ceil(1e6*Math.random());n.log.debug("@runQuery",a,t,i,"/");var s=n.synqDbId;return Promise.resolve(new Promise(function(e,r){var o=[];try{n.db("exec",{dbId:s,sql:t,bind:i,callback:function(r){if(!r.row)return n.log.debug("@runQuery RESOLVED",o.length,a),n.log.trace(t,i),e(o);var s={};r.row.forEach(function(e,n){return s[r.columnNames[n]]=r.row[n]}),o.push(s)}})}catch(e){n.log.error(a,e,e.stack),r(e)}}))}catch(e){return Promise.reject(e)}},s.reformatQueryValues=function(e){var n=e.values,r=e.prefix,t=void 0===r?":":r;if(Array.isArray(n))return n;if("object"==typeof n){var o=Object.keys(n),i={};return o.forEach(function(e){var r=e.startsWith(t)?e:""+t+e;i[r]=n[e]}),i}return n},s.getDeviceId=function(){try{var e=this;return e._deviceId?Promise.resolve(e._deviceId):Promise.resolve(e.runQuery({sql:"\n        SELECT meta_value FROM "+e.synqPrefix+"_meta\n        WHERE meta_name = 'device_id'"})).then(function(e){return e[0].meta_value})}catch(e){return Promise.reject(e)}},s.getLastSync=function(){try{var e=this;return Promise.resolve(e.runQuery({sql:"\n        SELECT meta_value FROM "+e.synqPrefix+"_meta\n        WHERE meta_name = 'last_local_sync'"})).then(function(n){var r;return e.log.trace("@getLastSync",n[0]),null==(r=n[0])?void 0:r.meta_value})}catch(e){return Promise.reject(e)}},s.getChanges=function(e){try{var n=function(n){var t=(e||{}).columns,o=void 0===t?["c.*"]:t;r.log.debug("@getChanges",n);var i="";n&&(i="WHERE c.modified > ?");var a="\n      SELECT "+(o.map(function(e){return e.replace(/[^*._a-z0-9]+/gi,"")}).join(",")||"*")+"\n      FROM "+r._synqPrefix+"_changes c\n      "+i+"\n      ORDER BY c.modified ASC\n    ",s=n?[n]:[];return r.log.debug(a,s),r.runQuery({sql:a,values:s})},r=this,t=null==e?void 0:e.lastLocalSync;return Promise.resolve(t?n(t):Promise.resolve(r.getLastSync()).then(n))}catch(e){return Promise.reject(e)}},s.getChangesSinceLastSync=function(e){try{var n=this;return Promise.resolve(n.getLastSync()).then(function(r){return n.getChanges(f({},e,{lastLocalSync:r}))})}catch(e){return Promise.reject(e)}},s.enableDebug=function(){try{return Promise.resolve(this.run({sql:"\n      INSERT OR REPLACE INTO "+this.synqPrefix+"_meta (meta_name, meta_value)\n      VALUES ('debug_on', '1')\n      RETURNING *;"}))}catch(e){return Promise.reject(e)}},s.disableDebug=function(){try{return Promise.resolve(this.run({sql:"\n      INSERT OR REPLACE INTO "+this.synqPrefix+"_meta (meta_name, meta_value)\n      VALUES ('debug_on', '0')\n      RETURNING *;"}))}catch(e){return Promise.reject(e)}},s.clearDebugData=function(){try{var e=this;return Promise.resolve(e.run({sql:"DELETE FROM "+e._synqPrefix+"_dump"})).then(function(){return Promise.resolve(e.run({sql:"UPDATE SQLITE_SEQUENCE SET seq = 0 WHERE name = "+e._synqPrefix+"_dump"})).then(function(){})})}catch(e){return Promise.reject(e)}},s.enableTriggers=function(){return this.run({sql:"\n      INSERT OR REPLACE INTO "+this.synqPrefix+"_meta (meta_name, meta_value)\n      VALUES ('triggers_on', '1');"})},s.disableTriggers=function(){try{return Promise.resolve(this.run({sql:"\n      INSERT OR REPLACE INTO "+this.synqPrefix+"_meta (meta_name, meta_value)\n      VALUES ('triggers_on', '0');"}))}catch(e){return Promise.reject(e)}},s.beginTransaction=function(){try{var e="SP"+Date.now();return Promise.resolve(this.run({sql:"SAVEPOINT "+e+";"})).then(function(){return e})}catch(e){return Promise.reject(e)}},s.commitTransaction=function(e){var n=e.savepoint;try{return Promise.resolve(this.run({sql:"RELEASE SAVEPOINT "+n+";"}))}catch(e){return Promise.reject(e)}},s.rollbackTransaction=function(e){var n=e.savepoint;try{return Promise.resolve(this.run({sql:"ROLLBACK TRANSACTION TO SAVEPOINT "+n+";"}))}catch(e){return Promise.reject(e)}},s.getRecord=function(e){try{var n=this,r=e.table_name,t=e.row_id,o=n.getTableIdColumn({table_name:r});return Promise.resolve(n.runQuery({sql:"SELECT * FROM "+r+" WHERE "+o+" = ?",values:[t]})).then(function(e){return n.log.debug("@getRecord",e),e[0]})}catch(e){return Promise.reject(e)}},s.getById=function(e){try{return Promise.resolve(this.getRecord({table_name:e.table_name,row_id:e.row_id}))}catch(e){return Promise.reject(e)}},s.insertRecordMeta=function(e){var n=e.change,r=e.vclock;try{var t=this;if(!t.utils.isSafeISO8601(n.modified))throw new Error("Invalid modified data for record meta: "+n.modified);t.log.debug("<<< @insertRecordMeta >>>",{change:n,vclock:r});var o={table_name:n.table_name,row_id:n.row_id,mod:r[t._deviceId]||0,source:n.source,vclock:JSON.stringify(r),modified:n.modified};return Promise.resolve(t.runQuery({sql:"\n      INSERT INTO "+t._synqPrefix+"_record_meta (table_name, row_id, source, mod, vclock, modified)\n      VALUES (:table_name, :row_id, :source, :mod, :vclock, :modified)\n      ON CONFLICT DO UPDATE SET source = :source, mod = :mod, vclock = :vclock, modified = :modified\n      RETURNING *\n      ",values:o}))}catch(e){return Promise.reject(e)}},s.getRecordMeta=function(e){try{return Promise.resolve(this.runQuery({sql:"\n    SELECT *\n    FROM "+this.synqPrefix+"_record_meta\n    WHERE table_name = :table_name\n    AND row_id = :row_id",values:{table_name:e.table_name,row_id:e.row_id}})).then(function(e){return e[0]})}catch(e){return Promise.reject(e)}},s.getPending=function(){try{return Promise.resolve(this.runQuery({sql:"\n    SELECT *\n    FROM "+this._synqPrefix+"_pending\n    ORDER BY id ASC\n    "}))}catch(e){return Promise.reject(e)}},s.getMostRecentChange=function(e){try{var n=["table_name = :table_name","row_id = :row_id"];e.operation&&n.push("operation = :operation");var r="\n    SELECT * FROM "+this._synqPrefix+"_changes\n    WHERE "+n.join(" AND ")+"\n    ORDER BY modified DESC\n    LIMIT 1";return Promise.resolve(this.runQuery({sql:r,values:e})).then(function(e){return e[0]})}catch(e){return Promise.reject(e)}},s.processOutOfOrderChange=function(e){var n=e.change;try{var r=this,t=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n.indexOf(r=i[t])>=0||(o[r]=e[r]);return o}(n,T),o=r.createInsertFromSystemObject({data:t,table_name:r._synqPrefix+"_pending"});r.log.trace("@processOutOfOrderChange\n",o,n);var i=f({},t);return i.vclock=JSON.stringify(t.vclock),Promise.resolve(r.runQuery({sql:o,values:i})).then(function(e){return r.log.trace("@processOutOfOrderChange\n",{res:e}),e})}catch(e){return Promise.reject(e)}},s.processConflictedChange=function(n){var r=n.record,t=n.change,o=n.meta;try{var i=this;return i.log.debug("@processConflictedChange START",r,t),t.operation===e.INSERT?Promise.resolve(!0):(i.log.trace("<<<@ processConflictedChange LLW @>>>",t.id,t.table_name,t.row_id,{record:r,localMeta:o,change:t}),t.modified>o.modified?(i.log.debug("<!> INTEGRATING REMOTE",t.id,t.table_name,t.row_id),Promise.resolve(!0)):(i.log.debug("<!> KEEPING LOCAL",t.id,t.table_name,t.row_id),Promise.resolve(!1)))}catch(e){return Promise.reject(e)}},s.preProcessChange=function(n){var r=n.change,t=n.restore;try{var o=this;o.log.trace("@preProcess change",r);var i="unknown",a=!1,s=i,u=o.deviceId,c=r.table_name,l=r.row_id,f=r.vclock,d=void 0===f?{}:f;return Promise.resolve(o.getRecord({table_name:c,row_id:l})).then(function(n){return o.log.trace("@preProcess record:",n),Promise.resolve(o.getRecordMeta({table_name:c,row_id:l})).then(function(c){var l;function f(e){return l?e:{record:n,meta:c,valid:a,reason:s,vclock:v,checks:{stale:y,displaced:h,conflicted:T}}}o.log.trace("@preProcess meta:",c);var m=null!=c&&c.vclock?JSON.parse(c.vclock):{},v={},E=new _({local:m,remote:d,localId:u,localTime:(null==c?void 0:c.modified)||"1970-01-01",remoteTime:null==r?void 0:r.modified}),h=!1,T=!1,y=!1;t||n||r.operation===e.INSERT?!t&&n&&m&&m[u]||(v=r.vclock):c&&r.operation===e.UPDATE?o.log.warn("SKIPPED: non-existent record with existing meta",c):(s="update before insert",o.processOutOfOrderChange({change:r}));var g=function(){if(t)return a=!0,s="restoration",v=E.merge(),l=1,{record:n,meta:c,valid:a,reason:s,vclock:v,checks:{stale:y,displaced:h,conflicted:T}};var e=function(){if(h=E.isOutOfOrder())return s="received out of order",Promise.resolve(o.processOutOfOrderChange({change:r})).then(function(){});var e=function(){if(T=E.isConflicted())return Promise.resolve(o.processConflictedChange({record:n,change:r,meta:c})).then(function(e){(a=e)?v=E.merge():s="concurrent writes"});(y=E.isOutDated())?s="stale":s===i&&(a=!0,s="",v=E.merge())}();return e&&e.then?e.then(function(){}):void 0}();return e&&e.then?e.then(function(){}):void 0}();return g&&g.then?g.then(f):f(g)})})}catch(e){return Promise.reject(e)}},s.processUpdateAfterDelete=function(n){try{var r=function(){return{valid:l}},t=this,o=n.restore,i=n.record,a=n.change,s=n.meta,u=a.table_name,c=a.row_id,l=!0,f=function(){if(!o&&!i&&s&&a.operation===e.UPDATE)return Promise.resolve(t.getMostRecentChange({table_name:u,row_id:c,operation:e.DELETE})).then(function(e){var n=function(){if(e){var n={};try{n=JSON.parse(e.data)}catch(e){l=!1,t.log.error(e)}var r=function(){if(n){var e=t.createInsertFromObject({data:n,table_name:a.table_name});return Promise.resolve(t.run({sql:e,values:n})).then(function(){})}}();if(r&&r.then)return r.then(function(){})}else l=!1}();if(n&&n.then)return n.then(function(){})})}();return Promise.resolve(f&&f.then?f.then(r):r())}catch(e){return Promise.reject(e)}},s.createInsertFromObject=function(e){var n=e.data,r=e.table_name,t=Object.keys(n).join(","),o=Object.keys(n).map(function(e){return e+" = :"+e}).join(",");if(!o)throw new Error("No insertable data: "+JSON.stringify(n));return"\n      INSERT INTO "+r+" ("+t+")\n      VALUES ("+Object.keys(n).map(function(e){return":"+e}).join(",")+")\n      ON CONFLICT DO UPDATE SET "+o+"\n      RETURNING *;"},s.createUpdateFromObject=function(e){var n=e.data,r=e.table_name;if(!this._synqTables[r])throw new Error("Not a synced table for update: "+r);var t=this._synqTables[r].id,o=Object.keys(n).filter(function(e){return e!==t}).map(function(e){return e+" = :"+e}).join(",");if(!o)throw new Error("No updates available: "+JSON.stringify(n));return"\n      UPDATE "+r+" SET "+o+"\n      WHERE "+t+" = :"+t+"\n      RETURNING *;"},s.createInsertFromSystemObject=function(e){var n=e.data,r=e.table_name;this.log.silly("@createInsert...",{data:n});var t=Object.keys(n).join(","),o=Object.keys(n).map(function(e){return e+" = :"+e}).join(",");if(!o)throw new Error("No changes availble");return"\n      INSERT INTO "+r+" ("+t+")\n      VALUES ("+Object.keys(n).map(function(e){return":"+e}).join(",")+")\n      ON CONFLICT DO UPDATE SET "+o+"\n      RETURNING *;"},s.updateLastSync=function(e){var n=e.change;try{var r=this;return Promise.resolve(r.runQuery({sql:"INSERT OR REPLACE INTO "+r.synqPrefix+"_meta (meta_name, meta_value) VALUES(:name, STRFTIME('%Y-%m-%d %H:%M:%f','NOW'))",values:{name:"last_local_sync"}})).then(function(e){return Promise.resolve(r.runQuery({sql:"INSERT OR REPLACE INTO "+r.synqPrefix+"_meta (meta_name, meta_value) VALUES(:name, :value)",values:{name:"last_sync",value:n.id}})).then(function(n){return{lastSyncTime:e,lastSyncId:n}})})}catch(e){return Promise.reject(e)}},s.applyChange=function(e){var n=e.change,r=e.restore,t=e.savepoint;try{var o=this;return Promise.resolve(y(function(){return Promise.resolve(o.preProcessChange({change:n,restore:r})).then(function(e){return o.log.debug(["\n\n ::: STATUS :::",JSON.stringify({changeStatus:e,change:n},null,2),"\n\n ::: /STATUS :::"]),null!=e&&e.valid?Promise.resolve(o.processUpdateAfterDelete(f({},e,{change:n,restore:r}))).then(function(r){function t(){return Promise.resolve(o.updateLastSync({change:n})).then(function(r){return o.log.info({lastSyncResult:r}),Promise.resolve(o.insertRecordMeta({change:n,vclock:e.vclock})).then(function(e){o.log.silly({updatedRecordMeta:e})})})}if(!r.valid)return o.log.warn(e),void o.updateLastSync({change:n});var i,a=o.synqTables[n.table_name],s=o.getTableIdColumn(n);if(!n.data)throw new Error("Cannot perform update with empty data:\n"+JSON.stringify(n,null,2));try{(i=JSON.parse(n.data))[s]=n.row_id}catch(e){throw o.log.debug(n),new Error("Invalid data for insert or update")}if(!a)throw new Error("Unable to find table "+n.table_name);o.log.silly("@applyChange",{change:n,table:a,changeStatus:e});var u=function(e,n){var r,t=-1;e:{for(var o=0;o<n.length;o++){var i=n[o][0];if(i){var a=i();if(a&&a.then)break e;if(a===e){t=o;break}}else t=o}if(-1!==t){do{for(var s=n[t][1];!s;)t++,s=n[t][1];var u=s();if(u&&u.then){r=!0;break e}var c=n[t][2];t++}while(c&&!c());return u}}const l=new b,f=P.bind(null,l,2);return(r?u.then(d):a.then(function r(a){for(;;){if(a===e){t=o;break}if(++o===n.length){if(-1!==t)break;return void P(l,1,u)}if(i=n[o][0]){if((a=i())&&a.then)return void a.then(r).then(void 0,f)}else t=o}do{for(var s=n[t][1];!s;)t++,s=n[t][1];var u=s();if(u&&u.then)return void u.then(d).then(void 0,f);var c=n[t][2];t++}while(c&&!c());P(l,1,u)})).then(void 0,f),l;function d(e){for(;;){var r=n[t][2];if(!r||r())break;t++;for(var o=n[t][1];!o;)t++,o=n[t][1];if((e=o())&&e.then)return void e.then(d).then(void 0,f)}P(l,1,e)}}(n.operation,[[function(){return"INSERT"},function(){var e=o.createInsertFromObject({data:i,table_name:n.table_name});return Promise.resolve(o.runQuery({sql:e,values:i})).then(function(){})}],[function(){return"UPDATE"},function(){var e=o.createUpdateFromObject({data:i,table_name:n.table_name});o.run({sql:e,values:i})}],[function(){return"DELETE"},function(){var e="DELETE FROM "+n.table_name+" WHERE "+a.id+" = ?";return o.log.debug(">>> DELETE SQL <<<",e,n.row_id),Promise.resolve(o.run({sql:e,values:[n.row_id]})).then(function(){})}]]);return u&&u.then?u.then(t):t()}):(o.log.warn(">>> Invalid change",e),void o.updateLastSync({change:n}))})},function(e){return Promise.resolve(o.rollbackTransaction({savepoint:t})).then(function(){throw o.log.error("Error applying change: "+e+". Rolled back.",{change:n}),o.log.error(e.stack),e})}))}catch(e){return Promise.reject(e)}},s.applyChangesToLocalDB=function(e){var n=e.changes,r=e.restore,t=void 0!==r&&r;try{var o=this;return Promise.resolve(o.disableTriggers()).then(function(){function e(){return Promise.resolve(o.enableTriggers()).then(function(){o.log.silly("Applied "+n.length+" change(s)")})}var r=0,i=function(e,n,r){for(var t;;){var o=e();if(O(o)&&(o=o.v),!o)return i;if(o.then){t=0;break}var i=r();if(i&&i.then){if(!O(i)){t=1;break}i=i.s}if(n){var a=n();if(a&&a.then&&!O(a)){t=2;break}}}var s=new b,u=P.bind(null,s,2);return(0===t?o.then(l):1===t?i.then(c):a.then(f)).then(void 0,u),s;function c(t){i=t;do{if(n&&(a=n())&&a.then&&!O(a))return void a.then(f).then(void 0,u);if(!(o=e())||O(o)&&!o.v)return void P(s,1,i);if(o.then)return void o.then(l).then(void 0,u);O(i=r())&&(i=i.v)}while(!i||!i.then);i.then(c).then(void 0,u)}function l(e){e?(i=r())&&i.then?i.then(c).then(void 0,u):c(i):P(s,1,i)}function f(){(o=e())?o.then?o.then(l).then(void 0,u):l(o):P(s,1,i)}}(function(){return r<n.length},function(){return!!(r+=o.synqBatchSize)},function(){var e=n.slice(r,r+o.synqBatchSize);return Promise.resolve(o.beginTransaction()).then(function(n){var r=y(function(){function r(){return Promise.resolve(o.commitTransaction({savepoint:n})).then(function(){})}var i=R(e,function(e){return Promise.resolve(o.applyChange({change:e,restore:t,savepoint:n})).then(function(){})});return i&&i.then?i.then(r):r()},function(e){return Promise.resolve(o.rollbackTransaction({savepoint:n})).then(function(){o.log.error("Transaction failed, changes rolled back: "+e)})});if(r&&r.then)return r.then(function(){})})});return i&&i.then?i.then(e):e()})}catch(e){return Promise.reject(e)}},s.getFilteredChanges=function(e){var n=[],r={};null!=e&&e.exclude&&(n.push("source != :exclude"),r.exclude=e.exclude),null!=e&&e.checkpoint?(n.push("id > :checkpoint"),r.checkpoint=e.checkpoint):null!=e&&e.since&&(n.push("modified > :since"),r.since=e.since);var t=n.length?"WHERE "+n.join(" AND "):"";return this.runQuery({sql:"\n    SELECT id, table_name, row_id, data, operation, source, vclock, modified\n    FROM "+this.synqPrefix+"_changes\n    "+t+" \n    ORDER BY modified ASC",values:r})},s.updateLastPush=function(e){try{var n=this;return Promise.resolve(n.runQuery({sql:"\n      SELECT * FROM "+n._synqPrefix+"_meta\n      WHERE meta_name IN ('lastPushTime','lastPushId')\n      ORDER BY meta_name ASC"})).then(function(r){return(r[0].meta_value>e.id||r[1].meta_value>e.time)&&(console.warn("Request lastPush update is older than current values."),console.warn("@Existing meta:",r),console.warn("@Incoming meta:",e)),Promise.resolve(n.beginTransaction()).then(function(r){return Promise.resolve(n.runQuery({sql:"\n      UPDATE "+n._synqPrefix+"_meta\n      SET meta_value = :value\n      WHERE meta_name = 'lastPushTime'\n      RETURNING *",values:{value:e.time}})).then(function(t){return Promise.resolve(n.runQuery({sql:"\n      UPDATE "+n._synqPrefix+"_meta\n      SET meta_value = :value\n      WHERE meta_name = 'lastPushId'\n      RETURNING *",values:{value:e.id}})).then(function(e){return Promise.resolve(n.commitTransaction({savepoint:r})).then(function(){return{timeResult:t,idResult:e}})})})})})}catch(e){return Promise.reject(e)}},s.tablesReady=function(){try{return Promise.resolve(this.enableTriggers()).then(function(){})}catch(e){return Promise.reject(e)}},s.obliterate=function(){try{return Promise.resolve(this.db({type:"close",dbId:this.deviceId,args:{unlink:!0}}))}catch(e){return Promise.reject(e)}},l(r,[{key:"db",get:function(){return this._db}},{key:"dbPath",get:function(){return this._dbPath}},{key:"deviceId",get:function(){return this._deviceId}},{key:"synqDbId",get:function(){return this._deviceId}},{key:"synqPrefix",get:function(){return this._synqPrefix}},{key:"synqTables",get:function(){return this._synqTables}},{key:"synqBatchSize",get:function(){return this._synqBatchSize}},{key:"wal",get:function(){return this._wal}}]),r}(/*#__PURE__*/E(EventTarget)),N="undefined"!=typeof Symbol?Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator")):"@@iterator";function q(e,n,r){if(!e.s){if(r instanceof w){if(!r.s)return void(r.o=q.bind(null,e,n));1&n&&(n=r.s),r=r.v}if(r&&r.then)return void r.then(q.bind(null,e,n),q.bind(null,e,2));e.s=n,e.v=r;var t=e.o;t&&t(e)}}var w=/*#__PURE__*/function(){function e(){}return e.prototype.then=function(n,r){var t=new e,o=this.s;if(o){var i=1&o?n:r;if(i){try{q(t,1,i(this.v))}catch(e){q(t,2,e)}return t}return this}return this.o=function(e){try{var o=e.v;1&e.s?q(t,1,n?n(o):o):r?q(t,1,r(o)):q(t,2,o)}catch(e){q(t,2,e)}},t},e}();function L(e){return e instanceof w&&1&e.s}function A(e,n,r){if("function"==typeof e[N]){var t,o,i,a=e[N]();if(function e(s){try{for(;!((t=a.next()).done||r&&r());)if((s=n(t.value))&&s.then){if(!L(s))return void s.then(e,i||(i=q.bind(null,o=new w,2)));s=s.v}o?q(o,1,s):o=s}catch(e){q(o||(o=new w),2,e)}}(),a.return){var s=function(e){try{t.done||a.return()}catch(e){}return e};if(o&&o.then)return o.then(s,function(e){throw s(e)});s()}return o}if(!("length"in e))throw new TypeError("Object is not iterable");for(var u=[],c=0;c<e.length;c++)u.push(e[c]);return function(e,n,r){var t,o,i=-1;return function a(s){try{for(;++i<e.length&&(!r||!r());)if((s=n(i))&&s.then){if(!L(s))return void s.then(a,o||(o=q.bind(null,t=new w,2)));s=s.v}t?q(t,1,s):t=s}catch(e){q(t||(t=new w),2,e)}}(),t}(u,function(e){return n(u[e])},r)}var C={hostname:"localhost",port:7174,secure:!1},x=/*#__PURE__*/function(e){function t(n){var r;if((r=e.call(this)||this)._config=void 0,r._serverUrl=void 0,r._ts=void 0,r._ws=void 0,r.log=void 0,null==n||!n.ts)throw new Error("Invalid client configuration");r.log=new o.Logger({name:"TinySynqClient"}),r._config=n,r._ts=n.ts;var t=f({},C,r._config),i=t.port,a=void 0===i?"":i;return r._serverUrl="ws"+(t.secure?"s":"")+"://"+t.hostname+(a?":":"")+a,r}d(t,e);var i=t.prototype;return i.isOpenOrConnecting=function(){return this.ws&&[Number(this.ws.OPEN),Number(this.ws.CONNECTING)].includes(this.ws.readyState)},i.connect=function(){try{var e=this;return Promise.resolve(new Promise(function(n,r){if(e.isOpenOrConnecting())return n(e.ws);e._ws=new WebSocket(e.serverUrl),e._ws.addEventListener("open",function(r){e.log.info("TinySynq socket ready.",r),n(e.ws)}),e._ws.addEventListener("error",function(n){e.log.error("TinySynq socket error:",n),e.isOpenOrConnecting()&&r(n)}),e._ws.addEventListener("close",function(n){e.log.info("Closing TinySynq socket...",n)}),e._ws.addEventListener("message",e.handleMessage.bind(e))}))}catch(e){return Promise.reject(e)}},i.push=function(){try{var e=this;return e.ts?Promise.resolve(e.ts.getLastSync()).then(function(r){return Promise.resolve(e.ts.getFilteredChanges({since:r})).then(function(r){var t;if(!r)return e.log.info("no changes");var o={type:n.push,changes:r,source:e._ts.deviceId,requestId:a.nanoid(16)};null==(t=e._ws)||t.send(JSON.stringify(o))})}):Promise.resolve()}catch(e){return Promise.reject(e)}},i.pull=function(){try{var e,r={type:n.pull,source:this._ts.deviceId};return console.debug("@pull",r),null==(e=this._ws)||e.send(JSON.stringify(r)),Promise.resolve()}catch(e){return Promise.reject(e)}},i.handleMessage=function(e){try{var n=this;console.debug("@message",e);var t=JSON.parse(e.data);console.debug("@parsed",t);var o=function(){if(t.type!==r.nack){var e=function(){if(t.changes){console.warn("@client processing changes");var e=t.changes.map(function(e){return"string"==typeof e.vclock&&(e.vclock=JSON.parse(e.vclock)),e});return console.debug("@client changes",e),Promise.resolve(n.ts.applyChangesToLocalDB({changes:e})).then(function(){var e=new CustomEvent("changes",{detail:t.changes});console.debug("::: Disptaching event...",e),n.dispatchEvent(e)})}var r=function(){if(t.lastChangeId)return Promise.resolve(n.ts.updateLastPush({time:t.lastChangeTime,id:t.lastChangeId})).then(function(e){n.log.debug("Stored last push",e)})}();if(r&&r.then)return r.then(function(){})}();if(e&&e.then)return e.then(function(){})}else console.error("Sync failed",t),n.dispatchEvent(new CustomEvent("error",{detail:t}))}();return Promise.resolve(o&&o.then?o.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},l(t,[{key:"serverUrl",get:function(){return this._serverUrl}},{key:"ts",get:function(){return this._ts}},{key:"ws",get:function(){return this._ws}}]),t}(/*#__PURE__*/E(EventTarget));exports.TinySynqClient=x,exports.initTinySynq=function(e){try{var n=e.tables,r=e.preInit,t=e.postInit,i=e.logOptions,a=e.debug;if(null==n||!n.length)throw new Error("Syncable table data required");var s=new o.Logger(f({name:"tinysynq-setup"},i)),u=new p(e);return Promise.resolve(u.init()).then(function(){var e=function(e){var n=e.table,r=e.remove,t=void 0!==r&&r?"OLD":"NEW",o="\n    INSERT INTO "+u.synqPrefix+"_record_meta (table_name, row_id, source, mod, vclock)\n    SELECT table_name, row_id, source, mod, vclock\n    FROM (\n      SELECT\n        1 as peg,\n        '"+n.name+"' as table_name,\n        "+t+"."+n.id+" as row_id, \n        '"+u.deviceId+"' as source, \n        IFNULL(json_extract(vclock,'$."+u.deviceId+"'), 0) + 1 as mod, \n        json_set(IFNULL(json_extract(vclock, '$'),'{}'), '$."+u.deviceId+"', IFNULL(json_extract(vclock,'$."+u.deviceId+"'), 0) + 1) as vclock\n      FROM "+u.synqPrefix+"_record_meta\n      WHERE table_name = '"+n.name+"'\n      AND row_id = "+t+"."+n.id+"\n      UNION\n      SELECT 0 as peg, '"+n.name+"' as table_name, "+t+"."+n.id+" as row_id, '"+u.deviceId+"' as source, 1, json_object('"+u.deviceId+"', 1) as vclock\n    )\n    ORDER BY peg DESC\n    LIMIT 1\n    ON CONFLICT DO UPDATE SET\n      source = '"+u.deviceId+"',\n      mod = json_extract(excluded.vclock,'$."+u.deviceId+"'),\n      vclock = json_extract(excluded.vclock,'$'),\n      modified = '"+u.utils.utcNowAsISO8601().replace("Z","")+"'\n    ;";return s.silly(o),o},o=function(e){var n=e.table,r=e.remove,t=void 0!==r&&r?"OLD":"NEW";return"\n      UPDATE "+u.synqPrefix+"_changes\n      SET vclock = trm.vclock, source = trm.source\n      FROM (\n        SELECT vclock, source\n        FROM "+u.synqPrefix+"_record_meta\n        WHERE table_name = '"+n.name+"'\n        AND row_id = "+t+"."+n.id+"\n      ) AS trm\n      WHERE id IN (\n        SELECT id FROM "+u.synqPrefix+"_changes\n        WHERE table_name = '"+n.name+"'\n        AND row_id = "+t+"."+n.id+"\n        ORDER by id desc\n        LIMIT 1\n      );\n    "};return Promise.resolve(u.run({sql:"\n    CREATE TABLE IF NOT EXISTS "+u.synqPrefix+"_changes (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      table_name TEXT NOT NULL,\n      row_id TEXT NOT NULL,\n      data BLOB,\n      operation TEXT NOT NULL, -- 'INSERT', 'UPDATE', 'DELETE'\n      source TEXT,\n      vclock BLOB,\n      modified TIMESTAMP DATETIME DEFAULT(STRFTIME('%Y-%m-%d %H:%M:%f','NOW'))\n    );"})).then(function(){return Promise.resolve(u.run({sql:"CREATE INDEX IF NOT EXISTS "+u.synqPrefix+"_change_modified_idx ON "+u.synqPrefix+"_changes(modified)"})).then(function(){return u.run({sql:"CREATE INDEX IF NOT EXISTS "+u.synqPrefix+"_change_table_row_idx ON "+u.synqPrefix+"_changes(table_name, row_id)"}),Promise.resolve(u.run({sql:"\n    CREATE TABLE IF NOT EXISTS "+u.synqPrefix+"_pending (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      table_name TEXT NOT NULL,\n      row_id TEXT NOT NULL,\n      data BLOB,\n      operation TEXT NOT NULL, -- 'INSERT', 'UPDATE', 'DELETE',\n      source TEXT NOT NULL,\n      vclock BLOB NOT NULL,\n      modified TIMESTAMP DATETIME DEFAULT(STRFTIME('%Y-%m-%d %H:%M:%f','NOW'))\n    );"})).then(function(){return Promise.resolve(u.run({sql:"CREATE INDEX IF NOT EXISTS "+u.synqPrefix+"_pending_table_row_idx ON "+u.synqPrefix+"_pending(table_name, row_id)"})).then(function(){return Promise.resolve(u.run({sql:"\n    CREATE TABLE IF NOT EXISTS "+u.synqPrefix+"_notice (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      table_name TEXT NOT NULL,\n      row_id TEXT NOT NULL,\n      conflict BLOB,\n      message TEXT NOT NULL,\n      created TIMESTAMP DATETIME DEFAULT(STRFTIME('%Y-%m-%d %H:%M:%f','NOW'))\n    );"})).then(function(){return Promise.resolve(u.run({sql:"\n    CREATE TABLE IF NOT EXISTS "+u.synqPrefix+"_record_meta (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      table_name TEXT NOT NULL,\n      row_id TEXT NOT NULL,\n      mod INTEGER,\n      source TEXT NOT NULL,\n      vclock BLOB,\n      modified TIMESTAMP DATETIME DEFAULT(STRFTIME('%Y-%m-%d %H:%M:%f','NOW'))\n    );"})).then(function(){return Promise.resolve(u.run({sql:"CREATE UNIQUE INDEX IF NOT EXISTS "+u.synqPrefix+"_record_meta_idx ON "+u.synqPrefix+"_record_meta(table_name, row_id)"})).then(function(){return u.run({sql:"CREATE INDEX IF NOT EXISTS "+u.synqPrefix+"_record_meta_source_idx ON "+u.synqPrefix+"_record_meta(source)"}),u.run({sql:"CREATE INDEX IF NOT EXISTS "+u.synqPrefix+"_record_meta_modified_idx ON "+u.synqPrefix+"_record_meta(modified)"}),Promise.resolve(u.run({sql:"\n    CREATE TABLE IF NOT EXISTS "+u.synqPrefix+"_meta (\n      meta_name TEXT NOT NULL PRIMARY KEY,\n      meta_value TEXT NOT NULL\n    );\n  "})).then(function(){return Promise.resolve(u.run({sql:"\n    CREATE TABLE IF NOT EXISTS "+u.synqPrefix+"_dump (\n      created TIMESTAMP DATETIME DEFAULT(STRFTIME('%Y-%m-%d %H:%M:%f','NOW')), \n      table_name TEXT NOT NULL,\n      operation TEXT,\n      data BLOB\n    );\n  "})).then(function(){return Promise.resolve(u.run({sql:"CREATE INDEX IF NOT EXISTS "+u.synqPrefix+"_meta_name_idx ON "+u.synqPrefix+"_meta(meta_name)"})).then(function(){function i(){return Promise.resolve(u.setDeviceId()).then(function(){function i(){function r(e){var n=function(){if(null!=t&&t.length){var e=A(t,function(e){return s.debug("@@@\npostInit\n"+e+"\n@@@"),Promise.resolve(u.run({sql:e})).then(function(){})});if(e&&e.then)return e.then(function(){})}}();return n&&n.then?n.then(function(){return u}):u}s.debug("@"+u.synqPrefix+"_meta",u.runQuery({sql:"SELECT * FROM pragma_table_info('"+u.synqPrefix+"_meta')"})),s.debug("@SIMPLE_SELECT",u.runQuery({sql:"SELECT '@@@ that was easy @@@'"}));var i=A(n,function(n){return Promise.resolve(u.runQuery({sql:"SELECT * FROM pragma_table_info('"+n.name+"')"})).then(function(r){if(s.debug("@exists?",n.name,r),null==r||!r.length)throw new Error(n.name+" doesn't exist");return s.debug("Setting up",n.name,n.id),Promise.resolve(function(n){var r=n.table;try{return s.debug("Setting up triggers for",r.name),Promise.resolve(u.runQuery({sql:"\n      SELECT 'json_object(' || GROUP_CONCAT('''' || name || ''', NEW.' || name, ',') || ')' AS jo\n      FROM pragma_table_info('"+r.name+"');"})).then(function(n){var t=n[0],i=t.jo.replace(/NEW/g,"OLD");return s.silly("@jsonObject",JSON.stringify(t,null,2)),Promise.resolve(u.run({sql:"DROP TRIGGER IF EXISTS "+u.synqPrefix+"_after_insert_"+r.name})).then(function(){return Promise.resolve(u.run({sql:"DROP TRIGGER IF EXISTS "+u.synqPrefix+"_after_update_"+r.name})).then(function(){return Promise.resolve(u.run({sql:"DROP TRIGGER IF EXISTS "+u.synqPrefix+"_after_delete_"+r.name})).then(function(){var n="\n      CREATE TRIGGER IF NOT EXISTS "+u.synqPrefix+"_after_insert_"+r.name+"\n      AFTER INSERT ON "+r.name+"\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM "+u.synqPrefix+"_meta WHERE meta_name = 'triggers_on')='1'\n      BEGIN\n        INSERT INTO "+u.synqPrefix+"_changes (table_name, row_id, operation, data)\n        VALUES ('"+r.name+"', NEW."+r.id+", 'INSERT', "+t.jo+");\n\n        "+e({table:r})+"\n\n        "+o({table:r})+"\n      END;";return Promise.resolve(u.run({sql:n})).then(function(){var n=u.run;return Promise.resolve(function(e){try{var n=e.ts,r=e.table;return Promise.resolve(n.runQuery({sql:"SELECT * FROM pragma_table_info('"+r.name+"')"})).then(function(e){var t=function(e){if(!e.columns)throw new Error("Missing table column data to generate trigger union column selection");return e.columns.map(function(e){return"SELECT '"+e.name+"' AS col, OLD."+e.name+" AS old_val, NEW."+e.name+" AS new_val"})}({columns:e});return"\n  INSERT INTO "+n.synqPrefix+"_changes (table_name, row_id, operation, data)\n  SELECT * FROM (\n    WITH RECURSIVE all_cols AS (\n      "+t.join("\n    UNION ALL\n    ")+"\n    ),\n    changed_cols AS (\n      SELECT col, new_val\n      FROM all_cols\n      WHERE new_val != old_val\n    )\n    SELECT '"+r.name+"', NEW."+r.id+", 'UPDATE', json_group_object(col, new_val)\n    FROM changed_cols\n  );"})}catch(e){return Promise.reject(e)}}({ts:u,table:r})).then(function(a){return Promise.resolve(n.call(u,{sql:"\n      CREATE TRIGGER IF NOT EXISTS "+u.synqPrefix+"_after_update_"+r.name+"\n      AFTER UPDATE ON "+r.name+"\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM "+u.synqPrefix+"_meta WHERE meta_name = 'triggers_on')='1'\n      BEGIN\n        "+a+"\n\n        "+e({table:r})+"\n\n        "+o({table:r})+"\n      END;"})).then(function(){return Promise.resolve(u.run({sql:"\n      CREATE TRIGGER IF NOT EXISTS "+u.synqPrefix+"_after_delete_"+r.name+"\n      AFTER DELETE ON "+r.name+"\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM "+u.synqPrefix+"_meta WHERE meta_name = 'triggers_on')='1'\n      BEGIN\n        INSERT INTO "+u.synqPrefix+"_changes (table_name, row_id, operation, data)\n        VALUES ('"+r.name+"', OLD."+r.id+", 'DELETE', "+i+");\n        \n        "+e({table:r,remove:!0})+"\n        \n        "+o({table:r,remove:!0})+"\n      END;"})).then(function(){return Promise.resolve(u.run({sql:"DROP TRIGGER IF EXISTS "+u.synqPrefix+"_dump_after_insert_"+r.name})).then(function(){return Promise.resolve(u.run({sql:"DROP TRIGGER IF EXISTS "+u.synqPrefix+"_dump_after_update_"+r.name})).then(function(){return Promise.resolve(u.run({sql:"DROP TRIGGER IF EXISTS "+u.synqPrefix+"_dump_after_delete_"+r.name})).then(function(){return Promise.resolve(u.run({sql:"DROP TRIGGER IF EXISTS "+u.synqPrefix+"_dump_before_insert_record_meta"})).then(function(){return Promise.resolve(u.run({sql:"DROP TRIGGER IF EXISTS "+u.synqPrefix+"_dump_after_insert_record_meta"})).then(function(){return Promise.resolve(u.run({sql:"DROP TRIGGER IF EXISTS "+u.synqPrefix+"_dump_after_update_record_meta"})).then(function(){return Promise.resolve(u.run({sql:"\n      CREATE TRIGGER IF NOT EXISTS "+u.synqPrefix+"_dump_after_insert_"+r.name+"\n      AFTER INSERT ON "+r.name+"\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM "+u.synqPrefix+"_meta WHERE meta_name = 'debug_on')='1'\n      BEGIN\n        INSERT INTO "+u.synqPrefix+"_dump (table_name, operation, data)\n        VALUES ('"+r.name+"', 'INSERT', "+t.jo+");\n      END;"})).then(function(){return Promise.resolve(u.run({sql:"\n      CREATE TRIGGER IF NOT EXISTS "+u.synqPrefix+"_dump_after_update_"+r.name+"\n      AFTER UPDATE ON "+r.name+"\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM "+u.synqPrefix+"_meta WHERE meta_name = 'debug_on')='1'\n      BEGIN\n        INSERT INTO "+u.synqPrefix+"_dump (table_name, operation, data) VALUES ('"+r.name+"', 'UPDATE', "+t.jo+");\n      END;"})).then(function(){return Promise.resolve(u.run({sql:"\n      CREATE TRIGGER IF NOT EXISTS "+u.synqPrefix+"_dump_after_delete_"+r.name+"\n      AFTER DELETE ON "+r.name+"\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM "+u.synqPrefix+"_meta WHERE meta_name = 'debug_on')='1'\n      BEGIN\n        INSERT INTO "+u.synqPrefix+"_dump (table_name, operation, data) VALUES ('"+r.name+"', 'DELETE', "+i+");\n      END;"})).then(function(){return Promise.resolve(u.run({sql:"\n      CREATE TRIGGER IF NOT EXISTS "+u.synqPrefix+"_dump_before_insert_record_meta\n      BEFORE INSERT ON "+u.synqPrefix+"_record_meta\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM "+u.synqPrefix+"_meta WHERE meta_name = 'debug_on')='1'\n      BEGIN\n        INSERT INTO "+u.synqPrefix+"_dump (table_name, operation, data)\n        VALUES (NEW.table_name, 'BEFORE_INSERT', json_object('table_name', NEW.table_name, 'row_id', NEW.row_id, 'mod', NEW.mod, 'vclock', NEW.vclock));\n      END;"})).then(function(){return Promise.resolve(u.run({sql:"\n      CREATE TRIGGER IF NOT EXISTS "+u.synqPrefix+"_dump_after_insert_record_meta\n      AFTER INSERT ON "+u.synqPrefix+"_record_meta\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM "+u.synqPrefix+"_meta WHERE meta_name = 'debug_on')='1'\n      BEGIN\n        INSERT INTO "+u.synqPrefix+"_dump (table_name, operation, data)\n        VALUES ('"+r.name+"', 'AFTER_INSERT', json_object('table_name', NEW.table_name, 'row_id', NEW.row_id, 'mod', NEW.mod, 'vclock', NEW.vclock));\n      END;"})).then(function(){return Promise.resolve(u.run({sql:"\n      CREATE TRIGGER IF NOT EXISTS "+u.synqPrefix+"_dump_after_update_record_meta\n      AFTER UPDATE ON "+u.synqPrefix+"_record_meta\n      FOR EACH ROW\n      WHEN (SELECT meta_value FROM "+u.synqPrefix+"_meta WHERE meta_name = 'debug_on')='1'\n      BEGIN\n        INSERT INTO "+u.synqPrefix+"_dump (table_name, operation, data)\n        VALUES ('"+r.name+"', 'AFTER_UPDATE', json_object('table_name', NEW.table_name, 'row_id', NEW.row_id, 'mod', NEW.mod, 'vclock', NEW.vclock));\n      END;"})).then(function(){})})})})})})})})})})})})})})})})})})})})}catch(e){return Promise.reject(e)}}({table:n})).then(function(){u.tablesReady()})})},function(){});return i&&i.then?i.then(r):r()}var a=function(){if(null!=r&&r.length){var e=A(r,function(e){return s.debug("\n@@@ preInit\n"+e+"\n@@@"),Promise.resolve(u.run({sql:e})).then(function(){})});if(e&&e.then)return e.then(function(){})}}();return a&&a.then?a.then(i):i()})}var c=function(){if(a)return Promise.resolve(u.enableDebug()).then(function(){})}();return c&&c.then?c.then(i):i()})})})})})})})})})})})}catch(e){return Promise.reject(e)}};
//# sourceMappingURL=tinysynq.cjs.map
